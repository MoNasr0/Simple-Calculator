
Calculator.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000357e  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000036  00800060  0000357e  00003612  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000044  00800096  00800096  00003648  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00003648  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000036a4  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000118  00000000  00000000  000036e0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001454  00000000  00000000  000037f8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000008ef  00000000  00000000  00004c4c  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001280  00000000  00000000  0000553b  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000498  00000000  00000000  000067bc  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000064e  00000000  00000000  00006c54  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000009e2  00000000  00000000  000072a2  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000108  00000000  00000000  00007c84  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 ab 00 	jmp	0x156	; 0x156 <__ctors_end>
       4:	0c 94 c8 00 	jmp	0x190	; 0x190 <__bad_interrupt>
       8:	0c 94 c8 00 	jmp	0x190	; 0x190 <__bad_interrupt>
       c:	0c 94 c8 00 	jmp	0x190	; 0x190 <__bad_interrupt>
      10:	0c 94 c8 00 	jmp	0x190	; 0x190 <__bad_interrupt>
      14:	0c 94 c8 00 	jmp	0x190	; 0x190 <__bad_interrupt>
      18:	0c 94 c8 00 	jmp	0x190	; 0x190 <__bad_interrupt>
      1c:	0c 94 c8 00 	jmp	0x190	; 0x190 <__bad_interrupt>
      20:	0c 94 c8 00 	jmp	0x190	; 0x190 <__bad_interrupt>
      24:	0c 94 c8 00 	jmp	0x190	; 0x190 <__bad_interrupt>
      28:	0c 94 c8 00 	jmp	0x190	; 0x190 <__bad_interrupt>
      2c:	0c 94 c8 00 	jmp	0x190	; 0x190 <__bad_interrupt>
      30:	0c 94 c8 00 	jmp	0x190	; 0x190 <__bad_interrupt>
      34:	0c 94 c8 00 	jmp	0x190	; 0x190 <__bad_interrupt>
      38:	0c 94 c8 00 	jmp	0x190	; 0x190 <__bad_interrupt>
      3c:	0c 94 c8 00 	jmp	0x190	; 0x190 <__bad_interrupt>
      40:	0c 94 c8 00 	jmp	0x190	; 0x190 <__bad_interrupt>
      44:	0c 94 c8 00 	jmp	0x190	; 0x190 <__bad_interrupt>
      48:	0c 94 c8 00 	jmp	0x190	; 0x190 <__bad_interrupt>
      4c:	0c 94 c8 00 	jmp	0x190	; 0x190 <__bad_interrupt>
      50:	0c 94 c8 00 	jmp	0x190	; 0x190 <__bad_interrupt>

00000054 <__trampolines_end>:
      54:	6e 61       	ori	r22, 0x1E	; 30
      56:	6e 00       	.word	0x006e	; ????

00000058 <__c.2332>:
      58:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
      68:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
      78:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
      88:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
      98:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
      a8:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
      b8:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
      c8:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
      d8:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
      e8:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
      f8:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
     108:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
     118:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
     128:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
     138:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
     148:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27           .r^"....$...='

00000156 <__ctors_end>:
     156:	11 24       	eor	r1, r1
     158:	1f be       	out	0x3f, r1	; 63
     15a:	cf e5       	ldi	r28, 0x5F	; 95
     15c:	d8 e0       	ldi	r29, 0x08	; 8
     15e:	de bf       	out	0x3e, r29	; 62
     160:	cd bf       	out	0x3d, r28	; 61

00000162 <__do_copy_data>:
     162:	10 e0       	ldi	r17, 0x00	; 0
     164:	a0 e6       	ldi	r26, 0x60	; 96
     166:	b0 e0       	ldi	r27, 0x00	; 0
     168:	ee e7       	ldi	r30, 0x7E	; 126
     16a:	f5 e3       	ldi	r31, 0x35	; 53
     16c:	02 c0       	rjmp	.+4      	; 0x172 <__do_copy_data+0x10>
     16e:	05 90       	lpm	r0, Z+
     170:	0d 92       	st	X+, r0
     172:	a6 39       	cpi	r26, 0x96	; 150
     174:	b1 07       	cpc	r27, r17
     176:	d9 f7       	brne	.-10     	; 0x16e <__do_copy_data+0xc>

00000178 <__do_clear_bss>:
     178:	20 e0       	ldi	r18, 0x00	; 0
     17a:	a6 e9       	ldi	r26, 0x96	; 150
     17c:	b0 e0       	ldi	r27, 0x00	; 0
     17e:	01 c0       	rjmp	.+2      	; 0x182 <.do_clear_bss_start>

00000180 <.do_clear_bss_loop>:
     180:	1d 92       	st	X+, r1

00000182 <.do_clear_bss_start>:
     182:	aa 3d       	cpi	r26, 0xDA	; 218
     184:	b2 07       	cpc	r27, r18
     186:	e1 f7       	brne	.-8      	; 0x180 <.do_clear_bss_loop>
     188:	0e 94 ca 00 	call	0x194	; 0x194 <main>
     18c:	0c 94 bd 1a 	jmp	0x357a	; 0x357a <_exit>

00000190 <__bad_interrupt>:
     190:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000194 <main>:
void _convert(u8* , u64* );
u64 power(u64 ,u64 );
void convertToString(s64 , u8 *);

int main(void)
{
     194:	2f 92       	push	r2
     196:	3f 92       	push	r3
     198:	4f 92       	push	r4
     19a:	5f 92       	push	r5
     19c:	6f 92       	push	r6
     19e:	7f 92       	push	r7
     1a0:	8f 92       	push	r8
     1a2:	9f 92       	push	r9
     1a4:	af 92       	push	r10
     1a6:	bf 92       	push	r11
     1a8:	cf 92       	push	r12
     1aa:	df 92       	push	r13
     1ac:	ef 92       	push	r14
     1ae:	ff 92       	push	r15
     1b0:	0f 93       	push	r16
     1b2:	1f 93       	push	r17
     1b4:	cf 93       	push	r28
     1b6:	df 93       	push	r29
     1b8:	cd b7       	in	r28, 0x3d	; 61
     1ba:	de b7       	in	r29, 0x3e	; 62
     1bc:	aa 97       	sbiw	r28, 0x2a	; 42
     1be:	0f b6       	in	r0, 0x3f	; 63
     1c0:	f8 94       	cli
     1c2:	de bf       	out	0x3e, r29	; 62
     1c4:	0f be       	out	0x3f, r0	; 63
     1c6:	cd bf       	out	0x3d, r28	; 61
//	SetBit(_DDRD, 0);
	H_Lcd_Init();
     1c8:	0e 94 04 09 	call	0x1208	; 0x1208 <H_Lcd_Init>
	H_Keypad_Init();
     1cc:	0e 94 e0 07 	call	0xfc0	; 0xfc0 <H_Keypad_Init>
	H_Lcd_WriteString("Hi :)");
     1d0:	81 e6       	ldi	r24, 0x61	; 97
     1d2:	90 e0       	ldi	r25, 0x00	; 0
     1d4:	0e 94 e0 0d 	call	0x1bc0	; 0x1bc0 <H_Lcd_WriteString>
	H_Lcd_GoTo(1,0);
     1d8:	60 e0       	ldi	r22, 0x00	; 0
     1da:	81 e0       	ldi	r24, 0x01	; 1
     1dc:	0e 94 5f 0e 	call	0x1cbe	; 0x1cbe <H_Lcd_GoTo>
	H_Lcd_WriteString("Simple Calculator ;)");
     1e0:	87 e6       	ldi	r24, 0x67	; 103
     1e2:	90 e0       	ldi	r25, 0x00	; 0
     1e4:	0e 94 e0 0d 	call	0x1bc0	; 0x1bc0 <H_Lcd_WriteString>
	for (cnt = 0; cnt<5; cnt++)
     1e8:	10 92 c4 00 	sts	0x00C4, r1	; 0x8000c4 <cnt>
     1ec:	79 c0       	rjmp	.+242    	; 0x2e0 <main+0x14c>
	{
		H_Lcd_ShiftLeft();
     1ee:	0e 94 81 0e 	call	0x1d02	; 0x1d02 <H_Lcd_ShiftLeft>
     1f2:	80 e0       	ldi	r24, 0x00	; 0
     1f4:	90 e0       	ldi	r25, 0x00	; 0
     1f6:	aa ef       	ldi	r26, 0xFA	; 250
     1f8:	b3 e4       	ldi	r27, 0x43	; 67
     1fa:	89 87       	std	Y+9, r24	; 0x09
     1fc:	9a 87       	std	Y+10, r25	; 0x0a
     1fe:	ab 87       	std	Y+11, r26	; 0x0b
     200:	bc 87       	std	Y+12, r27	; 0x0c

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
     202:	20 e0       	ldi	r18, 0x00	; 0
     204:	30 e0       	ldi	r19, 0x00	; 0
     206:	4a e7       	ldi	r20, 0x7A	; 122
     208:	55 e4       	ldi	r21, 0x45	; 69
     20a:	69 85       	ldd	r22, Y+9	; 0x09
     20c:	7a 85       	ldd	r23, Y+10	; 0x0a
     20e:	8b 85       	ldd	r24, Y+11	; 0x0b
     210:	9c 85       	ldd	r25, Y+12	; 0x0c
     212:	0e 94 98 13 	call	0x2730	; 0x2730 <__mulsf3>
     216:	dc 01       	movw	r26, r24
     218:	cb 01       	movw	r24, r22
     21a:	8d 87       	std	Y+13, r24	; 0x0d
     21c:	9e 87       	std	Y+14, r25	; 0x0e
     21e:	af 87       	std	Y+15, r26	; 0x0f
     220:	b8 8b       	std	Y+16, r27	; 0x10
	if (__tmp < 1.0)
     222:	20 e0       	ldi	r18, 0x00	; 0
     224:	30 e0       	ldi	r19, 0x00	; 0
     226:	40 e8       	ldi	r20, 0x80	; 128
     228:	5f e3       	ldi	r21, 0x3F	; 63
     22a:	6d 85       	ldd	r22, Y+13	; 0x0d
     22c:	7e 85       	ldd	r23, Y+14	; 0x0e
     22e:	8f 85       	ldd	r24, Y+15	; 0x0f
     230:	98 89       	ldd	r25, Y+16	; 0x10
     232:	0e 94 24 12 	call	0x2448	; 0x2448 <__cmpsf2>
     236:	88 23       	and	r24, r24
     238:	2c f4       	brge	.+10     	; 0x244 <main+0xb0>
		__ticks = 1;
     23a:	81 e0       	ldi	r24, 0x01	; 1
     23c:	90 e0       	ldi	r25, 0x00	; 0
     23e:	9a 8b       	std	Y+18, r25	; 0x12
     240:	89 8b       	std	Y+17, r24	; 0x11
     242:	3f c0       	rjmp	.+126    	; 0x2c2 <main+0x12e>
	else if (__tmp > 65535)
     244:	20 e0       	ldi	r18, 0x00	; 0
     246:	3f ef       	ldi	r19, 0xFF	; 255
     248:	4f e7       	ldi	r20, 0x7F	; 127
     24a:	57 e4       	ldi	r21, 0x47	; 71
     24c:	6d 85       	ldd	r22, Y+13	; 0x0d
     24e:	7e 85       	ldd	r23, Y+14	; 0x0e
     250:	8f 85       	ldd	r24, Y+15	; 0x0f
     252:	98 89       	ldd	r25, Y+16	; 0x10
     254:	0e 94 93 13 	call	0x2726	; 0x2726 <__gesf2>
     258:	18 16       	cp	r1, r24
     25a:	4c f5       	brge	.+82     	; 0x2ae <main+0x11a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     25c:	20 e0       	ldi	r18, 0x00	; 0
     25e:	30 e0       	ldi	r19, 0x00	; 0
     260:	40 e2       	ldi	r20, 0x20	; 32
     262:	51 e4       	ldi	r21, 0x41	; 65
     264:	69 85       	ldd	r22, Y+9	; 0x09
     266:	7a 85       	ldd	r23, Y+10	; 0x0a
     268:	8b 85       	ldd	r24, Y+11	; 0x0b
     26a:	9c 85       	ldd	r25, Y+12	; 0x0c
     26c:	0e 94 98 13 	call	0x2730	; 0x2730 <__mulsf3>
     270:	dc 01       	movw	r26, r24
     272:	cb 01       	movw	r24, r22
     274:	bc 01       	movw	r22, r24
     276:	cd 01       	movw	r24, r26
     278:	0e 94 9b 12 	call	0x2536	; 0x2536 <__fixunssfsi>
     27c:	dc 01       	movw	r26, r24
     27e:	cb 01       	movw	r24, r22
     280:	9a 8b       	std	Y+18, r25	; 0x12
     282:	89 8b       	std	Y+17, r24	; 0x11
     284:	0f c0       	rjmp	.+30     	; 0x2a4 <main+0x110>
     286:	80 e9       	ldi	r24, 0x90	; 144
     288:	91 e0       	ldi	r25, 0x01	; 1
     28a:	9c 8b       	std	Y+20, r25	; 0x14
     28c:	8b 8b       	std	Y+19, r24	; 0x13
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     28e:	8b 89       	ldd	r24, Y+19	; 0x13
     290:	9c 89       	ldd	r25, Y+20	; 0x14
     292:	01 97       	sbiw	r24, 0x01	; 1
     294:	f1 f7       	brne	.-4      	; 0x292 <main+0xfe>
     296:	9c 8b       	std	Y+20, r25	; 0x14
     298:	8b 8b       	std	Y+19, r24	; 0x13
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     29a:	89 89       	ldd	r24, Y+17	; 0x11
     29c:	9a 89       	ldd	r25, Y+18	; 0x12
     29e:	01 97       	sbiw	r24, 0x01	; 1
     2a0:	9a 8b       	std	Y+18, r25	; 0x12
     2a2:	89 8b       	std	Y+17, r24	; 0x11
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     2a4:	89 89       	ldd	r24, Y+17	; 0x11
     2a6:	9a 89       	ldd	r25, Y+18	; 0x12
     2a8:	89 2b       	or	r24, r25
     2aa:	69 f7       	brne	.-38     	; 0x286 <main+0xf2>
     2ac:	14 c0       	rjmp	.+40     	; 0x2d6 <main+0x142>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     2ae:	6d 85       	ldd	r22, Y+13	; 0x0d
     2b0:	7e 85       	ldd	r23, Y+14	; 0x0e
     2b2:	8f 85       	ldd	r24, Y+15	; 0x0f
     2b4:	98 89       	ldd	r25, Y+16	; 0x10
     2b6:	0e 94 9b 12 	call	0x2536	; 0x2536 <__fixunssfsi>
     2ba:	dc 01       	movw	r26, r24
     2bc:	cb 01       	movw	r24, r22
     2be:	9a 8b       	std	Y+18, r25	; 0x12
     2c0:	89 8b       	std	Y+17, r24	; 0x11
     2c2:	89 89       	ldd	r24, Y+17	; 0x11
     2c4:	9a 89       	ldd	r25, Y+18	; 0x12
     2c6:	9e 8b       	std	Y+22, r25	; 0x16
     2c8:	8d 8b       	std	Y+21, r24	; 0x15
     2ca:	8d 89       	ldd	r24, Y+21	; 0x15
     2cc:	9e 89       	ldd	r25, Y+22	; 0x16
     2ce:	01 97       	sbiw	r24, 0x01	; 1
     2d0:	f1 f7       	brne	.-4      	; 0x2ce <main+0x13a>
     2d2:	9e 8b       	std	Y+22, r25	; 0x16
     2d4:	8d 8b       	std	Y+21, r24	; 0x15
	H_Lcd_Init();
	H_Keypad_Init();
	H_Lcd_WriteString("Hi :)");
	H_Lcd_GoTo(1,0);
	H_Lcd_WriteString("Simple Calculator ;)");
	for (cnt = 0; cnt<5; cnt++)
     2d6:	80 91 c4 00 	lds	r24, 0x00C4	; 0x8000c4 <cnt>
     2da:	8f 5f       	subi	r24, 0xFF	; 255
     2dc:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <cnt>
     2e0:	80 91 c4 00 	lds	r24, 0x00C4	; 0x8000c4 <cnt>
     2e4:	85 30       	cpi	r24, 0x05	; 5
     2e6:	08 f4       	brcc	.+2      	; 0x2ea <main+0x156>
     2e8:	82 cf       	rjmp	.-252    	; 0x1ee <main+0x5a>
	{
		H_Lcd_ShiftLeft();
		_delay_ms(500);
	}
	cnt = 0;
     2ea:	10 92 c4 00 	sts	0x00C4, r1	; 0x8000c4 <cnt>
     2ee:	80 e0       	ldi	r24, 0x00	; 0
     2f0:	90 e0       	ldi	r25, 0x00	; 0
     2f2:	a8 ec       	ldi	r26, 0xC8	; 200
     2f4:	b2 e4       	ldi	r27, 0x42	; 66
     2f6:	89 83       	std	Y+1, r24	; 0x01
     2f8:	9a 83       	std	Y+2, r25	; 0x02
     2fa:	ab 83       	std	Y+3, r26	; 0x03
     2fc:	bc 83       	std	Y+4, r27	; 0x04

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
     2fe:	20 e0       	ldi	r18, 0x00	; 0
     300:	30 e0       	ldi	r19, 0x00	; 0
     302:	4a e7       	ldi	r20, 0x7A	; 122
     304:	55 e4       	ldi	r21, 0x45	; 69
     306:	69 81       	ldd	r22, Y+1	; 0x01
     308:	7a 81       	ldd	r23, Y+2	; 0x02
     30a:	8b 81       	ldd	r24, Y+3	; 0x03
     30c:	9c 81       	ldd	r25, Y+4	; 0x04
     30e:	0e 94 98 13 	call	0x2730	; 0x2730 <__mulsf3>
     312:	dc 01       	movw	r26, r24
     314:	cb 01       	movw	r24, r22
     316:	8f 8b       	std	Y+23, r24	; 0x17
     318:	98 8f       	std	Y+24, r25	; 0x18
     31a:	a9 8f       	std	Y+25, r26	; 0x19
     31c:	ba 8f       	std	Y+26, r27	; 0x1a
	if (__tmp < 1.0)
     31e:	20 e0       	ldi	r18, 0x00	; 0
     320:	30 e0       	ldi	r19, 0x00	; 0
     322:	40 e8       	ldi	r20, 0x80	; 128
     324:	5f e3       	ldi	r21, 0x3F	; 63
     326:	6f 89       	ldd	r22, Y+23	; 0x17
     328:	78 8d       	ldd	r23, Y+24	; 0x18
     32a:	89 8d       	ldd	r24, Y+25	; 0x19
     32c:	9a 8d       	ldd	r25, Y+26	; 0x1a
     32e:	0e 94 24 12 	call	0x2448	; 0x2448 <__cmpsf2>
     332:	88 23       	and	r24, r24
     334:	2c f4       	brge	.+10     	; 0x340 <main+0x1ac>
		__ticks = 1;
     336:	81 e0       	ldi	r24, 0x01	; 1
     338:	90 e0       	ldi	r25, 0x00	; 0
     33a:	9c 8f       	std	Y+28, r25	; 0x1c
     33c:	8b 8f       	std	Y+27, r24	; 0x1b
     33e:	3f c0       	rjmp	.+126    	; 0x3be <main+0x22a>
	else if (__tmp > 65535)
     340:	20 e0       	ldi	r18, 0x00	; 0
     342:	3f ef       	ldi	r19, 0xFF	; 255
     344:	4f e7       	ldi	r20, 0x7F	; 127
     346:	57 e4       	ldi	r21, 0x47	; 71
     348:	6f 89       	ldd	r22, Y+23	; 0x17
     34a:	78 8d       	ldd	r23, Y+24	; 0x18
     34c:	89 8d       	ldd	r24, Y+25	; 0x19
     34e:	9a 8d       	ldd	r25, Y+26	; 0x1a
     350:	0e 94 93 13 	call	0x2726	; 0x2726 <__gesf2>
     354:	18 16       	cp	r1, r24
     356:	4c f5       	brge	.+82     	; 0x3aa <main+0x216>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     358:	20 e0       	ldi	r18, 0x00	; 0
     35a:	30 e0       	ldi	r19, 0x00	; 0
     35c:	40 e2       	ldi	r20, 0x20	; 32
     35e:	51 e4       	ldi	r21, 0x41	; 65
     360:	69 81       	ldd	r22, Y+1	; 0x01
     362:	7a 81       	ldd	r23, Y+2	; 0x02
     364:	8b 81       	ldd	r24, Y+3	; 0x03
     366:	9c 81       	ldd	r25, Y+4	; 0x04
     368:	0e 94 98 13 	call	0x2730	; 0x2730 <__mulsf3>
     36c:	dc 01       	movw	r26, r24
     36e:	cb 01       	movw	r24, r22
     370:	bc 01       	movw	r22, r24
     372:	cd 01       	movw	r24, r26
     374:	0e 94 9b 12 	call	0x2536	; 0x2536 <__fixunssfsi>
     378:	dc 01       	movw	r26, r24
     37a:	cb 01       	movw	r24, r22
     37c:	9c 8f       	std	Y+28, r25	; 0x1c
     37e:	8b 8f       	std	Y+27, r24	; 0x1b
     380:	0f c0       	rjmp	.+30     	; 0x3a0 <main+0x20c>
     382:	80 e9       	ldi	r24, 0x90	; 144
     384:	91 e0       	ldi	r25, 0x01	; 1
     386:	9e 8f       	std	Y+30, r25	; 0x1e
     388:	8d 8f       	std	Y+29, r24	; 0x1d
     38a:	8d 8d       	ldd	r24, Y+29	; 0x1d
     38c:	9e 8d       	ldd	r25, Y+30	; 0x1e
     38e:	01 97       	sbiw	r24, 0x01	; 1
     390:	f1 f7       	brne	.-4      	; 0x38e <main+0x1fa>
     392:	9e 8f       	std	Y+30, r25	; 0x1e
     394:	8d 8f       	std	Y+29, r24	; 0x1d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     396:	8b 8d       	ldd	r24, Y+27	; 0x1b
     398:	9c 8d       	ldd	r25, Y+28	; 0x1c
     39a:	01 97       	sbiw	r24, 0x01	; 1
     39c:	9c 8f       	std	Y+28, r25	; 0x1c
     39e:	8b 8f       	std	Y+27, r24	; 0x1b
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     3a0:	8b 8d       	ldd	r24, Y+27	; 0x1b
     3a2:	9c 8d       	ldd	r25, Y+28	; 0x1c
     3a4:	89 2b       	or	r24, r25
     3a6:	69 f7       	brne	.-38     	; 0x382 <main+0x1ee>
     3a8:	14 c0       	rjmp	.+40     	; 0x3d2 <main+0x23e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     3aa:	6f 89       	ldd	r22, Y+23	; 0x17
     3ac:	78 8d       	ldd	r23, Y+24	; 0x18
     3ae:	89 8d       	ldd	r24, Y+25	; 0x19
     3b0:	9a 8d       	ldd	r25, Y+26	; 0x1a
     3b2:	0e 94 9b 12 	call	0x2536	; 0x2536 <__fixunssfsi>
     3b6:	dc 01       	movw	r26, r24
     3b8:	cb 01       	movw	r24, r22
     3ba:	9c 8f       	std	Y+28, r25	; 0x1c
     3bc:	8b 8f       	std	Y+27, r24	; 0x1b
     3be:	8b 8d       	ldd	r24, Y+27	; 0x1b
     3c0:	9c 8d       	ldd	r25, Y+28	; 0x1c
     3c2:	98 a3       	std	Y+32, r25	; 0x20
     3c4:	8f 8f       	std	Y+31, r24	; 0x1f
     3c6:	8f 8d       	ldd	r24, Y+31	; 0x1f
     3c8:	98 a1       	ldd	r25, Y+32	; 0x20
     3ca:	01 97       	sbiw	r24, 0x01	; 1
     3cc:	f1 f7       	brne	.-4      	; 0x3ca <main+0x236>
     3ce:	98 a3       	std	Y+32, r25	; 0x20
     3d0:	8f 8f       	std	Y+31, r24	; 0x1f
	_delay_ms(100);
	H_Lcd_Clr();
     3d2:	0e 94 54 0e 	call	0x1ca8	; 0x1ca8 <H_Lcd_Clr>
	memset(String, 0, 16);
     3d6:	40 e1       	ldi	r20, 0x10	; 16
     3d8:	50 e0       	ldi	r21, 0x00	; 0
     3da:	60 e0       	ldi	r22, 0x00	; 0
     3dc:	70 e0       	ldi	r23, 0x00	; 0
     3de:	8e e9       	ldi	r24, 0x9E	; 158
     3e0:	90 e0       	ldi	r25, 0x00	; 0
     3e2:	0e 94 cb 19 	call	0x3396	; 0x3396 <memset>
    while (1) 
    {
		label:
		H_Lcd_GoTo(0,i);
     3e6:	80 91 ae 00 	lds	r24, 0x00AE	; 0x8000ae <i>
     3ea:	68 2f       	mov	r22, r24
     3ec:	80 e0       	ldi	r24, 0x00	; 0
     3ee:	0e 94 5f 0e 	call	0x1cbe	; 0x1cbe <H_Lcd_GoTo>
		c = H_Keypad_Read();
     3f2:	0e 94 28 08 	call	0x1050	; 0x1050 <H_Keypad_Read>
     3f6:	80 93 af 00 	sts	0x00AF, r24	; 0x8000af <c>
		
		if(c != '\0')
     3fa:	80 91 af 00 	lds	r24, 0x00AF	; 0x8000af <c>
     3fe:	88 23       	and	r24, r24
     400:	91 f3       	breq	.-28     	; 0x3e6 <main+0x252>
		{
			flag = 1;
     402:	81 e0       	ldi	r24, 0x01	; 1
     404:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>
			if(i > 16)
     408:	80 91 ae 00 	lds	r24, 0x00AE	; 0x8000ae <i>
     40c:	81 31       	cpi	r24, 0x11	; 17
     40e:	60 f0       	brcs	.+24     	; 0x428 <__EEPROM_REGION_LENGTH__+0x28>
			{
				memset(String, 0, 16);
     410:	40 e1       	ldi	r20, 0x10	; 16
     412:	50 e0       	ldi	r21, 0x00	; 0
     414:	60 e0       	ldi	r22, 0x00	; 0
     416:	70 e0       	ldi	r23, 0x00	; 0
     418:	8e e9       	ldi	r24, 0x9E	; 158
     41a:	90 e0       	ldi	r25, 0x00	; 0
     41c:	0e 94 cb 19 	call	0x3396	; 0x3396 <memset>
				i = 0;
     420:	10 92 ae 00 	sts	0x00AE, r1	; 0x8000ae <i>
				H_Lcd_Clr();
     424:	0e 94 54 0e 	call	0x1ca8	; 0x1ca8 <H_Lcd_Clr>
			}
    
			if(c != '='){ H_Lcd_Clr();H_Lcd_WriteCharacter(c);}
     428:	80 91 af 00 	lds	r24, 0x00AF	; 0x8000af <c>
     42c:	8d 33       	cpi	r24, 0x3D	; 61
     42e:	39 f0       	breq	.+14     	; 0x43e <__EEPROM_REGION_LENGTH__+0x3e>
     430:	0e 94 54 0e 	call	0x1ca8	; 0x1ca8 <H_Lcd_Clr>
     434:	80 91 af 00 	lds	r24, 0x00AF	; 0x8000af <c>
     438:	0e 94 bc 09 	call	0x1378	; 0x1378 <H_Lcd_WriteCharacter>
     43c:	5b c2       	rjmp	.+1206   	; 0x8f4 <__stack+0x95>
			else if(c == '=')
     43e:	80 91 af 00 	lds	r24, 0x00AF	; 0x8000af <c>
     442:	8d 33       	cpi	r24, 0x3D	; 61
     444:	09 f0       	breq	.+2      	; 0x448 <__EEPROM_REGION_LENGTH__+0x48>
     446:	56 c2       	rjmp	.+1196   	; 0x8f4 <__stack+0x95>
			{
				_convert(String, &Number2);
     448:	68 eb       	ldi	r22, 0xB8	; 184
     44a:	70 e0       	ldi	r23, 0x00	; 0
     44c:	8e e9       	ldi	r24, 0x9E	; 158
     44e:	90 e0       	ldi	r25, 0x00	; 0
     450:	0e 94 8a 05 	call	0xb14	; 0xb14 <_convert>
				
				switch(operation)
     454:	80 91 c5 00 	lds	r24, 0x00C5	; 0x8000c5 <operation>
     458:	88 2f       	mov	r24, r24
     45a:	90 e0       	ldi	r25, 0x00	; 0
     45c:	8b 32       	cpi	r24, 0x2B	; 43
     45e:	91 05       	cpc	r25, r1
     460:	79 f0       	breq	.+30     	; 0x480 <__EEPROM_REGION_LENGTH__+0x80>
     462:	8c 32       	cpi	r24, 0x2C	; 44
     464:	91 05       	cpc	r25, r1
     466:	24 f4       	brge	.+8      	; 0x470 <__EEPROM_REGION_LENGTH__+0x70>
     468:	8a 97       	sbiw	r24, 0x2a	; 42
     46a:	09 f4       	brne	.+2      	; 0x46e <__EEPROM_REGION_LENGTH__+0x6e>
     46c:	9f c0       	rjmp	.+318    	; 0x5ac <__EEPROM_REGION_LENGTH__+0x1ac>
				{
					case '+' : result = (Number1 + Number2); break;
					case '-' : result = (Number1 - Number2); break;
					case '*' : result = (Number1 * Number2); break;
					case '/' : result2 = ((f64)Number1 / (f64)Number2); break;
					default  :					                  break;
     46e:	3a c1       	rjmp	.+628    	; 0x6e4 <__EEPROM_REGION_LENGTH__+0x2e4>
			if(c != '='){ H_Lcd_Clr();H_Lcd_WriteCharacter(c);}
			else if(c == '=')
			{
				_convert(String, &Number2);
				
				switch(operation)
     470:	8d 32       	cpi	r24, 0x2D	; 45
     472:	91 05       	cpc	r25, r1
     474:	09 f4       	brne	.+2      	; 0x478 <__EEPROM_REGION_LENGTH__+0x78>
     476:	4f c0       	rjmp	.+158    	; 0x516 <__EEPROM_REGION_LENGTH__+0x116>
     478:	8f 97       	sbiw	r24, 0x2f	; 47
     47a:	09 f4       	brne	.+2      	; 0x47e <__EEPROM_REGION_LENGTH__+0x7e>
     47c:	ea c0       	rjmp	.+468    	; 0x652 <__EEPROM_REGION_LENGTH__+0x252>
				{
					case '+' : result = (Number1 + Number2); break;
					case '-' : result = (Number1 - Number2); break;
					case '*' : result = (Number1 * Number2); break;
					case '/' : result2 = ((f64)Number1 / (f64)Number2); break;
					default  :					                  break;
     47e:	32 c1       	rjmp	.+612    	; 0x6e4 <__EEPROM_REGION_LENGTH__+0x2e4>
			{
				_convert(String, &Number2);
				
				switch(operation)
				{
					case '+' : result = (Number1 + Number2); break;
     480:	a0 90 b0 00 	lds	r10, 0x00B0	; 0x8000b0 <Number1>
     484:	b0 90 b1 00 	lds	r11, 0x00B1	; 0x8000b1 <Number1+0x1>
     488:	c0 90 b2 00 	lds	r12, 0x00B2	; 0x8000b2 <Number1+0x2>
     48c:	d0 90 b3 00 	lds	r13, 0x00B3	; 0x8000b3 <Number1+0x3>
     490:	e0 90 b4 00 	lds	r14, 0x00B4	; 0x8000b4 <Number1+0x4>
     494:	f0 90 b5 00 	lds	r15, 0x00B5	; 0x8000b5 <Number1+0x5>
     498:	00 91 b6 00 	lds	r16, 0x00B6	; 0x8000b6 <Number1+0x6>
     49c:	10 91 b7 00 	lds	r17, 0x00B7	; 0x8000b7 <Number1+0x7>
     4a0:	20 90 b8 00 	lds	r2, 0x00B8	; 0x8000b8 <Number2>
     4a4:	30 90 b9 00 	lds	r3, 0x00B9	; 0x8000b9 <Number2+0x1>
     4a8:	40 90 ba 00 	lds	r4, 0x00BA	; 0x8000ba <Number2+0x2>
     4ac:	50 90 bb 00 	lds	r5, 0x00BB	; 0x8000bb <Number2+0x3>
     4b0:	60 90 bc 00 	lds	r6, 0x00BC	; 0x8000bc <Number2+0x4>
     4b4:	70 90 bd 00 	lds	r7, 0x00BD	; 0x8000bd <Number2+0x5>
     4b8:	80 90 be 00 	lds	r8, 0x00BE	; 0x8000be <Number2+0x6>
     4bc:	90 90 bf 00 	lds	r9, 0x00BF	; 0x8000bf <Number2+0x7>
     4c0:	2a 2d       	mov	r18, r10
     4c2:	3b 2d       	mov	r19, r11
     4c4:	4c 2d       	mov	r20, r12
     4c6:	5d 2d       	mov	r21, r13
     4c8:	6e 2d       	mov	r22, r14
     4ca:	7f 2d       	mov	r23, r15
     4cc:	80 2f       	mov	r24, r16
     4ce:	91 2f       	mov	r25, r17
     4d0:	a2 2c       	mov	r10, r2
     4d2:	b3 2c       	mov	r11, r3
     4d4:	c4 2c       	mov	r12, r4
     4d6:	d5 2c       	mov	r13, r5
     4d8:	e6 2c       	mov	r14, r6
     4da:	f7 2c       	mov	r15, r7
     4dc:	08 2d       	mov	r16, r8
     4de:	19 2d       	mov	r17, r9
     4e0:	0e 94 b2 18 	call	0x3164	; 0x3164 <__adddi3>
     4e4:	a2 2e       	mov	r10, r18
     4e6:	b3 2e       	mov	r11, r19
     4e8:	c4 2e       	mov	r12, r20
     4ea:	d5 2e       	mov	r13, r21
     4ec:	e6 2e       	mov	r14, r22
     4ee:	f7 2e       	mov	r15, r23
     4f0:	08 2f       	mov	r16, r24
     4f2:	19 2f       	mov	r17, r25
     4f4:	a0 92 96 00 	sts	0x0096, r10	; 0x800096 <__data_end>
     4f8:	b0 92 97 00 	sts	0x0097, r11	; 0x800097 <__data_end+0x1>
     4fc:	c0 92 98 00 	sts	0x0098, r12	; 0x800098 <__data_end+0x2>
     500:	d0 92 99 00 	sts	0x0099, r13	; 0x800099 <__data_end+0x3>
     504:	e0 92 9a 00 	sts	0x009A, r14	; 0x80009a <__data_end+0x4>
     508:	f0 92 9b 00 	sts	0x009B, r15	; 0x80009b <__data_end+0x5>
     50c:	00 93 9c 00 	sts	0x009C, r16	; 0x80009c <__data_end+0x6>
     510:	10 93 9d 00 	sts	0x009D, r17	; 0x80009d <__data_end+0x7>
     514:	e7 c0       	rjmp	.+462    	; 0x6e4 <__EEPROM_REGION_LENGTH__+0x2e4>
					case '-' : result = (Number1 - Number2); break;
     516:	a0 90 b0 00 	lds	r10, 0x00B0	; 0x8000b0 <Number1>
     51a:	b0 90 b1 00 	lds	r11, 0x00B1	; 0x8000b1 <Number1+0x1>
     51e:	c0 90 b2 00 	lds	r12, 0x00B2	; 0x8000b2 <Number1+0x2>
     522:	d0 90 b3 00 	lds	r13, 0x00B3	; 0x8000b3 <Number1+0x3>
     526:	e0 90 b4 00 	lds	r14, 0x00B4	; 0x8000b4 <Number1+0x4>
     52a:	f0 90 b5 00 	lds	r15, 0x00B5	; 0x8000b5 <Number1+0x5>
     52e:	00 91 b6 00 	lds	r16, 0x00B6	; 0x8000b6 <Number1+0x6>
     532:	10 91 b7 00 	lds	r17, 0x00B7	; 0x8000b7 <Number1+0x7>
     536:	20 90 b8 00 	lds	r2, 0x00B8	; 0x8000b8 <Number2>
     53a:	30 90 b9 00 	lds	r3, 0x00B9	; 0x8000b9 <Number2+0x1>
     53e:	40 90 ba 00 	lds	r4, 0x00BA	; 0x8000ba <Number2+0x2>
     542:	50 90 bb 00 	lds	r5, 0x00BB	; 0x8000bb <Number2+0x3>
     546:	60 90 bc 00 	lds	r6, 0x00BC	; 0x8000bc <Number2+0x4>
     54a:	70 90 bd 00 	lds	r7, 0x00BD	; 0x8000bd <Number2+0x5>
     54e:	80 90 be 00 	lds	r8, 0x00BE	; 0x8000be <Number2+0x6>
     552:	90 90 bf 00 	lds	r9, 0x00BF	; 0x8000bf <Number2+0x7>
     556:	2a 2d       	mov	r18, r10
     558:	3b 2d       	mov	r19, r11
     55a:	4c 2d       	mov	r20, r12
     55c:	5d 2d       	mov	r21, r13
     55e:	6e 2d       	mov	r22, r14
     560:	7f 2d       	mov	r23, r15
     562:	80 2f       	mov	r24, r16
     564:	91 2f       	mov	r25, r17
     566:	a2 2c       	mov	r10, r2
     568:	b3 2c       	mov	r11, r3
     56a:	c4 2c       	mov	r12, r4
     56c:	d5 2c       	mov	r13, r5
     56e:	e6 2c       	mov	r14, r6
     570:	f7 2c       	mov	r15, r7
     572:	08 2d       	mov	r16, r8
     574:	19 2d       	mov	r17, r9
     576:	0e 94 bb 18 	call	0x3176	; 0x3176 <__subdi3>
     57a:	a2 2e       	mov	r10, r18
     57c:	b3 2e       	mov	r11, r19
     57e:	c4 2e       	mov	r12, r20
     580:	d5 2e       	mov	r13, r21
     582:	e6 2e       	mov	r14, r22
     584:	f7 2e       	mov	r15, r23
     586:	08 2f       	mov	r16, r24
     588:	19 2f       	mov	r17, r25
     58a:	a0 92 96 00 	sts	0x0096, r10	; 0x800096 <__data_end>
     58e:	b0 92 97 00 	sts	0x0097, r11	; 0x800097 <__data_end+0x1>
     592:	c0 92 98 00 	sts	0x0098, r12	; 0x800098 <__data_end+0x2>
     596:	d0 92 99 00 	sts	0x0099, r13	; 0x800099 <__data_end+0x3>
     59a:	e0 92 9a 00 	sts	0x009A, r14	; 0x80009a <__data_end+0x4>
     59e:	f0 92 9b 00 	sts	0x009B, r15	; 0x80009b <__data_end+0x5>
     5a2:	00 93 9c 00 	sts	0x009C, r16	; 0x80009c <__data_end+0x6>
     5a6:	10 93 9d 00 	sts	0x009D, r17	; 0x80009d <__data_end+0x7>
     5aa:	9c c0       	rjmp	.+312    	; 0x6e4 <__EEPROM_REGION_LENGTH__+0x2e4>
					case '*' : result = (Number1 * Number2); break;
     5ac:	20 90 b0 00 	lds	r2, 0x00B0	; 0x8000b0 <Number1>
     5b0:	30 90 b1 00 	lds	r3, 0x00B1	; 0x8000b1 <Number1+0x1>
     5b4:	40 90 b2 00 	lds	r4, 0x00B2	; 0x8000b2 <Number1+0x2>
     5b8:	50 90 b3 00 	lds	r5, 0x00B3	; 0x8000b3 <Number1+0x3>
     5bc:	60 90 b4 00 	lds	r6, 0x00B4	; 0x8000b4 <Number1+0x4>
     5c0:	70 90 b5 00 	lds	r7, 0x00B5	; 0x8000b5 <Number1+0x5>
     5c4:	80 90 b6 00 	lds	r8, 0x00B6	; 0x8000b6 <Number1+0x6>
     5c8:	90 90 b7 00 	lds	r9, 0x00B7	; 0x8000b7 <Number1+0x7>
     5cc:	20 91 b8 00 	lds	r18, 0x00B8	; 0x8000b8 <Number2>
     5d0:	30 91 b9 00 	lds	r19, 0x00B9	; 0x8000b9 <Number2+0x1>
     5d4:	40 91 ba 00 	lds	r20, 0x00BA	; 0x8000ba <Number2+0x2>
     5d8:	50 91 bb 00 	lds	r21, 0x00BB	; 0x8000bb <Number2+0x3>
     5dc:	60 91 bc 00 	lds	r22, 0x00BC	; 0x8000bc <Number2+0x4>
     5e0:	70 91 bd 00 	lds	r23, 0x00BD	; 0x8000bd <Number2+0x5>
     5e4:	80 91 be 00 	lds	r24, 0x00BE	; 0x8000be <Number2+0x6>
     5e8:	90 91 bf 00 	lds	r25, 0x00BF	; 0x8000bf <Number2+0x7>
     5ec:	a2 2e       	mov	r10, r18
     5ee:	b3 2e       	mov	r11, r19
     5f0:	c4 2e       	mov	r12, r20
     5f2:	d5 2e       	mov	r13, r21
     5f4:	e6 2e       	mov	r14, r22
     5f6:	f7 2e       	mov	r15, r23
     5f8:	08 2f       	mov	r16, r24
     5fa:	19 2f       	mov	r17, r25
     5fc:	22 2d       	mov	r18, r2
     5fe:	33 2d       	mov	r19, r3
     600:	44 2d       	mov	r20, r4
     602:	55 2d       	mov	r21, r5
     604:	66 2d       	mov	r22, r6
     606:	77 2d       	mov	r23, r7
     608:	88 2d       	mov	r24, r8
     60a:	99 2d       	mov	r25, r9
     60c:	0e 94 82 17 	call	0x2f04	; 0x2f04 <__muldi3>
     610:	a2 2e       	mov	r10, r18
     612:	b3 2e       	mov	r11, r19
     614:	c4 2e       	mov	r12, r20
     616:	d5 2e       	mov	r13, r21
     618:	e6 2e       	mov	r14, r22
     61a:	f7 2e       	mov	r15, r23
     61c:	08 2f       	mov	r16, r24
     61e:	19 2f       	mov	r17, r25
     620:	2a 2d       	mov	r18, r10
     622:	3b 2d       	mov	r19, r11
     624:	4c 2d       	mov	r20, r12
     626:	5d 2d       	mov	r21, r13
     628:	6e 2d       	mov	r22, r14
     62a:	7f 2d       	mov	r23, r15
     62c:	80 2f       	mov	r24, r16
     62e:	91 2f       	mov	r25, r17
     630:	20 93 96 00 	sts	0x0096, r18	; 0x800096 <__data_end>
     634:	30 93 97 00 	sts	0x0097, r19	; 0x800097 <__data_end+0x1>
     638:	40 93 98 00 	sts	0x0098, r20	; 0x800098 <__data_end+0x2>
     63c:	50 93 99 00 	sts	0x0099, r21	; 0x800099 <__data_end+0x3>
     640:	60 93 9a 00 	sts	0x009A, r22	; 0x80009a <__data_end+0x4>
     644:	70 93 9b 00 	sts	0x009B, r23	; 0x80009b <__data_end+0x5>
     648:	80 93 9c 00 	sts	0x009C, r24	; 0x80009c <__data_end+0x6>
     64c:	90 93 9d 00 	sts	0x009D, r25	; 0x80009d <__data_end+0x7>
     650:	49 c0       	rjmp	.+146    	; 0x6e4 <__EEPROM_REGION_LENGTH__+0x2e4>
					case '/' : result2 = ((f64)Number1 / (f64)Number2); break;
     652:	a0 90 b0 00 	lds	r10, 0x00B0	; 0x8000b0 <Number1>
     656:	b0 90 b1 00 	lds	r11, 0x00B1	; 0x8000b1 <Number1+0x1>
     65a:	c0 90 b2 00 	lds	r12, 0x00B2	; 0x8000b2 <Number1+0x2>
     65e:	d0 90 b3 00 	lds	r13, 0x00B3	; 0x8000b3 <Number1+0x3>
     662:	e0 90 b4 00 	lds	r14, 0x00B4	; 0x8000b4 <Number1+0x4>
     666:	f0 90 b5 00 	lds	r15, 0x00B5	; 0x8000b5 <Number1+0x5>
     66a:	00 91 b6 00 	lds	r16, 0x00B6	; 0x8000b6 <Number1+0x6>
     66e:	10 91 b7 00 	lds	r17, 0x00B7	; 0x8000b7 <Number1+0x7>
     672:	2a 2d       	mov	r18, r10
     674:	3b 2d       	mov	r19, r11
     676:	4c 2d       	mov	r20, r12
     678:	5d 2d       	mov	r21, r13
     67a:	6e 2d       	mov	r22, r14
     67c:	7f 2d       	mov	r23, r15
     67e:	80 2f       	mov	r24, r16
     680:	91 2f       	mov	r25, r17
     682:	0e 94 ca 12 	call	0x2594	; 0x2594 <__floatdisf>
     686:	3b 01       	movw	r6, r22
     688:	4c 01       	movw	r8, r24
     68a:	a0 90 b8 00 	lds	r10, 0x00B8	; 0x8000b8 <Number2>
     68e:	b0 90 b9 00 	lds	r11, 0x00B9	; 0x8000b9 <Number2+0x1>
     692:	c0 90 ba 00 	lds	r12, 0x00BA	; 0x8000ba <Number2+0x2>
     696:	d0 90 bb 00 	lds	r13, 0x00BB	; 0x8000bb <Number2+0x3>
     69a:	e0 90 bc 00 	lds	r14, 0x00BC	; 0x8000bc <Number2+0x4>
     69e:	f0 90 bd 00 	lds	r15, 0x00BD	; 0x8000bd <Number2+0x5>
     6a2:	00 91 be 00 	lds	r16, 0x00BE	; 0x8000be <Number2+0x6>
     6a6:	10 91 bf 00 	lds	r17, 0x00BF	; 0x8000bf <Number2+0x7>
     6aa:	2a 2d       	mov	r18, r10
     6ac:	3b 2d       	mov	r19, r11
     6ae:	4c 2d       	mov	r20, r12
     6b0:	5d 2d       	mov	r21, r13
     6b2:	6e 2d       	mov	r22, r14
     6b4:	7f 2d       	mov	r23, r15
     6b6:	80 2f       	mov	r24, r16
     6b8:	91 2f       	mov	r25, r17
     6ba:	0e 94 ca 12 	call	0x2594	; 0x2594 <__floatdisf>
     6be:	dc 01       	movw	r26, r24
     6c0:	cb 01       	movw	r24, r22
     6c2:	9c 01       	movw	r18, r24
     6c4:	ad 01       	movw	r20, r26
     6c6:	c4 01       	movw	r24, r8
     6c8:	b3 01       	movw	r22, r6
     6ca:	0e 94 29 12 	call	0x2452	; 0x2452 <__divsf3>
     6ce:	dc 01       	movw	r26, r24
     6d0:	cb 01       	movw	r24, r22
     6d2:	80 93 c0 00 	sts	0x00C0, r24	; 0x8000c0 <result2>
     6d6:	90 93 c1 00 	sts	0x00C1, r25	; 0x8000c1 <result2+0x1>
     6da:	a0 93 c2 00 	sts	0x00C2, r26	; 0x8000c2 <result2+0x2>
     6de:	b0 93 c3 00 	sts	0x00C3, r27	; 0x8000c3 <result2+0x3>
     6e2:	00 00       	nop
					default  :					                  break;
				}
				H_Lcd_GoTo(1,0);
     6e4:	60 e0       	ldi	r22, 0x00	; 0
     6e6:	81 e0       	ldi	r24, 0x01	; 1
     6e8:	0e 94 5f 0e 	call	0x1cbe	; 0x1cbe <H_Lcd_GoTo>
				H_Lcd_WriteCharacter('=');
     6ec:	8d e3       	ldi	r24, 0x3D	; 61
     6ee:	0e 94 bc 09 	call	0x1378	; 0x1378 <H_Lcd_WriteCharacter>
                H_Lcd_Clr(); // to clear all op and print the result
     6f2:	0e 94 54 0e 	call	0x1ca8	; 0x1ca8 <H_Lcd_Clr>
				if(operation == '/') H_Lcd_WriteNumberflt(result2);
     6f6:	80 91 c5 00 	lds	r24, 0x00C5	; 0x8000c5 <operation>
     6fa:	8f 32       	cpi	r24, 0x2F	; 47
     6fc:	69 f4       	brne	.+26     	; 0x718 <__EEPROM_REGION_LENGTH__+0x318>
     6fe:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <result2>
     702:	90 91 c1 00 	lds	r25, 0x00C1	; 0x8000c1 <result2+0x1>
     706:	a0 91 c2 00 	lds	r26, 0x00C2	; 0x8000c2 <result2+0x2>
     70a:	b0 91 c3 00 	lds	r27, 0x00C3	; 0x8000c3 <result2+0x3>
     70e:	bc 01       	movw	r22, r24
     710:	cd 01       	movw	r24, r26
     712:	0e 94 0c 0e 	call	0x1c18	; 0x1c18 <H_Lcd_WriteNumberflt>
     716:	1c c0       	rjmp	.+56     	; 0x750 <__EEPROM_REGION_LENGTH__+0x350>
				else convertToString(result, str);
     718:	80 90 96 00 	lds	r8, 0x0096	; 0x800096 <__data_end>
     71c:	90 90 97 00 	lds	r9, 0x0097	; 0x800097 <__data_end+0x1>
     720:	a0 90 98 00 	lds	r10, 0x0098	; 0x800098 <__data_end+0x2>
     724:	b0 90 99 00 	lds	r11, 0x0099	; 0x800099 <__data_end+0x3>
     728:	c0 90 9a 00 	lds	r12, 0x009A	; 0x80009a <__data_end+0x4>
     72c:	d0 90 9b 00 	lds	r13, 0x009B	; 0x80009b <__data_end+0x5>
     730:	e0 90 9c 00 	lds	r14, 0x009C	; 0x80009c <__data_end+0x6>
     734:	f0 90 9d 00 	lds	r15, 0x009D	; 0x80009d <__data_end+0x7>
     738:	06 ec       	ldi	r16, 0xC6	; 198
     73a:	10 e0       	ldi	r17, 0x00	; 0
     73c:	28 2d       	mov	r18, r8
     73e:	39 2d       	mov	r19, r9
     740:	4a 2d       	mov	r20, r10
     742:	5b 2d       	mov	r21, r11
     744:	6c 2d       	mov	r22, r12
     746:	7d 2d       	mov	r23, r13
     748:	8e 2d       	mov	r24, r14
     74a:	9f 2d       	mov	r25, r15
     74c:	0e 94 94 06 	call	0xd28	; 0xd28 <convertToString>
				H_Lcd_WriteString(str);
     750:	86 ec       	ldi	r24, 0xC6	; 198
     752:	90 e0       	ldi	r25, 0x00	; 0
     754:	0e 94 e0 0d 	call	0x1bc0	; 0x1bc0 <H_Lcd_WriteString>
     758:	80 e0       	ldi	r24, 0x00	; 0
     75a:	90 e0       	ldi	r25, 0x00	; 0
     75c:	a0 e2       	ldi	r26, 0x20	; 32
     75e:	b1 e4       	ldi	r27, 0x41	; 65
     760:	8d 83       	std	Y+5, r24	; 0x05
     762:	9e 83       	std	Y+6, r25	; 0x06
     764:	af 83       	std	Y+7, r26	; 0x07
     766:	b8 87       	std	Y+8, r27	; 0x08

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
     768:	20 e0       	ldi	r18, 0x00	; 0
     76a:	30 e0       	ldi	r19, 0x00	; 0
     76c:	4a e7       	ldi	r20, 0x7A	; 122
     76e:	55 e4       	ldi	r21, 0x45	; 69
     770:	6d 81       	ldd	r22, Y+5	; 0x05
     772:	7e 81       	ldd	r23, Y+6	; 0x06
     774:	8f 81       	ldd	r24, Y+7	; 0x07
     776:	98 85       	ldd	r25, Y+8	; 0x08
     778:	0e 94 98 13 	call	0x2730	; 0x2730 <__mulsf3>
     77c:	dc 01       	movw	r26, r24
     77e:	cb 01       	movw	r24, r22
     780:	89 a3       	std	Y+33, r24	; 0x21
     782:	9a a3       	std	Y+34, r25	; 0x22
     784:	ab a3       	std	Y+35, r26	; 0x23
     786:	bc a3       	std	Y+36, r27	; 0x24
	if (__tmp < 1.0)
     788:	20 e0       	ldi	r18, 0x00	; 0
     78a:	30 e0       	ldi	r19, 0x00	; 0
     78c:	40 e8       	ldi	r20, 0x80	; 128
     78e:	5f e3       	ldi	r21, 0x3F	; 63
     790:	69 a1       	ldd	r22, Y+33	; 0x21
     792:	7a a1       	ldd	r23, Y+34	; 0x22
     794:	8b a1       	ldd	r24, Y+35	; 0x23
     796:	9c a1       	ldd	r25, Y+36	; 0x24
     798:	0e 94 24 12 	call	0x2448	; 0x2448 <__cmpsf2>
     79c:	88 23       	and	r24, r24
     79e:	2c f4       	brge	.+10     	; 0x7aa <__EEPROM_REGION_LENGTH__+0x3aa>
		__ticks = 1;
     7a0:	81 e0       	ldi	r24, 0x01	; 1
     7a2:	90 e0       	ldi	r25, 0x00	; 0
     7a4:	9e a3       	std	Y+38, r25	; 0x26
     7a6:	8d a3       	std	Y+37, r24	; 0x25
     7a8:	3f c0       	rjmp	.+126    	; 0x828 <__DATA_REGION_LENGTH__+0x28>
	else if (__tmp > 65535)
     7aa:	20 e0       	ldi	r18, 0x00	; 0
     7ac:	3f ef       	ldi	r19, 0xFF	; 255
     7ae:	4f e7       	ldi	r20, 0x7F	; 127
     7b0:	57 e4       	ldi	r21, 0x47	; 71
     7b2:	69 a1       	ldd	r22, Y+33	; 0x21
     7b4:	7a a1       	ldd	r23, Y+34	; 0x22
     7b6:	8b a1       	ldd	r24, Y+35	; 0x23
     7b8:	9c a1       	ldd	r25, Y+36	; 0x24
     7ba:	0e 94 93 13 	call	0x2726	; 0x2726 <__gesf2>
     7be:	18 16       	cp	r1, r24
     7c0:	4c f5       	brge	.+82     	; 0x814 <__DATA_REGION_LENGTH__+0x14>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     7c2:	20 e0       	ldi	r18, 0x00	; 0
     7c4:	30 e0       	ldi	r19, 0x00	; 0
     7c6:	40 e2       	ldi	r20, 0x20	; 32
     7c8:	51 e4       	ldi	r21, 0x41	; 65
     7ca:	6d 81       	ldd	r22, Y+5	; 0x05
     7cc:	7e 81       	ldd	r23, Y+6	; 0x06
     7ce:	8f 81       	ldd	r24, Y+7	; 0x07
     7d0:	98 85       	ldd	r25, Y+8	; 0x08
     7d2:	0e 94 98 13 	call	0x2730	; 0x2730 <__mulsf3>
     7d6:	dc 01       	movw	r26, r24
     7d8:	cb 01       	movw	r24, r22
     7da:	bc 01       	movw	r22, r24
     7dc:	cd 01       	movw	r24, r26
     7de:	0e 94 9b 12 	call	0x2536	; 0x2536 <__fixunssfsi>
     7e2:	dc 01       	movw	r26, r24
     7e4:	cb 01       	movw	r24, r22
     7e6:	9e a3       	std	Y+38, r25	; 0x26
     7e8:	8d a3       	std	Y+37, r24	; 0x25
     7ea:	0f c0       	rjmp	.+30     	; 0x80a <__DATA_REGION_LENGTH__+0xa>
     7ec:	80 e9       	ldi	r24, 0x90	; 144
     7ee:	91 e0       	ldi	r25, 0x01	; 1
     7f0:	98 a7       	std	Y+40, r25	; 0x28
     7f2:	8f a3       	std	Y+39, r24	; 0x27
     7f4:	8f a1       	ldd	r24, Y+39	; 0x27
     7f6:	98 a5       	ldd	r25, Y+40	; 0x28
     7f8:	01 97       	sbiw	r24, 0x01	; 1
     7fa:	f1 f7       	brne	.-4      	; 0x7f8 <__EEPROM_REGION_LENGTH__+0x3f8>
     7fc:	98 a7       	std	Y+40, r25	; 0x28
     7fe:	8f a3       	std	Y+39, r24	; 0x27
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     800:	8d a1       	ldd	r24, Y+37	; 0x25
     802:	9e a1       	ldd	r25, Y+38	; 0x26
     804:	01 97       	sbiw	r24, 0x01	; 1
     806:	9e a3       	std	Y+38, r25	; 0x26
     808:	8d a3       	std	Y+37, r24	; 0x25
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     80a:	8d a1       	ldd	r24, Y+37	; 0x25
     80c:	9e a1       	ldd	r25, Y+38	; 0x26
     80e:	89 2b       	or	r24, r25
     810:	69 f7       	brne	.-38     	; 0x7ec <__EEPROM_REGION_LENGTH__+0x3ec>
     812:	14 c0       	rjmp	.+40     	; 0x83c <__DATA_REGION_LENGTH__+0x3c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     814:	69 a1       	ldd	r22, Y+33	; 0x21
     816:	7a a1       	ldd	r23, Y+34	; 0x22
     818:	8b a1       	ldd	r24, Y+35	; 0x23
     81a:	9c a1       	ldd	r25, Y+36	; 0x24
     81c:	0e 94 9b 12 	call	0x2536	; 0x2536 <__fixunssfsi>
     820:	dc 01       	movw	r26, r24
     822:	cb 01       	movw	r24, r22
     824:	9e a3       	std	Y+38, r25	; 0x26
     826:	8d a3       	std	Y+37, r24	; 0x25
     828:	8d a1       	ldd	r24, Y+37	; 0x25
     82a:	9e a1       	ldd	r25, Y+38	; 0x26
     82c:	9a a7       	std	Y+42, r25	; 0x2a
     82e:	89 a7       	std	Y+41, r24	; 0x29
     830:	89 a5       	ldd	r24, Y+41	; 0x29
     832:	9a a5       	ldd	r25, Y+42	; 0x2a
     834:	01 97       	sbiw	r24, 0x01	; 1
     836:	f1 f7       	brne	.-4      	; 0x834 <__DATA_REGION_LENGTH__+0x34>
     838:	9a a7       	std	Y+42, r25	; 0x2a
     83a:	89 a7       	std	Y+41, r24	; 0x29
				_delay_ms(10);
				while(c != 'C') c = H_Keypad_Read();
     83c:	04 c0       	rjmp	.+8      	; 0x846 <__DATA_REGION_LENGTH__+0x46>
     83e:	0e 94 28 08 	call	0x1050	; 0x1050 <H_Keypad_Read>
     842:	80 93 af 00 	sts	0x00AF, r24	; 0x8000af <c>
     846:	80 91 af 00 	lds	r24, 0x00AF	; 0x8000af <c>
     84a:	83 34       	cpi	r24, 0x43	; 67
     84c:	c1 f7       	brne	.-16     	; 0x83e <__DATA_REGION_LENGTH__+0x3e>
				i = 0;
     84e:	10 92 ae 00 	sts	0x00AE, r1	; 0x8000ae <i>
				result = 0;
     852:	10 92 96 00 	sts	0x0096, r1	; 0x800096 <__data_end>
     856:	10 92 97 00 	sts	0x0097, r1	; 0x800097 <__data_end+0x1>
     85a:	10 92 98 00 	sts	0x0098, r1	; 0x800098 <__data_end+0x2>
     85e:	10 92 99 00 	sts	0x0099, r1	; 0x800099 <__data_end+0x3>
     862:	10 92 9a 00 	sts	0x009A, r1	; 0x80009a <__data_end+0x4>
     866:	10 92 9b 00 	sts	0x009B, r1	; 0x80009b <__data_end+0x5>
     86a:	10 92 9c 00 	sts	0x009C, r1	; 0x80009c <__data_end+0x6>
     86e:	10 92 9d 00 	sts	0x009D, r1	; 0x80009d <__data_end+0x7>
				result2 =0.0;
     872:	10 92 c0 00 	sts	0x00C0, r1	; 0x8000c0 <result2>
     876:	10 92 c1 00 	sts	0x00C1, r1	; 0x8000c1 <result2+0x1>
     87a:	10 92 c2 00 	sts	0x00C2, r1	; 0x8000c2 <result2+0x2>
     87e:	10 92 c3 00 	sts	0x00C3, r1	; 0x8000c3 <result2+0x3>
				cnt = 0;
     882:	10 92 c4 00 	sts	0x00C4, r1	; 0x8000c4 <cnt>
				operation = '\0';
     886:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <operation>
				c='\0';
     88a:	10 92 af 00 	sts	0x00AF, r1	; 0x8000af <c>
				H_Lcd_Clr();
     88e:	0e 94 54 0e 	call	0x1ca8	; 0x1ca8 <H_Lcd_Clr>
				memset(String, 0, 16);
     892:	40 e1       	ldi	r20, 0x10	; 16
     894:	50 e0       	ldi	r21, 0x00	; 0
     896:	60 e0       	ldi	r22, 0x00	; 0
     898:	70 e0       	ldi	r23, 0x00	; 0
     89a:	8e e9       	ldi	r24, 0x9E	; 158
     89c:	90 e0       	ldi	r25, 0x00	; 0
     89e:	0e 94 cb 19 	call	0x3396	; 0x3396 <memset>
				memset(str, 0, 16);
     8a2:	40 e1       	ldi	r20, 0x10	; 16
     8a4:	50 e0       	ldi	r21, 0x00	; 0
     8a6:	60 e0       	ldi	r22, 0x00	; 0
     8a8:	70 e0       	ldi	r23, 0x00	; 0
     8aa:	86 ec       	ldi	r24, 0xC6	; 198
     8ac:	90 e0       	ldi	r25, 0x00	; 0
     8ae:	0e 94 cb 19 	call	0x3396	; 0x3396 <memset>
				Number1 = 0;
     8b2:	10 92 b0 00 	sts	0x00B0, r1	; 0x8000b0 <Number1>
     8b6:	10 92 b1 00 	sts	0x00B1, r1	; 0x8000b1 <Number1+0x1>
     8ba:	10 92 b2 00 	sts	0x00B2, r1	; 0x8000b2 <Number1+0x2>
     8be:	10 92 b3 00 	sts	0x00B3, r1	; 0x8000b3 <Number1+0x3>
     8c2:	10 92 b4 00 	sts	0x00B4, r1	; 0x8000b4 <Number1+0x4>
     8c6:	10 92 b5 00 	sts	0x00B5, r1	; 0x8000b5 <Number1+0x5>
     8ca:	10 92 b6 00 	sts	0x00B6, r1	; 0x8000b6 <Number1+0x6>
     8ce:	10 92 b7 00 	sts	0x00B7, r1	; 0x8000b7 <Number1+0x7>
				Number2 = 0;
     8d2:	10 92 b8 00 	sts	0x00B8, r1	; 0x8000b8 <Number2>
     8d6:	10 92 b9 00 	sts	0x00B9, r1	; 0x8000b9 <Number2+0x1>
     8da:	10 92 ba 00 	sts	0x00BA, r1	; 0x8000ba <Number2+0x2>
     8de:	10 92 bb 00 	sts	0x00BB, r1	; 0x8000bb <Number2+0x3>
     8e2:	10 92 bc 00 	sts	0x00BC, r1	; 0x8000bc <Number2+0x4>
     8e6:	10 92 bd 00 	sts	0x00BD, r1	; 0x8000bd <Number2+0x5>
     8ea:	10 92 be 00 	sts	0x00BE, r1	; 0x8000be <Number2+0x6>
     8ee:	10 92 bf 00 	sts	0x00BF, r1	; 0x8000bf <Number2+0x7>
				goto label;
     8f2:	79 cd       	rjmp	.-1294   	; 0x3e6 <main+0x252>
			}
			if ((c == '+') || (c == '-' )|| (c == '/' )|| (c == '*'))
     8f4:	80 91 af 00 	lds	r24, 0x00AF	; 0x8000af <c>
     8f8:	8b 32       	cpi	r24, 0x2B	; 43
     8fa:	61 f0       	breq	.+24     	; 0x914 <__stack+0xb5>
     8fc:	80 91 af 00 	lds	r24, 0x00AF	; 0x8000af <c>
     900:	8d 32       	cpi	r24, 0x2D	; 45
     902:	41 f0       	breq	.+16     	; 0x914 <__stack+0xb5>
     904:	80 91 af 00 	lds	r24, 0x00AF	; 0x8000af <c>
     908:	8f 32       	cpi	r24, 0x2F	; 47
     90a:	21 f0       	breq	.+8      	; 0x914 <__stack+0xb5>
     90c:	80 91 af 00 	lds	r24, 0x00AF	; 0x8000af <c>
     910:	8a 32       	cpi	r24, 0x2A	; 42
     912:	19 f5       	brne	.+70     	; 0x95a <__stack+0xfb>
			{
				 H_Lcd_Clr();
     914:	0e 94 54 0e 	call	0x1ca8	; 0x1ca8 <H_Lcd_Clr>
				 H_Lcd_WriteCharacter(c);
     918:	80 91 af 00 	lds	r24, 0x00AF	; 0x8000af <c>
     91c:	0e 94 bc 09 	call	0x1378	; 0x1378 <H_Lcd_WriteCharacter>
				operation = c;
     920:	80 91 af 00 	lds	r24, 0x00AF	; 0x8000af <c>
     924:	80 93 c5 00 	sts	0x00C5, r24	; 0x8000c5 <operation>
				_convert(String, &Number1);
     928:	60 eb       	ldi	r22, 0xB0	; 176
     92a:	70 e0       	ldi	r23, 0x00	; 0
     92c:	8e e9       	ldi	r24, 0x9E	; 158
     92e:	90 e0       	ldi	r25, 0x00	; 0
     930:	0e 94 8a 05 	call	0xb14	; 0xb14 <_convert>
				c = '\0';
     934:	10 92 af 00 	sts	0x00AF, r1	; 0x8000af <c>
				flag = 0; 
     938:	10 92 60 00 	sts	0x0060, r1	; 0x800060 <__DATA_REGION_ORIGIN__>
				i++;
     93c:	80 91 ae 00 	lds	r24, 0x00AE	; 0x8000ae <i>
     940:	8f 5f       	subi	r24, 0xFF	; 255
     942:	80 93 ae 00 	sts	0x00AE, r24	; 0x8000ae <i>
				cnt=0;
     946:	10 92 c4 00 	sts	0x00C4, r1	; 0x8000c4 <cnt>
				memset(String, 0, 16);
     94a:	40 e1       	ldi	r20, 0x10	; 16
     94c:	50 e0       	ldi	r21, 0x00	; 0
     94e:	60 e0       	ldi	r22, 0x00	; 0
     950:	70 e0       	ldi	r23, 0x00	; 0
     952:	8e e9       	ldi	r24, 0x9E	; 158
     954:	90 e0       	ldi	r25, 0x00	; 0
     956:	0e 94 cb 19 	call	0x3396	; 0x3396 <memset>
			}		
			if(flag == 1)
     95a:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
     95e:	81 30       	cpi	r24, 0x01	; 1
     960:	09 f0       	breq	.+2      	; 0x964 <__stack+0x105>
     962:	41 cd       	rjmp	.-1406   	; 0x3e6 <main+0x252>
			{
				String[cnt] = c;
     964:	80 91 c4 00 	lds	r24, 0x00C4	; 0x8000c4 <cnt>
     968:	88 2f       	mov	r24, r24
     96a:	90 e0       	ldi	r25, 0x00	; 0
     96c:	20 91 af 00 	lds	r18, 0x00AF	; 0x8000af <c>
     970:	82 56       	subi	r24, 0x62	; 98
     972:	9f 4f       	sbci	r25, 0xFF	; 255
     974:	fc 01       	movw	r30, r24
     976:	20 83       	st	Z, r18
				String[cnt+1] = '\0';
     978:	80 91 c4 00 	lds	r24, 0x00C4	; 0x8000c4 <cnt>
     97c:	88 2f       	mov	r24, r24
     97e:	90 e0       	ldi	r25, 0x00	; 0
     980:	01 96       	adiw	r24, 0x01	; 1
     982:	82 56       	subi	r24, 0x62	; 98
     984:	9f 4f       	sbci	r25, 0xFF	; 255
     986:	fc 01       	movw	r30, r24
     988:	10 82       	st	Z, r1
				cnt++;
     98a:	80 91 c4 00 	lds	r24, 0x00C4	; 0x8000c4 <cnt>
     98e:	8f 5f       	subi	r24, 0xFF	; 255
     990:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <cnt>
				i++;
     994:	80 91 ae 00 	lds	r24, 0x00AE	; 0x8000ae <i>
     998:	8f 5f       	subi	r24, 0xFF	; 255
     99a:	80 93 ae 00 	sts	0x00AE, r24	; 0x8000ae <i>
			}
		}
		
    }
     99e:	23 cd       	rjmp	.-1466   	; 0x3e6 <main+0x252>

000009a0 <power>:
}


u64 power(u64 number ,u64 power_times)
{
     9a0:	2f 92       	push	r2
     9a2:	3f 92       	push	r3
     9a4:	4f 92       	push	r4
     9a6:	5f 92       	push	r5
     9a8:	6f 92       	push	r6
     9aa:	7f 92       	push	r7
     9ac:	8f 92       	push	r8
     9ae:	9f 92       	push	r9
     9b0:	af 92       	push	r10
     9b2:	bf 92       	push	r11
     9b4:	cf 92       	push	r12
     9b6:	df 92       	push	r13
     9b8:	ef 92       	push	r14
     9ba:	ff 92       	push	r15
     9bc:	0f 93       	push	r16
     9be:	1f 93       	push	r17
     9c0:	cf 93       	push	r28
     9c2:	df 93       	push	r29
     9c4:	cd b7       	in	r28, 0x3d	; 61
     9c6:	de b7       	in	r29, 0x3e	; 62
     9c8:	a2 97       	sbiw	r28, 0x22	; 34
     9ca:	0f b6       	in	r0, 0x3f	; 63
     9cc:	f8 94       	cli
     9ce:	de bf       	out	0x3e, r29	; 62
     9d0:	0f be       	out	0x3f, r0	; 63
     9d2:	cd bf       	out	0x3d, r28	; 61
     9d4:	2b 87       	std	Y+11, r18	; 0x0b
     9d6:	3c 87       	std	Y+12, r19	; 0x0c
     9d8:	4d 87       	std	Y+13, r20	; 0x0d
     9da:	5e 87       	std	Y+14, r21	; 0x0e
     9dc:	6f 87       	std	Y+15, r22	; 0x0f
     9de:	78 8b       	std	Y+16, r23	; 0x10
     9e0:	89 8b       	std	Y+17, r24	; 0x11
     9e2:	9a 8b       	std	Y+18, r25	; 0x12
     9e4:	ab 8a       	std	Y+19, r10	; 0x13
     9e6:	bc 8a       	std	Y+20, r11	; 0x14
     9e8:	cd 8a       	std	Y+21, r12	; 0x15
     9ea:	de 8a       	std	Y+22, r13	; 0x16
     9ec:	ef 8a       	std	Y+23, r14	; 0x17
     9ee:	f8 8e       	std	Y+24, r15	; 0x18
     9f0:	09 8f       	std	Y+25, r16	; 0x19
     9f2:	1a 8f       	std	Y+26, r17	; 0x1a
	u64 nn = 1;
     9f4:	81 e0       	ldi	r24, 0x01	; 1
     9f6:	89 83       	std	Y+1, r24	; 0x01
     9f8:	1a 82       	std	Y+2, r1	; 0x02
     9fa:	1b 82       	std	Y+3, r1	; 0x03
     9fc:	1c 82       	std	Y+4, r1	; 0x04
     9fe:	1d 82       	std	Y+5, r1	; 0x05
     a00:	1e 82       	std	Y+6, r1	; 0x06
     a02:	1f 82       	std	Y+7, r1	; 0x07
     a04:	18 86       	std	Y+8, r1	; 0x08
	for (int x = 1; x <= power_times; x++)
     a06:	81 e0       	ldi	r24, 0x01	; 1
     a08:	90 e0       	ldi	r25, 0x00	; 0
     a0a:	9a 87       	std	Y+10, r25	; 0x0a
     a0c:	89 87       	std	Y+9, r24	; 0x09
     a0e:	27 c0       	rjmp	.+78     	; 0xa5e <power+0xbe>
	nn *= number;
     a10:	ab 84       	ldd	r10, Y+11	; 0x0b
     a12:	bc 84       	ldd	r11, Y+12	; 0x0c
     a14:	cd 84       	ldd	r12, Y+13	; 0x0d
     a16:	de 84       	ldd	r13, Y+14	; 0x0e
     a18:	ef 84       	ldd	r14, Y+15	; 0x0f
     a1a:	f8 88       	ldd	r15, Y+16	; 0x10
     a1c:	09 89       	ldd	r16, Y+17	; 0x11
     a1e:	1a 89       	ldd	r17, Y+18	; 0x12
     a20:	29 81       	ldd	r18, Y+1	; 0x01
     a22:	3a 81       	ldd	r19, Y+2	; 0x02
     a24:	4b 81       	ldd	r20, Y+3	; 0x03
     a26:	5c 81       	ldd	r21, Y+4	; 0x04
     a28:	6d 81       	ldd	r22, Y+5	; 0x05
     a2a:	7e 81       	ldd	r23, Y+6	; 0x06
     a2c:	8f 81       	ldd	r24, Y+7	; 0x07
     a2e:	98 85       	ldd	r25, Y+8	; 0x08
     a30:	0e 94 82 17 	call	0x2f04	; 0x2f04 <__muldi3>
     a34:	a2 2e       	mov	r10, r18
     a36:	b3 2e       	mov	r11, r19
     a38:	c4 2e       	mov	r12, r20
     a3a:	d5 2e       	mov	r13, r21
     a3c:	e6 2e       	mov	r14, r22
     a3e:	f7 2e       	mov	r15, r23
     a40:	08 2f       	mov	r16, r24
     a42:	19 2f       	mov	r17, r25
     a44:	a9 82       	std	Y+1, r10	; 0x01
     a46:	ba 82       	std	Y+2, r11	; 0x02
     a48:	cb 82       	std	Y+3, r12	; 0x03
     a4a:	dc 82       	std	Y+4, r13	; 0x04
     a4c:	ed 82       	std	Y+5, r14	; 0x05
     a4e:	fe 82       	std	Y+6, r15	; 0x06
     a50:	0f 83       	std	Y+7, r16	; 0x07
     a52:	18 87       	std	Y+8, r17	; 0x08


u64 power(u64 number ,u64 power_times)
{
	u64 nn = 1;
	for (int x = 1; x <= power_times; x++)
     a54:	89 85       	ldd	r24, Y+9	; 0x09
     a56:	9a 85       	ldd	r25, Y+10	; 0x0a
     a58:	01 96       	adiw	r24, 0x01	; 1
     a5a:	9a 87       	std	Y+10, r25	; 0x0a
     a5c:	89 87       	std	Y+9, r24	; 0x09
     a5e:	89 85       	ldd	r24, Y+9	; 0x09
     a60:	9a 85       	ldd	r25, Y+10	; 0x0a
     a62:	9c 8f       	std	Y+28, r25	; 0x1c
     a64:	8b 8f       	std	Y+27, r24	; 0x1b
     a66:	89 2f       	mov	r24, r25
     a68:	88 0f       	add	r24, r24
     a6a:	88 0b       	sbc	r24, r24
     a6c:	8d 8f       	std	Y+29, r24	; 0x1d
     a6e:	8e 8f       	std	Y+30, r24	; 0x1e
     a70:	8f 8f       	std	Y+31, r24	; 0x1f
     a72:	88 a3       	std	Y+32, r24	; 0x20
     a74:	89 a3       	std	Y+33, r24	; 0x21
     a76:	8a a3       	std	Y+34, r24	; 0x22
     a78:	2b 88       	ldd	r2, Y+19	; 0x13
     a7a:	3c 88       	ldd	r3, Y+20	; 0x14
     a7c:	4d 88       	ldd	r4, Y+21	; 0x15
     a7e:	5e 88       	ldd	r5, Y+22	; 0x16
     a80:	6f 88       	ldd	r6, Y+23	; 0x17
     a82:	78 8c       	ldd	r7, Y+24	; 0x18
     a84:	89 8c       	ldd	r8, Y+25	; 0x19
     a86:	9a 8c       	ldd	r9, Y+26	; 0x1a
     a88:	2b 8d       	ldd	r18, Y+27	; 0x1b
     a8a:	3c 8d       	ldd	r19, Y+28	; 0x1c
     a8c:	4d 8d       	ldd	r20, Y+29	; 0x1d
     a8e:	5e 8d       	ldd	r21, Y+30	; 0x1e
     a90:	6f 8d       	ldd	r22, Y+31	; 0x1f
     a92:	78 a1       	ldd	r23, Y+32	; 0x20
     a94:	89 a1       	ldd	r24, Y+33	; 0x21
     a96:	9a a1       	ldd	r25, Y+34	; 0x22
     a98:	a2 2c       	mov	r10, r2
     a9a:	b3 2c       	mov	r11, r3
     a9c:	c4 2c       	mov	r12, r4
     a9e:	d5 2c       	mov	r13, r5
     aa0:	e6 2c       	mov	r14, r6
     aa2:	f7 2c       	mov	r15, r7
     aa4:	08 2d       	mov	r16, r8
     aa6:	19 2d       	mov	r17, r9
     aa8:	0e 94 c4 18 	call	0x3188	; 0x3188 <__cmpdi2>
     aac:	09 f0       	breq	.+2      	; 0xab0 <power+0x110>
     aae:	08 f4       	brcc	.+2      	; 0xab2 <power+0x112>
     ab0:	af cf       	rjmp	.-162    	; 0xa10 <power+0x70>
	nn *= number;
	return nn;
     ab2:	29 81       	ldd	r18, Y+1	; 0x01
     ab4:	3a 81       	ldd	r19, Y+2	; 0x02
     ab6:	4b 81       	ldd	r20, Y+3	; 0x03
     ab8:	5c 81       	ldd	r21, Y+4	; 0x04
     aba:	6d 81       	ldd	r22, Y+5	; 0x05
     abc:	7e 81       	ldd	r23, Y+6	; 0x06
     abe:	8f 81       	ldd	r24, Y+7	; 0x07
     ac0:	98 85       	ldd	r25, Y+8	; 0x08
     ac2:	a2 2e       	mov	r10, r18
     ac4:	b3 2e       	mov	r11, r19
     ac6:	c4 2e       	mov	r12, r20
     ac8:	d5 2e       	mov	r13, r21
     aca:	e6 2e       	mov	r14, r22
     acc:	f7 2e       	mov	r15, r23
     ace:	08 2f       	mov	r16, r24
     ad0:	19 2f       	mov	r17, r25
}
     ad2:	2a 2d       	mov	r18, r10
     ad4:	3b 2d       	mov	r19, r11
     ad6:	4c 2d       	mov	r20, r12
     ad8:	5d 2d       	mov	r21, r13
     ada:	6e 2d       	mov	r22, r14
     adc:	7f 2d       	mov	r23, r15
     ade:	80 2f       	mov	r24, r16
     ae0:	91 2f       	mov	r25, r17
     ae2:	a2 96       	adiw	r28, 0x22	; 34
     ae4:	0f b6       	in	r0, 0x3f	; 63
     ae6:	f8 94       	cli
     ae8:	de bf       	out	0x3e, r29	; 62
     aea:	0f be       	out	0x3f, r0	; 63
     aec:	cd bf       	out	0x3d, r28	; 61
     aee:	df 91       	pop	r29
     af0:	cf 91       	pop	r28
     af2:	1f 91       	pop	r17
     af4:	0f 91       	pop	r16
     af6:	ff 90       	pop	r15
     af8:	ef 90       	pop	r14
     afa:	df 90       	pop	r13
     afc:	cf 90       	pop	r12
     afe:	bf 90       	pop	r11
     b00:	af 90       	pop	r10
     b02:	9f 90       	pop	r9
     b04:	8f 90       	pop	r8
     b06:	7f 90       	pop	r7
     b08:	6f 90       	pop	r6
     b0a:	5f 90       	pop	r5
     b0c:	4f 90       	pop	r4
     b0e:	3f 90       	pop	r3
     b10:	2f 90       	pop	r2
     b12:	08 95       	ret

00000b14 <_convert>:

void _convert(u8* str, u64 *number)
{
     b14:	2f 92       	push	r2
     b16:	3f 92       	push	r3
     b18:	4f 92       	push	r4
     b1a:	5f 92       	push	r5
     b1c:	6f 92       	push	r6
     b1e:	7f 92       	push	r7
     b20:	8f 92       	push	r8
     b22:	9f 92       	push	r9
     b24:	af 92       	push	r10
     b26:	bf 92       	push	r11
     b28:	cf 92       	push	r12
     b2a:	df 92       	push	r13
     b2c:	ef 92       	push	r14
     b2e:	ff 92       	push	r15
     b30:	0f 93       	push	r16
     b32:	1f 93       	push	r17
     b34:	cf 93       	push	r28
     b36:	df 93       	push	r29
     b38:	cd b7       	in	r28, 0x3d	; 61
     b3a:	de b7       	in	r29, 0x3e	; 62
     b3c:	67 97       	sbiw	r28, 0x17	; 23
     b3e:	0f b6       	in	r0, 0x3f	; 63
     b40:	f8 94       	cli
     b42:	de bf       	out	0x3e, r29	; 62
     b44:	0f be       	out	0x3f, r0	; 63
     b46:	cd bf       	out	0x3d, r28	; 61
     b48:	9d 83       	std	Y+5, r25	; 0x05
     b4a:	8c 83       	std	Y+4, r24	; 0x04
     b4c:	7f 83       	std	Y+7, r23	; 0x07
     b4e:	6e 83       	std	Y+6, r22	; 0x06
	u8 length = strlen(str);
     b50:	8c 81       	ldd	r24, Y+4	; 0x04
     b52:	9d 81       	ldd	r25, Y+5	; 0x05
     b54:	0e 94 dd 19 	call	0x33ba	; 0x33ba <strlen>
     b58:	8b 83       	std	Y+3, r24	; 0x03
	u8 cnt = 0;
     b5a:	19 82       	std	Y+1, r1	; 0x01
	s8 z = 0;
     b5c:	1a 82       	std	Y+2, r1	; 0x02
	if((length == 0 ) || (str[cnt]-48 == 0)) *number = 0;
     b5e:	8b 81       	ldd	r24, Y+3	; 0x03
     b60:	88 23       	and	r24, r24
     b62:	59 f0       	breq	.+22     	; 0xb7a <_convert+0x66>
     b64:	89 81       	ldd	r24, Y+1	; 0x01
     b66:	88 2f       	mov	r24, r24
     b68:	90 e0       	ldi	r25, 0x00	; 0
     b6a:	2c 81       	ldd	r18, Y+4	; 0x04
     b6c:	3d 81       	ldd	r19, Y+5	; 0x05
     b6e:	82 0f       	add	r24, r18
     b70:	93 1f       	adc	r25, r19
     b72:	fc 01       	movw	r30, r24
     b74:	80 81       	ld	r24, Z
     b76:	80 33       	cpi	r24, 0x30	; 48
     b78:	99 f4       	brne	.+38     	; 0xba0 <_convert+0x8c>
     b7a:	8e 81       	ldd	r24, Y+6	; 0x06
     b7c:	9f 81       	ldd	r25, Y+7	; 0x07
     b7e:	fc 01       	movw	r30, r24
     b80:	10 82       	st	Z, r1
     b82:	fc 01       	movw	r30, r24
     b84:	11 82       	std	Z+1, r1	; 0x01
     b86:	fc 01       	movw	r30, r24
     b88:	12 82       	std	Z+2, r1	; 0x02
     b8a:	fc 01       	movw	r30, r24
     b8c:	13 82       	std	Z+3, r1	; 0x03
     b8e:	fc 01       	movw	r30, r24
     b90:	14 82       	std	Z+4, r1	; 0x04
     b92:	fc 01       	movw	r30, r24
     b94:	15 82       	std	Z+5, r1	; 0x05
     b96:	fc 01       	movw	r30, r24
     b98:	16 82       	std	Z+6, r1	; 0x06
     b9a:	fc 01       	movw	r30, r24
     b9c:	17 82       	std	Z+7, r1	; 0x07
     b9e:	aa c0       	rjmp	.+340    	; 0xcf4 <_convert+0x1e0>
	else
	{
		for( z = (length - 1) ; z > -1 ; z--)
     ba0:	8b 81       	ldd	r24, Y+3	; 0x03
     ba2:	81 50       	subi	r24, 0x01	; 1
     ba4:	8a 83       	std	Y+2, r24	; 0x02
     ba6:	a2 c0       	rjmp	.+324    	; 0xcec <_convert+0x1d8>
		{
			*number += ( ((u64) (str[cnt]-48) ) * power(10, z) );
     ba8:	89 81       	ldd	r24, Y+1	; 0x01
     baa:	88 2f       	mov	r24, r24
     bac:	90 e0       	ldi	r25, 0x00	; 0
     bae:	2c 81       	ldd	r18, Y+4	; 0x04
     bb0:	3d 81       	ldd	r19, Y+5	; 0x05
     bb2:	82 0f       	add	r24, r18
     bb4:	93 1f       	adc	r25, r19
     bb6:	fc 01       	movw	r30, r24
     bb8:	80 81       	ld	r24, Z
     bba:	88 2f       	mov	r24, r24
     bbc:	90 e0       	ldi	r25, 0x00	; 0
     bbe:	c0 97       	sbiw	r24, 0x30	; 48
     bc0:	99 87       	std	Y+9, r25	; 0x09
     bc2:	88 87       	std	Y+8, r24	; 0x08
     bc4:	89 2f       	mov	r24, r25
     bc6:	88 0f       	add	r24, r24
     bc8:	88 0b       	sbc	r24, r24
     bca:	8a 87       	std	Y+10, r24	; 0x0a
     bcc:	8b 87       	std	Y+11, r24	; 0x0b
     bce:	8c 87       	std	Y+12, r24	; 0x0c
     bd0:	8d 87       	std	Y+13, r24	; 0x0d
     bd2:	8e 87       	std	Y+14, r24	; 0x0e
     bd4:	8f 87       	std	Y+15, r24	; 0x0f
     bd6:	8a 81       	ldd	r24, Y+2	; 0x02
     bd8:	88 8b       	std	Y+16, r24	; 0x10
     bda:	88 0f       	add	r24, r24
     bdc:	88 0b       	sbc	r24, r24
     bde:	89 8b       	std	Y+17, r24	; 0x11
     be0:	8a 8b       	std	Y+18, r24	; 0x12
     be2:	8b 8b       	std	Y+19, r24	; 0x13
     be4:	8c 8b       	std	Y+20, r24	; 0x14
     be6:	8d 8b       	std	Y+21, r24	; 0x15
     be8:	8e 8b       	std	Y+22, r24	; 0x16
     bea:	8f 8b       	std	Y+23, r24	; 0x17
     bec:	a8 88       	ldd	r10, Y+16	; 0x10
     bee:	b9 88       	ldd	r11, Y+17	; 0x11
     bf0:	ca 88       	ldd	r12, Y+18	; 0x12
     bf2:	db 88       	ldd	r13, Y+19	; 0x13
     bf4:	ec 88       	ldd	r14, Y+20	; 0x14
     bf6:	fd 88       	ldd	r15, Y+21	; 0x15
     bf8:	0e 89       	ldd	r16, Y+22	; 0x16
     bfa:	1f 89       	ldd	r17, Y+23	; 0x17
     bfc:	2a e0       	ldi	r18, 0x0A	; 10
     bfe:	30 e0       	ldi	r19, 0x00	; 0
     c00:	40 e0       	ldi	r20, 0x00	; 0
     c02:	50 e0       	ldi	r21, 0x00	; 0
     c04:	60 e0       	ldi	r22, 0x00	; 0
     c06:	70 e0       	ldi	r23, 0x00	; 0
     c08:	80 e0       	ldi	r24, 0x00	; 0
     c0a:	90 e0       	ldi	r25, 0x00	; 0
     c0c:	0e 94 d0 04 	call	0x9a0	; 0x9a0 <power>
     c10:	22 2e       	mov	r2, r18
     c12:	33 2e       	mov	r3, r19
     c14:	44 2e       	mov	r4, r20
     c16:	55 2e       	mov	r5, r21
     c18:	66 2e       	mov	r6, r22
     c1a:	77 2e       	mov	r7, r23
     c1c:	88 2e       	mov	r8, r24
     c1e:	99 2e       	mov	r9, r25
     c20:	a2 2c       	mov	r10, r2
     c22:	b3 2c       	mov	r11, r3
     c24:	c4 2c       	mov	r12, r4
     c26:	d5 2c       	mov	r13, r5
     c28:	e6 2c       	mov	r14, r6
     c2a:	f7 2c       	mov	r15, r7
     c2c:	08 2d       	mov	r16, r8
     c2e:	19 2d       	mov	r17, r9
     c30:	28 85       	ldd	r18, Y+8	; 0x08
     c32:	39 85       	ldd	r19, Y+9	; 0x09
     c34:	4a 85       	ldd	r20, Y+10	; 0x0a
     c36:	5b 85       	ldd	r21, Y+11	; 0x0b
     c38:	6c 85       	ldd	r22, Y+12	; 0x0c
     c3a:	7d 85       	ldd	r23, Y+13	; 0x0d
     c3c:	8e 85       	ldd	r24, Y+14	; 0x0e
     c3e:	9f 85       	ldd	r25, Y+15	; 0x0f
     c40:	0e 94 82 17 	call	0x2f04	; 0x2f04 <__muldi3>
     c44:	a2 2e       	mov	r10, r18
     c46:	b3 2e       	mov	r11, r19
     c48:	c4 2e       	mov	r12, r20
     c4a:	d5 2e       	mov	r13, r21
     c4c:	e6 2e       	mov	r14, r22
     c4e:	f7 2e       	mov	r15, r23
     c50:	08 2f       	mov	r16, r24
     c52:	19 2f       	mov	r17, r25
     c54:	2a 2c       	mov	r2, r10
     c56:	3b 2c       	mov	r3, r11
     c58:	4c 2c       	mov	r4, r12
     c5a:	5d 2c       	mov	r5, r13
     c5c:	6e 2c       	mov	r6, r14
     c5e:	7f 2c       	mov	r7, r15
     c60:	80 2e       	mov	r8, r16
     c62:	91 2e       	mov	r9, r17
     c64:	8e 81       	ldd	r24, Y+6	; 0x06
     c66:	9f 81       	ldd	r25, Y+7	; 0x07
     c68:	fc 01       	movw	r30, r24
     c6a:	a0 80       	ld	r10, Z
     c6c:	fc 01       	movw	r30, r24
     c6e:	b1 80       	ldd	r11, Z+1	; 0x01
     c70:	fc 01       	movw	r30, r24
     c72:	c2 80       	ldd	r12, Z+2	; 0x02
     c74:	fc 01       	movw	r30, r24
     c76:	d3 80       	ldd	r13, Z+3	; 0x03
     c78:	fc 01       	movw	r30, r24
     c7a:	e4 80       	ldd	r14, Z+4	; 0x04
     c7c:	fc 01       	movw	r30, r24
     c7e:	f5 80       	ldd	r15, Z+5	; 0x05
     c80:	fc 01       	movw	r30, r24
     c82:	06 81       	ldd	r16, Z+6	; 0x06
     c84:	fc 01       	movw	r30, r24
     c86:	17 81       	ldd	r17, Z+7	; 0x07
     c88:	2a 2d       	mov	r18, r10
     c8a:	3b 2d       	mov	r19, r11
     c8c:	4c 2d       	mov	r20, r12
     c8e:	5d 2d       	mov	r21, r13
     c90:	6e 2d       	mov	r22, r14
     c92:	7f 2d       	mov	r23, r15
     c94:	80 2f       	mov	r24, r16
     c96:	91 2f       	mov	r25, r17
     c98:	a2 2c       	mov	r10, r2
     c9a:	b3 2c       	mov	r11, r3
     c9c:	c4 2c       	mov	r12, r4
     c9e:	d5 2c       	mov	r13, r5
     ca0:	e6 2c       	mov	r14, r6
     ca2:	f7 2c       	mov	r15, r7
     ca4:	08 2d       	mov	r16, r8
     ca6:	19 2d       	mov	r17, r9
     ca8:	0e 94 b2 18 	call	0x3164	; 0x3164 <__adddi3>
     cac:	a2 2e       	mov	r10, r18
     cae:	b3 2e       	mov	r11, r19
     cb0:	c4 2e       	mov	r12, r20
     cb2:	d5 2e       	mov	r13, r21
     cb4:	e6 2e       	mov	r14, r22
     cb6:	f7 2e       	mov	r15, r23
     cb8:	08 2f       	mov	r16, r24
     cba:	19 2f       	mov	r17, r25
     cbc:	8e 81       	ldd	r24, Y+6	; 0x06
     cbe:	9f 81       	ldd	r25, Y+7	; 0x07
     cc0:	fc 01       	movw	r30, r24
     cc2:	a0 82       	st	Z, r10
     cc4:	fc 01       	movw	r30, r24
     cc6:	b1 82       	std	Z+1, r11	; 0x01
     cc8:	fc 01       	movw	r30, r24
     cca:	c2 82       	std	Z+2, r12	; 0x02
     ccc:	fc 01       	movw	r30, r24
     cce:	d3 82       	std	Z+3, r13	; 0x03
     cd0:	fc 01       	movw	r30, r24
     cd2:	e4 82       	std	Z+4, r14	; 0x04
     cd4:	fc 01       	movw	r30, r24
     cd6:	f5 82       	std	Z+5, r15	; 0x05
     cd8:	fc 01       	movw	r30, r24
     cda:	06 83       	std	Z+6, r16	; 0x06
     cdc:	fc 01       	movw	r30, r24
     cde:	17 83       	std	Z+7, r17	; 0x07
			cnt++;
     ce0:	89 81       	ldd	r24, Y+1	; 0x01
     ce2:	8f 5f       	subi	r24, 0xFF	; 255
     ce4:	89 83       	std	Y+1, r24	; 0x01
	u8 cnt = 0;
	s8 z = 0;
	if((length == 0 ) || (str[cnt]-48 == 0)) *number = 0;
	else
	{
		for( z = (length - 1) ; z > -1 ; z--)
     ce6:	8a 81       	ldd	r24, Y+2	; 0x02
     ce8:	81 50       	subi	r24, 0x01	; 1
     cea:	8a 83       	std	Y+2, r24	; 0x02
     cec:	8a 81       	ldd	r24, Y+2	; 0x02
     cee:	88 23       	and	r24, r24
     cf0:	0c f0       	brlt	.+2      	; 0xcf4 <_convert+0x1e0>
     cf2:	5a cf       	rjmp	.-332    	; 0xba8 <_convert+0x94>
		{
			*number += ( ((u64) (str[cnt]-48) ) * power(10, z) );
			cnt++;
		}
	}
}
     cf4:	00 00       	nop
     cf6:	67 96       	adiw	r28, 0x17	; 23
     cf8:	0f b6       	in	r0, 0x3f	; 63
     cfa:	f8 94       	cli
     cfc:	de bf       	out	0x3e, r29	; 62
     cfe:	0f be       	out	0x3f, r0	; 63
     d00:	cd bf       	out	0x3d, r28	; 61
     d02:	df 91       	pop	r29
     d04:	cf 91       	pop	r28
     d06:	1f 91       	pop	r17
     d08:	0f 91       	pop	r16
     d0a:	ff 90       	pop	r15
     d0c:	ef 90       	pop	r14
     d0e:	df 90       	pop	r13
     d10:	cf 90       	pop	r12
     d12:	bf 90       	pop	r11
     d14:	af 90       	pop	r10
     d16:	9f 90       	pop	r9
     d18:	8f 90       	pop	r8
     d1a:	7f 90       	pop	r7
     d1c:	6f 90       	pop	r6
     d1e:	5f 90       	pop	r5
     d20:	4f 90       	pop	r4
     d22:	3f 90       	pop	r3
     d24:	2f 90       	pop	r2
     d26:	08 95       	ret

00000d28 <convertToString>:

void convertToString(s64 Number, u8 *String)
{
     d28:	2f 92       	push	r2
     d2a:	3f 92       	push	r3
     d2c:	4f 92       	push	r4
     d2e:	5f 92       	push	r5
     d30:	6f 92       	push	r6
     d32:	7f 92       	push	r7
     d34:	8f 92       	push	r8
     d36:	9f 92       	push	r9
     d38:	af 92       	push	r10
     d3a:	bf 92       	push	r11
     d3c:	cf 92       	push	r12
     d3e:	df 92       	push	r13
     d40:	ef 92       	push	r14
     d42:	ff 92       	push	r15
     d44:	0f 93       	push	r16
     d46:	1f 93       	push	r17
     d48:	cf 93       	push	r28
     d4a:	df 93       	push	r29
     d4c:	cd b7       	in	r28, 0x3d	; 61
     d4e:	de b7       	in	r29, 0x3e	; 62
     d50:	a2 97       	sbiw	r28, 0x22	; 34
     d52:	0f b6       	in	r0, 0x3f	; 63
     d54:	f8 94       	cli
     d56:	de bf       	out	0x3e, r29	; 62
     d58:	0f be       	out	0x3f, r0	; 63
     d5a:	cd bf       	out	0x3d, r28	; 61
     d5c:	29 8f       	std	Y+25, r18	; 0x19
     d5e:	3a 8f       	std	Y+26, r19	; 0x1a
     d60:	4b 8f       	std	Y+27, r20	; 0x1b
     d62:	5c 8f       	std	Y+28, r21	; 0x1c
     d64:	6d 8f       	std	Y+29, r22	; 0x1d
     d66:	7e 8f       	std	Y+30, r23	; 0x1e
     d68:	8f 8f       	std	Y+31, r24	; 0x1f
     d6a:	98 a3       	std	Y+32, r25	; 0x20
     d6c:	1a a3       	std	Y+34, r17	; 0x22
     d6e:	09 a3       	std	Y+33, r16	; 0x21
	u8 Arr[20] = {0};
     d70:	24 e1       	ldi	r18, 0x14	; 20
     d72:	ce 01       	movw	r24, r28
     d74:	03 96       	adiw	r24, 0x03	; 3
     d76:	fc 01       	movw	r30, r24
     d78:	32 2f       	mov	r19, r18
     d7a:	11 92       	st	Z+, r1
     d7c:	3a 95       	dec	r19
     d7e:	e9 f7       	brne	.-6      	; 0xd7a <convertToString+0x52>
	u8 Cnt = 0;
     d80:	19 82       	std	Y+1, r1	; 0x01
	u8 Digit = 0;
     d82:	1a 82       	std	Y+2, r1	; 0x02
	u8 sign[2]= "+\0";
     d84:	80 91 7c 00 	lds	r24, 0x007C	; 0x80007c <__DATA_REGION_ORIGIN__+0x1c>
     d88:	90 91 7d 00 	lds	r25, 0x007D	; 0x80007d <__DATA_REGION_ORIGIN__+0x1d>
     d8c:	98 8f       	std	Y+24, r25	; 0x18
     d8e:	8f 8b       	std	Y+23, r24	; 0x17
	label:
	while ((Number != 0) && (Number > 0))
     d90:	6b c0       	rjmp	.+214    	; 0xe68 <convertToString+0x140>
	{
		Digit             = (u64)Number % 10;
     d92:	29 8c       	ldd	r2, Y+25	; 0x19
     d94:	3a 8c       	ldd	r3, Y+26	; 0x1a
     d96:	4b 8c       	ldd	r4, Y+27	; 0x1b
     d98:	5c 8c       	ldd	r5, Y+28	; 0x1c
     d9a:	6d 8c       	ldd	r6, Y+29	; 0x1d
     d9c:	7e 8c       	ldd	r7, Y+30	; 0x1e
     d9e:	8f 8c       	ldd	r8, Y+31	; 0x1f
     da0:	98 a0       	ldd	r9, Y+32	; 0x20
     da2:	0f 2e       	mov	r0, r31
     da4:	fa e0       	ldi	r31, 0x0A	; 10
     da6:	af 2e       	mov	r10, r31
     da8:	f0 2d       	mov	r31, r0
     daa:	b1 2c       	mov	r11, r1
     dac:	c1 2c       	mov	r12, r1
     dae:	d1 2c       	mov	r13, r1
     db0:	e1 2c       	mov	r14, r1
     db2:	f1 2c       	mov	r15, r1
     db4:	00 e0       	ldi	r16, 0x00	; 0
     db6:	10 e0       	ldi	r17, 0x00	; 0
     db8:	22 2d       	mov	r18, r2
     dba:	33 2d       	mov	r19, r3
     dbc:	44 2d       	mov	r20, r4
     dbe:	55 2d       	mov	r21, r5
     dc0:	66 2d       	mov	r22, r6
     dc2:	77 2d       	mov	r23, r7
     dc4:	88 2d       	mov	r24, r8
     dc6:	99 2d       	mov	r25, r9
     dc8:	0e 94 0c 18 	call	0x3018	; 0x3018 <__umoddi3>
     dcc:	a2 2e       	mov	r10, r18
     dce:	b3 2e       	mov	r11, r19
     dd0:	c4 2e       	mov	r12, r20
     dd2:	d5 2e       	mov	r13, r21
     dd4:	e6 2e       	mov	r14, r22
     dd6:	f7 2e       	mov	r15, r23
     dd8:	08 2f       	mov	r16, r24
     dda:	19 2f       	mov	r17, r25
     ddc:	2a 2d       	mov	r18, r10
     dde:	3b 2d       	mov	r19, r11
     de0:	4c 2d       	mov	r20, r12
     de2:	5d 2d       	mov	r21, r13
     de4:	6e 2d       	mov	r22, r14
     de6:	7f 2d       	mov	r23, r15
     de8:	80 2f       	mov	r24, r16
     dea:	91 2f       	mov	r25, r17
     dec:	2a 83       	std	Y+2, r18	; 0x02
		Arr[Cnt]          = Digit +48;
     dee:	89 81       	ldd	r24, Y+1	; 0x01
     df0:	88 2f       	mov	r24, r24
     df2:	90 e0       	ldi	r25, 0x00	; 0
     df4:	2a 81       	ldd	r18, Y+2	; 0x02
     df6:	40 e3       	ldi	r20, 0x30	; 48
     df8:	42 0f       	add	r20, r18
     dfa:	9e 01       	movw	r18, r28
     dfc:	2d 5f       	subi	r18, 0xFD	; 253
     dfe:	3f 4f       	sbci	r19, 0xFF	; 255
     e00:	82 0f       	add	r24, r18
     e02:	93 1f       	adc	r25, r19
     e04:	fc 01       	movw	r30, r24
     e06:	40 83       	st	Z, r20
		Cnt ++;
     e08:	89 81       	ldd	r24, Y+1	; 0x01
     e0a:	8f 5f       	subi	r24, 0xFF	; 255
     e0c:	89 83       	std	Y+1, r24	; 0x01
		Number            = (u64)(Number / 10);
     e0e:	29 8c       	ldd	r2, Y+25	; 0x19
     e10:	3a 8c       	ldd	r3, Y+26	; 0x1a
     e12:	4b 8c       	ldd	r4, Y+27	; 0x1b
     e14:	5c 8c       	ldd	r5, Y+28	; 0x1c
     e16:	6d 8c       	ldd	r6, Y+29	; 0x1d
     e18:	7e 8c       	ldd	r7, Y+30	; 0x1e
     e1a:	8f 8c       	ldd	r8, Y+31	; 0x1f
     e1c:	98 a0       	ldd	r9, Y+32	; 0x20
     e1e:	0f 2e       	mov	r0, r31
     e20:	fa e0       	ldi	r31, 0x0A	; 10
     e22:	af 2e       	mov	r10, r31
     e24:	f0 2d       	mov	r31, r0
     e26:	b1 2c       	mov	r11, r1
     e28:	c1 2c       	mov	r12, r1
     e2a:	d1 2c       	mov	r13, r1
     e2c:	e1 2c       	mov	r14, r1
     e2e:	f1 2c       	mov	r15, r1
     e30:	00 e0       	ldi	r16, 0x00	; 0
     e32:	10 e0       	ldi	r17, 0x00	; 0
     e34:	22 2d       	mov	r18, r2
     e36:	33 2d       	mov	r19, r3
     e38:	44 2d       	mov	r20, r4
     e3a:	55 2d       	mov	r21, r5
     e3c:	66 2d       	mov	r22, r6
     e3e:	77 2d       	mov	r23, r7
     e40:	88 2d       	mov	r24, r8
     e42:	99 2d       	mov	r25, r9
     e44:	0e 94 dd 17 	call	0x2fba	; 0x2fba <__divdi3>
     e48:	a2 2e       	mov	r10, r18
     e4a:	b3 2e       	mov	r11, r19
     e4c:	c4 2e       	mov	r12, r20
     e4e:	d5 2e       	mov	r13, r21
     e50:	e6 2e       	mov	r14, r22
     e52:	f7 2e       	mov	r15, r23
     e54:	08 2f       	mov	r16, r24
     e56:	19 2f       	mov	r17, r25
     e58:	a9 8e       	std	Y+25, r10	; 0x19
     e5a:	ba 8e       	std	Y+26, r11	; 0x1a
     e5c:	cb 8e       	std	Y+27, r12	; 0x1b
     e5e:	dc 8e       	std	Y+28, r13	; 0x1c
     e60:	ed 8e       	std	Y+29, r14	; 0x1d
     e62:	fe 8e       	std	Y+30, r15	; 0x1e
     e64:	0f 8f       	std	Y+31, r16	; 0x1f
     e66:	18 a3       	std	Y+32, r17	; 0x20
	u8 Arr[20] = {0};
	u8 Cnt = 0;
	u8 Digit = 0;
	u8 sign[2]= "+\0";
	label:
	while ((Number != 0) && (Number > 0))
     e68:	a9 8c       	ldd	r10, Y+25	; 0x19
     e6a:	ba 8c       	ldd	r11, Y+26	; 0x1a
     e6c:	cb 8c       	ldd	r12, Y+27	; 0x1b
     e6e:	dc 8c       	ldd	r13, Y+28	; 0x1c
     e70:	ed 8c       	ldd	r14, Y+29	; 0x1d
     e72:	fe 8c       	ldd	r15, Y+30	; 0x1e
     e74:	0f 8d       	ldd	r16, Y+31	; 0x1f
     e76:	18 a1       	ldd	r17, Y+32	; 0x20
     e78:	2a 2d       	mov	r18, r10
     e7a:	3b 2d       	mov	r19, r11
     e7c:	4c 2d       	mov	r20, r12
     e7e:	5d 2d       	mov	r21, r13
     e80:	6e 2d       	mov	r22, r14
     e82:	7f 2d       	mov	r23, r15
     e84:	80 2f       	mov	r24, r16
     e86:	91 2f       	mov	r25, r17
     e88:	a0 e0       	ldi	r26, 0x00	; 0
     e8a:	0e 94 cd 18 	call	0x319a	; 0x319a <__cmpdi2_s8>
     e8e:	b1 f0       	breq	.+44     	; 0xebc <convertToString+0x194>
     e90:	a9 8c       	ldd	r10, Y+25	; 0x19
     e92:	ba 8c       	ldd	r11, Y+26	; 0x1a
     e94:	cb 8c       	ldd	r12, Y+27	; 0x1b
     e96:	dc 8c       	ldd	r13, Y+28	; 0x1c
     e98:	ed 8c       	ldd	r14, Y+29	; 0x1d
     e9a:	fe 8c       	ldd	r15, Y+30	; 0x1e
     e9c:	0f 8d       	ldd	r16, Y+31	; 0x1f
     e9e:	18 a1       	ldd	r17, Y+32	; 0x20
     ea0:	2a 2d       	mov	r18, r10
     ea2:	3b 2d       	mov	r19, r11
     ea4:	4c 2d       	mov	r20, r12
     ea6:	5d 2d       	mov	r21, r13
     ea8:	6e 2d       	mov	r22, r14
     eaa:	7f 2d       	mov	r23, r15
     eac:	80 2f       	mov	r24, r16
     eae:	91 2f       	mov	r25, r17
     eb0:	a0 e0       	ldi	r26, 0x00	; 0
     eb2:	0e 94 cd 18 	call	0x319a	; 0x319a <__cmpdi2_s8>
     eb6:	11 f0       	breq	.+4      	; 0xebc <convertToString+0x194>
     eb8:	0c f0       	brlt	.+2      	; 0xebc <convertToString+0x194>
     eba:	6b cf       	rjmp	.-298    	; 0xd92 <convertToString+0x6a>
		Digit             = (u64)Number % 10;
		Arr[Cnt]          = Digit +48;
		Cnt ++;
		Number            = (u64)(Number / 10);
	}
	if(Number < 0)
     ebc:	a9 8c       	ldd	r10, Y+25	; 0x19
     ebe:	ba 8c       	ldd	r11, Y+26	; 0x1a
     ec0:	cb 8c       	ldd	r12, Y+27	; 0x1b
     ec2:	dc 8c       	ldd	r13, Y+28	; 0x1c
     ec4:	ed 8c       	ldd	r14, Y+29	; 0x1d
     ec6:	fe 8c       	ldd	r15, Y+30	; 0x1e
     ec8:	0f 8d       	ldd	r16, Y+31	; 0x1f
     eca:	18 a1       	ldd	r17, Y+32	; 0x20
     ecc:	2a 2d       	mov	r18, r10
     ece:	3b 2d       	mov	r19, r11
     ed0:	4c 2d       	mov	r20, r12
     ed2:	5d 2d       	mov	r21, r13
     ed4:	6e 2d       	mov	r22, r14
     ed6:	7f 2d       	mov	r23, r15
     ed8:	80 2f       	mov	r24, r16
     eda:	91 2f       	mov	r25, r17
     edc:	a0 e0       	ldi	r26, 0x00	; 0
     ede:	0e 94 cd 18 	call	0x319a	; 0x319a <__cmpdi2_s8>
     ee2:	c4 f5       	brge	.+112    	; 0xf54 <convertToString+0x22c>
	{
		memset(sign, 0, 2);
     ee4:	ce 01       	movw	r24, r28
     ee6:	47 96       	adiw	r24, 0x17	; 23
     ee8:	42 e0       	ldi	r20, 0x02	; 2
     eea:	50 e0       	ldi	r21, 0x00	; 0
     eec:	60 e0       	ldi	r22, 0x00	; 0
     eee:	70 e0       	ldi	r23, 0x00	; 0
     ef0:	0e 94 cb 19 	call	0x3396	; 0x3396 <memset>
		strcat(sign, "-\0");
     ef4:	ce 01       	movw	r24, r28
     ef6:	47 96       	adiw	r24, 0x17	; 23
     ef8:	9c 01       	movw	r18, r24
     efa:	f9 01       	movw	r30, r18
     efc:	01 90       	ld	r0, Z+
     efe:	00 20       	and	r0, r0
     f00:	e9 f7       	brne	.-6      	; 0xefc <convertToString+0x1d4>
     f02:	cf 01       	movw	r24, r30
     f04:	01 97       	sbiw	r24, 0x01	; 1
     f06:	82 1b       	sub	r24, r18
     f08:	93 0b       	sbc	r25, r19
     f0a:	9e 01       	movw	r18, r28
     f0c:	29 5e       	subi	r18, 0xE9	; 233
     f0e:	3f 4f       	sbci	r19, 0xFF	; 255
     f10:	82 0f       	add	r24, r18
     f12:	93 1f       	adc	r25, r19
     f14:	2d e2       	ldi	r18, 0x2D	; 45
     f16:	30 e0       	ldi	r19, 0x00	; 0
     f18:	fc 01       	movw	r30, r24
     f1a:	31 83       	std	Z+1, r19	; 0x01
     f1c:	20 83       	st	Z, r18
		Number *= -1;
     f1e:	29 8d       	ldd	r18, Y+25	; 0x19
     f20:	3a 8d       	ldd	r19, Y+26	; 0x1a
     f22:	4b 8d       	ldd	r20, Y+27	; 0x1b
     f24:	5c 8d       	ldd	r21, Y+28	; 0x1c
     f26:	6d 8d       	ldd	r22, Y+29	; 0x1d
     f28:	7e 8d       	ldd	r23, Y+30	; 0x1e
     f2a:	8f 8d       	ldd	r24, Y+31	; 0x1f
     f2c:	98 a1       	ldd	r25, Y+32	; 0x20
     f2e:	0e 94 6b 18 	call	0x30d6	; 0x30d6 <__negdi2>
     f32:	a2 2e       	mov	r10, r18
     f34:	b3 2e       	mov	r11, r19
     f36:	c4 2e       	mov	r12, r20
     f38:	d5 2e       	mov	r13, r21
     f3a:	e6 2e       	mov	r14, r22
     f3c:	f7 2e       	mov	r15, r23
     f3e:	08 2f       	mov	r16, r24
     f40:	19 2f       	mov	r17, r25
     f42:	a9 8e       	std	Y+25, r10	; 0x19
     f44:	ba 8e       	std	Y+26, r11	; 0x1a
     f46:	cb 8e       	std	Y+27, r12	; 0x1b
     f48:	dc 8e       	std	Y+28, r13	; 0x1c
     f4a:	ed 8e       	std	Y+29, r14	; 0x1d
     f4c:	fe 8e       	std	Y+30, r15	; 0x1e
     f4e:	0f 8f       	std	Y+31, r16	; 0x1f
     f50:	18 a3       	std	Y+32, r17	; 0x20
		goto label;
     f52:	1e cf       	rjmp	.-452    	; 0xd90 <convertToString+0x68>
	}
	if (sign[0] == '+')
     f54:	8f 89       	ldd	r24, Y+23	; 0x17
     f56:	8b 32       	cpi	r24, 0x2B	; 43
     f58:	29 f4       	brne	.+10     	; 0xf64 <convertToString+0x23c>
	{
		strrev(Arr);
     f5a:	ce 01       	movw	r24, r28
     f5c:	03 96       	adiw	r24, 0x03	; 3
     f5e:	0e 94 f1 19 	call	0x33e2	; 0x33e2 <strrev>
     f62:	0c c0       	rjmp	.+24     	; 0xf7c <convertToString+0x254>
	}
	else
	{
		strcat(Arr, sign);
     f64:	9e 01       	movw	r18, r28
     f66:	29 5e       	subi	r18, 0xE9	; 233
     f68:	3f 4f       	sbci	r19, 0xFF	; 255
     f6a:	ce 01       	movw	r24, r28
     f6c:	03 96       	adiw	r24, 0x03	; 3
     f6e:	b9 01       	movw	r22, r18
     f70:	0e 94 d2 19 	call	0x33a4	; 0x33a4 <strcat>
		strrev(Arr);
     f74:	ce 01       	movw	r24, r28
     f76:	03 96       	adiw	r24, 0x03	; 3
     f78:	0e 94 f1 19 	call	0x33e2	; 0x33e2 <strrev>
	}
	strcat(String, Arr);
     f7c:	9e 01       	movw	r18, r28
     f7e:	2d 5f       	subi	r18, 0xFD	; 253
     f80:	3f 4f       	sbci	r19, 0xFF	; 255
     f82:	89 a1       	ldd	r24, Y+33	; 0x21
     f84:	9a a1       	ldd	r25, Y+34	; 0x22
     f86:	b9 01       	movw	r22, r18
     f88:	0e 94 d2 19 	call	0x33a4	; 0x33a4 <strcat>
}
     f8c:	00 00       	nop
     f8e:	a2 96       	adiw	r28, 0x22	; 34
     f90:	0f b6       	in	r0, 0x3f	; 63
     f92:	f8 94       	cli
     f94:	de bf       	out	0x3e, r29	; 62
     f96:	0f be       	out	0x3f, r0	; 63
     f98:	cd bf       	out	0x3d, r28	; 61
     f9a:	df 91       	pop	r29
     f9c:	cf 91       	pop	r28
     f9e:	1f 91       	pop	r17
     fa0:	0f 91       	pop	r16
     fa2:	ff 90       	pop	r15
     fa4:	ef 90       	pop	r14
     fa6:	df 90       	pop	r13
     fa8:	cf 90       	pop	r12
     faa:	bf 90       	pop	r11
     fac:	af 90       	pop	r10
     fae:	9f 90       	pop	r9
     fb0:	8f 90       	pop	r8
     fb2:	7f 90       	pop	r7
     fb4:	6f 90       	pop	r6
     fb6:	5f 90       	pop	r5
     fb8:	4f 90       	pop	r4
     fba:	3f 90       	pop	r3
     fbc:	2f 90       	pop	r2
     fbe:	08 95       	ret

00000fc0 <H_Keypad_Init>:


#include "Keypad.h"

void H_Keypad_Init(void)
{
     fc0:	cf 93       	push	r28
     fc2:	df 93       	push	r29
     fc4:	cd b7       	in	r28, 0x3d	; 61
     fc6:	de b7       	in	r29, 0x3e	; 62
	M_Dio_PinMode(KEYPAD_R0_PIN, OUTPUT);
     fc8:	61 e0       	ldi	r22, 0x01	; 1
     fca:	84 e1       	ldi	r24, 0x14	; 20
     fcc:	0e 94 8c 0e 	call	0x1d18	; 0x1d18 <M_Dio_PinMode>
	M_Dio_PinMode(KEYPAD_R1_PIN, OUTPUT);
     fd0:	61 e0       	ldi	r22, 0x01	; 1
     fd2:	85 e1       	ldi	r24, 0x15	; 21
     fd4:	0e 94 8c 0e 	call	0x1d18	; 0x1d18 <M_Dio_PinMode>
	M_Dio_PinMode(KEYPAD_R2_PIN, OUTPUT);
     fd8:	61 e0       	ldi	r22, 0x01	; 1
     fda:	86 e1       	ldi	r24, 0x16	; 22
     fdc:	0e 94 8c 0e 	call	0x1d18	; 0x1d18 <M_Dio_PinMode>
	M_Dio_PinMode(KEYPAD_R3_PIN, OUTPUT);
     fe0:	61 e0       	ldi	r22, 0x01	; 1
     fe2:	87 e1       	ldi	r24, 0x17	; 23
     fe4:	0e 94 8c 0e 	call	0x1d18	; 0x1d18 <M_Dio_PinMode>
	
	M_Dio_PinMode(KEYPAD_C0_PIN, INPUT);
     fe8:	62 e0       	ldi	r22, 0x02	; 2
     fea:	88 e1       	ldi	r24, 0x18	; 24
     fec:	0e 94 8c 0e 	call	0x1d18	; 0x1d18 <M_Dio_PinMode>
	M_Dio_PinMode(KEYPAD_C1_PIN, INPUT);
     ff0:	62 e0       	ldi	r22, 0x02	; 2
     ff2:	89 e1       	ldi	r24, 0x19	; 25
     ff4:	0e 94 8c 0e 	call	0x1d18	; 0x1d18 <M_Dio_PinMode>
	M_Dio_PinMode(KEYPAD_C2_PIN, INPUT);
     ff8:	62 e0       	ldi	r22, 0x02	; 2
     ffa:	8a e1       	ldi	r24, 0x1A	; 26
     ffc:	0e 94 8c 0e 	call	0x1d18	; 0x1d18 <M_Dio_PinMode>
	M_Dio_PinMode(KEYPAD_C3_PIN, INPUT);
    1000:	62 e0       	ldi	r22, 0x02	; 2
    1002:	8b e1       	ldi	r24, 0x1B	; 27
    1004:	0e 94 8c 0e 	call	0x1d18	; 0x1d18 <M_Dio_PinMode>
	
	M_Dio_PinPullUpRes(KEYPAD_C0_PIN, ENABLE);
    1008:	61 e0       	ldi	r22, 0x01	; 1
    100a:	88 e1       	ldi	r24, 0x18	; 24
    100c:	0e 94 1c 11 	call	0x2238	; 0x2238 <M_Dio_PinPullUpRes>
	M_Dio_PinPullUpRes(KEYPAD_C1_PIN, ENABLE);
    1010:	61 e0       	ldi	r22, 0x01	; 1
    1012:	89 e1       	ldi	r24, 0x19	; 25
    1014:	0e 94 1c 11 	call	0x2238	; 0x2238 <M_Dio_PinPullUpRes>
	M_Dio_PinPullUpRes(KEYPAD_C2_PIN, ENABLE);
    1018:	61 e0       	ldi	r22, 0x01	; 1
    101a:	8a e1       	ldi	r24, 0x1A	; 26
    101c:	0e 94 1c 11 	call	0x2238	; 0x2238 <M_Dio_PinPullUpRes>
	M_Dio_PinPullUpRes(KEYPAD_C3_PIN, ENABLE);\
    1020:	61 e0       	ldi	r22, 0x01	; 1
    1022:	8b e1       	ldi	r24, 0x1B	; 27
    1024:	0e 94 1c 11 	call	0x2238	; 0x2238 <M_Dio_PinPullUpRes>
	
	M_Dio_PinWrite(KEYPAD_R0_PIN, HIGH);
    1028:	61 e0       	ldi	r22, 0x01	; 1
    102a:	84 e1       	ldi	r24, 0x14	; 20
    102c:	0e 94 94 0f 	call	0x1f28	; 0x1f28 <M_Dio_PinWrite>
	M_Dio_PinWrite(KEYPAD_R1_PIN, HIGH);
    1030:	61 e0       	ldi	r22, 0x01	; 1
    1032:	85 e1       	ldi	r24, 0x15	; 21
    1034:	0e 94 94 0f 	call	0x1f28	; 0x1f28 <M_Dio_PinWrite>
	M_Dio_PinWrite(KEYPAD_R2_PIN, HIGH);
    1038:	61 e0       	ldi	r22, 0x01	; 1
    103a:	86 e1       	ldi	r24, 0x16	; 22
    103c:	0e 94 94 0f 	call	0x1f28	; 0x1f28 <M_Dio_PinWrite>
	M_Dio_PinWrite(KEYPAD_R3_PIN, HIGH);
    1040:	61 e0       	ldi	r22, 0x01	; 1
    1042:	87 e1       	ldi	r24, 0x17	; 23
    1044:	0e 94 94 0f 	call	0x1f28	; 0x1f28 <M_Dio_PinWrite>
}
    1048:	00 00       	nop
    104a:	df 91       	pop	r29
    104c:	cf 91       	pop	r28
    104e:	08 95       	ret

00001050 <H_Keypad_Read>:

u8   H_Keypad_Read(void)
{
    1050:	cf 93       	push	r28
    1052:	df 93       	push	r29
    1054:	cd b7       	in	r28, 0x3d	; 61
    1056:	de b7       	in	r29, 0x3e	; 62
    1058:	a2 97       	sbiw	r28, 0x22	; 34
    105a:	0f b6       	in	r0, 0x3f	; 63
    105c:	f8 94       	cli
    105e:	de bf       	out	0x3e, r29	; 62
    1060:	0f be       	out	0x3f, r0	; 63
    1062:	cd bf       	out	0x3d, r28	; 61
	u8 Keypad[4][4] = 
    1064:	80 e1       	ldi	r24, 0x10	; 16
    1066:	ef e7       	ldi	r30, 0x7F	; 127
    1068:	f0 e0       	ldi	r31, 0x00	; 0
    106a:	de 01       	movw	r26, r28
    106c:	53 96       	adiw	r26, 0x13	; 19
    106e:	01 90       	ld	r0, Z+
    1070:	0d 92       	st	X+, r0
    1072:	8a 95       	dec	r24
    1074:	e1 f7       	brne	.-8      	; 0x106e <H_Keypad_Read+0x1e>
		{'4', '5', '6', '*'},
		{'1', '2', '3', '-'},
		{'C', '0', '=', '+'}
	};
	
	u8 local_Row_cnt = 0;
    1076:	19 82       	std	Y+1, r1	; 0x01
	u8 local_Column_cnt = 0;
    1078:	1a 82       	std	Y+2, r1	; 0x02
	u8 local_u8_value = '\0';
    107a:	1b 82       	std	Y+3, r1	; 0x03
	u8 local_u8_Reading = KEYPAD_RELEASED;
    107c:	81 e0       	ldi	r24, 0x01	; 1
    107e:	8c 83       	std	Y+4, r24	; 0x04
	
	for(local_Row_cnt = KEYPAD_R0_PIN; local_Row_cnt <= KEYPAD_R3_PIN; local_Row_cnt++)
    1080:	84 e1       	ldi	r24, 0x14	; 20
    1082:	89 83       	std	Y+1, r24	; 0x01
    1084:	b3 c0       	rjmp	.+358    	; 0x11ec <H_Keypad_Read+0x19c>
	{
		M_Dio_PinWrite(local_Row_cnt, LOW);
    1086:	62 e0       	ldi	r22, 0x02	; 2
    1088:	89 81       	ldd	r24, Y+1	; 0x01
    108a:	0e 94 94 0f 	call	0x1f28	; 0x1f28 <M_Dio_PinWrite>
		
		for (local_Column_cnt = KEYPAD_C0_PIN; local_Column_cnt <= KEYPAD_C3_PIN; local_Column_cnt++)
    108e:	88 e1       	ldi	r24, 0x18	; 24
    1090:	8a 83       	std	Y+2, r24	; 0x02
    1092:	a1 c0       	rjmp	.+322    	; 0x11d6 <H_Keypad_Read+0x186>
		{
			local_u8_Reading = M_Dio_PinRead(local_Column_cnt);
    1094:	8a 81       	ldd	r24, Y+2	; 0x02
    1096:	0e 94 9c 10 	call	0x2138	; 0x2138 <M_Dio_PinRead>
    109a:	8c 83       	std	Y+4, r24	; 0x04
			if(local_u8_Reading == KEYPAD_PRESSED)
    109c:	8c 81       	ldd	r24, Y+4	; 0x04
    109e:	88 23       	and	r24, r24
    10a0:	09 f0       	breq	.+2      	; 0x10a4 <H_Keypad_Read+0x54>
    10a2:	96 c0       	rjmp	.+300    	; 0x11d0 <H_Keypad_Read+0x180>
    10a4:	80 e0       	ldi	r24, 0x00	; 0
    10a6:	90 e0       	ldi	r25, 0x00	; 0
    10a8:	a0 e2       	ldi	r26, 0x20	; 32
    10aa:	b1 e4       	ldi	r27, 0x41	; 65
    10ac:	8d 83       	std	Y+5, r24	; 0x05
    10ae:	9e 83       	std	Y+6, r25	; 0x06
    10b0:	af 83       	std	Y+7, r26	; 0x07
    10b2:	b8 87       	std	Y+8, r27	; 0x08

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    10b4:	20 e0       	ldi	r18, 0x00	; 0
    10b6:	30 e0       	ldi	r19, 0x00	; 0
    10b8:	4a e7       	ldi	r20, 0x7A	; 122
    10ba:	55 e4       	ldi	r21, 0x45	; 69
    10bc:	6d 81       	ldd	r22, Y+5	; 0x05
    10be:	7e 81       	ldd	r23, Y+6	; 0x06
    10c0:	8f 81       	ldd	r24, Y+7	; 0x07
    10c2:	98 85       	ldd	r25, Y+8	; 0x08
    10c4:	0e 94 98 13 	call	0x2730	; 0x2730 <__mulsf3>
    10c8:	dc 01       	movw	r26, r24
    10ca:	cb 01       	movw	r24, r22
    10cc:	89 87       	std	Y+9, r24	; 0x09
    10ce:	9a 87       	std	Y+10, r25	; 0x0a
    10d0:	ab 87       	std	Y+11, r26	; 0x0b
    10d2:	bc 87       	std	Y+12, r27	; 0x0c
	if (__tmp < 1.0)
    10d4:	20 e0       	ldi	r18, 0x00	; 0
    10d6:	30 e0       	ldi	r19, 0x00	; 0
    10d8:	40 e8       	ldi	r20, 0x80	; 128
    10da:	5f e3       	ldi	r21, 0x3F	; 63
    10dc:	69 85       	ldd	r22, Y+9	; 0x09
    10de:	7a 85       	ldd	r23, Y+10	; 0x0a
    10e0:	8b 85       	ldd	r24, Y+11	; 0x0b
    10e2:	9c 85       	ldd	r25, Y+12	; 0x0c
    10e4:	0e 94 24 12 	call	0x2448	; 0x2448 <__cmpsf2>
    10e8:	88 23       	and	r24, r24
    10ea:	2c f4       	brge	.+10     	; 0x10f6 <H_Keypad_Read+0xa6>
		__ticks = 1;
    10ec:	81 e0       	ldi	r24, 0x01	; 1
    10ee:	90 e0       	ldi	r25, 0x00	; 0
    10f0:	9e 87       	std	Y+14, r25	; 0x0e
    10f2:	8d 87       	std	Y+13, r24	; 0x0d
    10f4:	3f c0       	rjmp	.+126    	; 0x1174 <H_Keypad_Read+0x124>
	else if (__tmp > 65535)
    10f6:	20 e0       	ldi	r18, 0x00	; 0
    10f8:	3f ef       	ldi	r19, 0xFF	; 255
    10fa:	4f e7       	ldi	r20, 0x7F	; 127
    10fc:	57 e4       	ldi	r21, 0x47	; 71
    10fe:	69 85       	ldd	r22, Y+9	; 0x09
    1100:	7a 85       	ldd	r23, Y+10	; 0x0a
    1102:	8b 85       	ldd	r24, Y+11	; 0x0b
    1104:	9c 85       	ldd	r25, Y+12	; 0x0c
    1106:	0e 94 93 13 	call	0x2726	; 0x2726 <__gesf2>
    110a:	18 16       	cp	r1, r24
    110c:	4c f5       	brge	.+82     	; 0x1160 <H_Keypad_Read+0x110>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    110e:	20 e0       	ldi	r18, 0x00	; 0
    1110:	30 e0       	ldi	r19, 0x00	; 0
    1112:	40 e2       	ldi	r20, 0x20	; 32
    1114:	51 e4       	ldi	r21, 0x41	; 65
    1116:	6d 81       	ldd	r22, Y+5	; 0x05
    1118:	7e 81       	ldd	r23, Y+6	; 0x06
    111a:	8f 81       	ldd	r24, Y+7	; 0x07
    111c:	98 85       	ldd	r25, Y+8	; 0x08
    111e:	0e 94 98 13 	call	0x2730	; 0x2730 <__mulsf3>
    1122:	dc 01       	movw	r26, r24
    1124:	cb 01       	movw	r24, r22
    1126:	bc 01       	movw	r22, r24
    1128:	cd 01       	movw	r24, r26
    112a:	0e 94 9b 12 	call	0x2536	; 0x2536 <__fixunssfsi>
    112e:	dc 01       	movw	r26, r24
    1130:	cb 01       	movw	r24, r22
    1132:	9e 87       	std	Y+14, r25	; 0x0e
    1134:	8d 87       	std	Y+13, r24	; 0x0d
    1136:	0f c0       	rjmp	.+30     	; 0x1156 <H_Keypad_Read+0x106>
    1138:	80 e9       	ldi	r24, 0x90	; 144
    113a:	91 e0       	ldi	r25, 0x01	; 1
    113c:	98 8b       	std	Y+16, r25	; 0x10
    113e:	8f 87       	std	Y+15, r24	; 0x0f
    1140:	8f 85       	ldd	r24, Y+15	; 0x0f
    1142:	98 89       	ldd	r25, Y+16	; 0x10
    1144:	01 97       	sbiw	r24, 0x01	; 1
    1146:	f1 f7       	brne	.-4      	; 0x1144 <H_Keypad_Read+0xf4>
    1148:	98 8b       	std	Y+16, r25	; 0x10
    114a:	8f 87       	std	Y+15, r24	; 0x0f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    114c:	8d 85       	ldd	r24, Y+13	; 0x0d
    114e:	9e 85       	ldd	r25, Y+14	; 0x0e
    1150:	01 97       	sbiw	r24, 0x01	; 1
    1152:	9e 87       	std	Y+14, r25	; 0x0e
    1154:	8d 87       	std	Y+13, r24	; 0x0d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1156:	8d 85       	ldd	r24, Y+13	; 0x0d
    1158:	9e 85       	ldd	r25, Y+14	; 0x0e
    115a:	89 2b       	or	r24, r25
    115c:	69 f7       	brne	.-38     	; 0x1138 <H_Keypad_Read+0xe8>
    115e:	14 c0       	rjmp	.+40     	; 0x1188 <H_Keypad_Read+0x138>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1160:	69 85       	ldd	r22, Y+9	; 0x09
    1162:	7a 85       	ldd	r23, Y+10	; 0x0a
    1164:	8b 85       	ldd	r24, Y+11	; 0x0b
    1166:	9c 85       	ldd	r25, Y+12	; 0x0c
    1168:	0e 94 9b 12 	call	0x2536	; 0x2536 <__fixunssfsi>
    116c:	dc 01       	movw	r26, r24
    116e:	cb 01       	movw	r24, r22
    1170:	9e 87       	std	Y+14, r25	; 0x0e
    1172:	8d 87       	std	Y+13, r24	; 0x0d
    1174:	8d 85       	ldd	r24, Y+13	; 0x0d
    1176:	9e 85       	ldd	r25, Y+14	; 0x0e
    1178:	9a 8b       	std	Y+18, r25	; 0x12
    117a:	89 8b       	std	Y+17, r24	; 0x11
    117c:	89 89       	ldd	r24, Y+17	; 0x11
    117e:	9a 89       	ldd	r25, Y+18	; 0x12
    1180:	01 97       	sbiw	r24, 0x01	; 1
    1182:	f1 f7       	brne	.-4      	; 0x1180 <H_Keypad_Read+0x130>
    1184:	9a 8b       	std	Y+18, r25	; 0x12
    1186:	89 8b       	std	Y+17, r24	; 0x11
			{
				_delay_ms(10);
				if ( M_Dio_PinRead(local_Column_cnt) == KEYPAD_PRESSED)
    1188:	8a 81       	ldd	r24, Y+2	; 0x02
    118a:	0e 94 9c 10 	call	0x2138	; 0x2138 <M_Dio_PinRead>
    118e:	88 23       	and	r24, r24
    1190:	f9 f4       	brne	.+62     	; 0x11d0 <H_Keypad_Read+0x180>
				{
					
					while (M_Dio_PinRead(local_Column_cnt) == KEYPAD_PRESSED);
    1192:	00 00       	nop
    1194:	8a 81       	ldd	r24, Y+2	; 0x02
    1196:	0e 94 9c 10 	call	0x2138	; 0x2138 <M_Dio_PinRead>
    119a:	88 23       	and	r24, r24
    119c:	d9 f3       	breq	.-10     	; 0x1194 <H_Keypad_Read+0x144>
					local_u8_value = Keypad[local_Row_cnt - KEYPAD_R0_PIN ][local_Column_cnt - KEYPAD_C0_PIN];
    119e:	89 81       	ldd	r24, Y+1	; 0x01
    11a0:	88 2f       	mov	r24, r24
    11a2:	90 e0       	ldi	r25, 0x00	; 0
    11a4:	9c 01       	movw	r18, r24
    11a6:	24 51       	subi	r18, 0x14	; 20
    11a8:	31 09       	sbc	r19, r1
    11aa:	8a 81       	ldd	r24, Y+2	; 0x02
    11ac:	88 2f       	mov	r24, r24
    11ae:	90 e0       	ldi	r25, 0x00	; 0
    11b0:	48 97       	sbiw	r24, 0x18	; 24
    11b2:	22 0f       	add	r18, r18
    11b4:	33 1f       	adc	r19, r19
    11b6:	22 0f       	add	r18, r18
    11b8:	33 1f       	adc	r19, r19
    11ba:	ae 01       	movw	r20, r28
    11bc:	4f 5f       	subi	r20, 0xFF	; 255
    11be:	5f 4f       	sbci	r21, 0xFF	; 255
    11c0:	24 0f       	add	r18, r20
    11c2:	35 1f       	adc	r19, r21
    11c4:	82 0f       	add	r24, r18
    11c6:	93 1f       	adc	r25, r19
    11c8:	42 96       	adiw	r24, 0x12	; 18
    11ca:	fc 01       	movw	r30, r24
    11cc:	80 81       	ld	r24, Z
    11ce:	8b 83       	std	Y+3, r24	; 0x03
	
	for(local_Row_cnt = KEYPAD_R0_PIN; local_Row_cnt <= KEYPAD_R3_PIN; local_Row_cnt++)
	{
		M_Dio_PinWrite(local_Row_cnt, LOW);
		
		for (local_Column_cnt = KEYPAD_C0_PIN; local_Column_cnt <= KEYPAD_C3_PIN; local_Column_cnt++)
    11d0:	8a 81       	ldd	r24, Y+2	; 0x02
    11d2:	8f 5f       	subi	r24, 0xFF	; 255
    11d4:	8a 83       	std	Y+2, r24	; 0x02
    11d6:	8a 81       	ldd	r24, Y+2	; 0x02
    11d8:	8c 31       	cpi	r24, 0x1C	; 28
    11da:	08 f4       	brcc	.+2      	; 0x11de <H_Keypad_Read+0x18e>
    11dc:	5b cf       	rjmp	.-330    	; 0x1094 <H_Keypad_Read+0x44>
				
				}
			}
		}
		
		M_Dio_PinWrite(local_Row_cnt, HIGH);
    11de:	61 e0       	ldi	r22, 0x01	; 1
    11e0:	89 81       	ldd	r24, Y+1	; 0x01
    11e2:	0e 94 94 0f 	call	0x1f28	; 0x1f28 <M_Dio_PinWrite>
	u8 local_Row_cnt = 0;
	u8 local_Column_cnt = 0;
	u8 local_u8_value = '\0';
	u8 local_u8_Reading = KEYPAD_RELEASED;
	
	for(local_Row_cnt = KEYPAD_R0_PIN; local_Row_cnt <= KEYPAD_R3_PIN; local_Row_cnt++)
    11e6:	89 81       	ldd	r24, Y+1	; 0x01
    11e8:	8f 5f       	subi	r24, 0xFF	; 255
    11ea:	89 83       	std	Y+1, r24	; 0x01
    11ec:	89 81       	ldd	r24, Y+1	; 0x01
    11ee:	88 31       	cpi	r24, 0x18	; 24
    11f0:	08 f4       	brcc	.+2      	; 0x11f4 <H_Keypad_Read+0x1a4>
    11f2:	49 cf       	rjmp	.-366    	; 0x1086 <H_Keypad_Read+0x36>
		}
		
		M_Dio_PinWrite(local_Row_cnt, HIGH);
	}
	
	return local_u8_value;
    11f4:	8b 81       	ldd	r24, Y+3	; 0x03
    11f6:	a2 96       	adiw	r28, 0x22	; 34
    11f8:	0f b6       	in	r0, 0x3f	; 63
    11fa:	f8 94       	cli
    11fc:	de bf       	out	0x3e, r29	; 62
    11fe:	0f be       	out	0x3f, r0	; 63
    1200:	cd bf       	out	0x3d, r28	; 61
    1202:	df 91       	pop	r29
    1204:	cf 91       	pop	r28
    1206:	08 95       	ret

00001208 <H_Lcd_Init>:
}

void H_Lcd_ShiftRight(void)
{
	H_Lcd_WriteCommand(LCD_SHIFT_RIGHT);
}
    1208:	cf 93       	push	r28
    120a:	df 93       	push	r29
    120c:	cd b7       	in	r28, 0x3d	; 61
    120e:	de b7       	in	r29, 0x3e	; 62
    1210:	2e 97       	sbiw	r28, 0x0e	; 14
    1212:	0f b6       	in	r0, 0x3f	; 63
    1214:	f8 94       	cli
    1216:	de bf       	out	0x3e, r29	; 62
    1218:	0f be       	out	0x3f, r0	; 63
    121a:	cd bf       	out	0x3d, r28	; 61
    121c:	61 e0       	ldi	r22, 0x01	; 1
    121e:	8e e0       	ldi	r24, 0x0E	; 14
    1220:	0e 94 8c 0e 	call	0x1d18	; 0x1d18 <M_Dio_PinMode>
    1224:	61 e0       	ldi	r22, 0x01	; 1
    1226:	8f e0       	ldi	r24, 0x0F	; 15
    1228:	0e 94 8c 0e 	call	0x1d18	; 0x1d18 <M_Dio_PinMode>
    122c:	61 e0       	ldi	r22, 0x01	; 1
    122e:	80 e1       	ldi	r24, 0x10	; 16
    1230:	0e 94 8c 0e 	call	0x1d18	; 0x1d18 <M_Dio_PinMode>
    1234:	61 e0       	ldi	r22, 0x01	; 1
    1236:	81 e1       	ldi	r24, 0x11	; 17
    1238:	0e 94 8c 0e 	call	0x1d18	; 0x1d18 <M_Dio_PinMode>
    123c:	61 e0       	ldi	r22, 0x01	; 1
    123e:	8f e1       	ldi	r24, 0x1F	; 31
    1240:	0e 94 8c 0e 	call	0x1d18	; 0x1d18 <M_Dio_PinMode>
    1244:	61 e0       	ldi	r22, 0x01	; 1
    1246:	8e e1       	ldi	r24, 0x1E	; 30
    1248:	0e 94 8c 0e 	call	0x1d18	; 0x1d18 <M_Dio_PinMode>
    124c:	61 e0       	ldi	r22, 0x01	; 1
    124e:	81 e2       	ldi	r24, 0x21	; 33
    1250:	0e 94 8c 0e 	call	0x1d18	; 0x1d18 <M_Dio_PinMode>
    1254:	62 e0       	ldi	r22, 0x02	; 2
    1256:	81 e2       	ldi	r24, 0x21	; 33
    1258:	0e 94 94 0f 	call	0x1f28	; 0x1f28 <M_Dio_PinWrite>
    125c:	80 e0       	ldi	r24, 0x00	; 0
    125e:	90 e0       	ldi	r25, 0x00	; 0
    1260:	a8 ec       	ldi	r26, 0xC8	; 200
    1262:	b2 e4       	ldi	r27, 0x42	; 66
    1264:	89 83       	std	Y+1, r24	; 0x01
    1266:	9a 83       	std	Y+2, r25	; 0x02
    1268:	ab 83       	std	Y+3, r26	; 0x03
    126a:	bc 83       	std	Y+4, r27	; 0x04
    126c:	20 e0       	ldi	r18, 0x00	; 0
    126e:	30 e0       	ldi	r19, 0x00	; 0
    1270:	4a e7       	ldi	r20, 0x7A	; 122
    1272:	55 e4       	ldi	r21, 0x45	; 69
    1274:	69 81       	ldd	r22, Y+1	; 0x01
    1276:	7a 81       	ldd	r23, Y+2	; 0x02
    1278:	8b 81       	ldd	r24, Y+3	; 0x03
    127a:	9c 81       	ldd	r25, Y+4	; 0x04
    127c:	0e 94 98 13 	call	0x2730	; 0x2730 <__mulsf3>
    1280:	dc 01       	movw	r26, r24
    1282:	cb 01       	movw	r24, r22
    1284:	8d 83       	std	Y+5, r24	; 0x05
    1286:	9e 83       	std	Y+6, r25	; 0x06
    1288:	af 83       	std	Y+7, r26	; 0x07
    128a:	b8 87       	std	Y+8, r27	; 0x08
    128c:	20 e0       	ldi	r18, 0x00	; 0
    128e:	30 e0       	ldi	r19, 0x00	; 0
    1290:	40 e8       	ldi	r20, 0x80	; 128
    1292:	5f e3       	ldi	r21, 0x3F	; 63
    1294:	6d 81       	ldd	r22, Y+5	; 0x05
    1296:	7e 81       	ldd	r23, Y+6	; 0x06
    1298:	8f 81       	ldd	r24, Y+7	; 0x07
    129a:	98 85       	ldd	r25, Y+8	; 0x08
    129c:	0e 94 24 12 	call	0x2448	; 0x2448 <__cmpsf2>
    12a0:	88 23       	and	r24, r24
    12a2:	2c f4       	brge	.+10     	; 0x12ae <H_Lcd_Init+0xa6>
    12a4:	81 e0       	ldi	r24, 0x01	; 1
    12a6:	90 e0       	ldi	r25, 0x00	; 0
    12a8:	9a 87       	std	Y+10, r25	; 0x0a
    12aa:	89 87       	std	Y+9, r24	; 0x09
    12ac:	3f c0       	rjmp	.+126    	; 0x132c <H_Lcd_Init+0x124>
    12ae:	20 e0       	ldi	r18, 0x00	; 0
    12b0:	3f ef       	ldi	r19, 0xFF	; 255
    12b2:	4f e7       	ldi	r20, 0x7F	; 127
    12b4:	57 e4       	ldi	r21, 0x47	; 71
    12b6:	6d 81       	ldd	r22, Y+5	; 0x05
    12b8:	7e 81       	ldd	r23, Y+6	; 0x06
    12ba:	8f 81       	ldd	r24, Y+7	; 0x07
    12bc:	98 85       	ldd	r25, Y+8	; 0x08
    12be:	0e 94 93 13 	call	0x2726	; 0x2726 <__gesf2>
    12c2:	18 16       	cp	r1, r24
    12c4:	4c f5       	brge	.+82     	; 0x1318 <H_Lcd_Init+0x110>
    12c6:	20 e0       	ldi	r18, 0x00	; 0
    12c8:	30 e0       	ldi	r19, 0x00	; 0
    12ca:	40 e2       	ldi	r20, 0x20	; 32
    12cc:	51 e4       	ldi	r21, 0x41	; 65
    12ce:	69 81       	ldd	r22, Y+1	; 0x01
    12d0:	7a 81       	ldd	r23, Y+2	; 0x02
    12d2:	8b 81       	ldd	r24, Y+3	; 0x03
    12d4:	9c 81       	ldd	r25, Y+4	; 0x04
    12d6:	0e 94 98 13 	call	0x2730	; 0x2730 <__mulsf3>
    12da:	dc 01       	movw	r26, r24
    12dc:	cb 01       	movw	r24, r22
    12de:	bc 01       	movw	r22, r24
    12e0:	cd 01       	movw	r24, r26
    12e2:	0e 94 9b 12 	call	0x2536	; 0x2536 <__fixunssfsi>
    12e6:	dc 01       	movw	r26, r24
    12e8:	cb 01       	movw	r24, r22
    12ea:	9a 87       	std	Y+10, r25	; 0x0a
    12ec:	89 87       	std	Y+9, r24	; 0x09
    12ee:	0f c0       	rjmp	.+30     	; 0x130e <H_Lcd_Init+0x106>
    12f0:	80 e9       	ldi	r24, 0x90	; 144
    12f2:	91 e0       	ldi	r25, 0x01	; 1
    12f4:	9c 87       	std	Y+12, r25	; 0x0c
    12f6:	8b 87       	std	Y+11, r24	; 0x0b
    12f8:	8b 85       	ldd	r24, Y+11	; 0x0b
    12fa:	9c 85       	ldd	r25, Y+12	; 0x0c
    12fc:	01 97       	sbiw	r24, 0x01	; 1
    12fe:	f1 f7       	brne	.-4      	; 0x12fc <H_Lcd_Init+0xf4>
    1300:	9c 87       	std	Y+12, r25	; 0x0c
    1302:	8b 87       	std	Y+11, r24	; 0x0b
    1304:	89 85       	ldd	r24, Y+9	; 0x09
    1306:	9a 85       	ldd	r25, Y+10	; 0x0a
    1308:	01 97       	sbiw	r24, 0x01	; 1
    130a:	9a 87       	std	Y+10, r25	; 0x0a
    130c:	89 87       	std	Y+9, r24	; 0x09
    130e:	89 85       	ldd	r24, Y+9	; 0x09
    1310:	9a 85       	ldd	r25, Y+10	; 0x0a
    1312:	89 2b       	or	r24, r25
    1314:	69 f7       	brne	.-38     	; 0x12f0 <H_Lcd_Init+0xe8>
    1316:	14 c0       	rjmp	.+40     	; 0x1340 <H_Lcd_Init+0x138>
    1318:	6d 81       	ldd	r22, Y+5	; 0x05
    131a:	7e 81       	ldd	r23, Y+6	; 0x06
    131c:	8f 81       	ldd	r24, Y+7	; 0x07
    131e:	98 85       	ldd	r25, Y+8	; 0x08
    1320:	0e 94 9b 12 	call	0x2536	; 0x2536 <__fixunssfsi>
    1324:	dc 01       	movw	r26, r24
    1326:	cb 01       	movw	r24, r22
    1328:	9a 87       	std	Y+10, r25	; 0x0a
    132a:	89 87       	std	Y+9, r24	; 0x09
    132c:	89 85       	ldd	r24, Y+9	; 0x09
    132e:	9a 85       	ldd	r25, Y+10	; 0x0a
    1330:	9e 87       	std	Y+14, r25	; 0x0e
    1332:	8d 87       	std	Y+13, r24	; 0x0d
    1334:	8d 85       	ldd	r24, Y+13	; 0x0d
    1336:	9e 85       	ldd	r25, Y+14	; 0x0e
    1338:	01 97       	sbiw	r24, 0x01	; 1
    133a:	f1 f7       	brne	.-4      	; 0x1338 <H_Lcd_Init+0x130>
    133c:	9e 87       	std	Y+14, r25	; 0x0e
    133e:	8d 87       	std	Y+13, r24	; 0x0d
    1340:	83 e3       	ldi	r24, 0x33	; 51
    1342:	0e 94 ce 0b 	call	0x179c	; 0x179c <H_Lcd_WriteCommand>
    1346:	82 e3       	ldi	r24, 0x32	; 50
    1348:	0e 94 ce 0b 	call	0x179c	; 0x179c <H_Lcd_WriteCommand>
    134c:	88 e2       	ldi	r24, 0x28	; 40
    134e:	0e 94 ce 0b 	call	0x179c	; 0x179c <H_Lcd_WriteCommand>
    1352:	8c e0       	ldi	r24, 0x0C	; 12
    1354:	0e 94 ce 0b 	call	0x179c	; 0x179c <H_Lcd_WriteCommand>
    1358:	81 e0       	ldi	r24, 0x01	; 1
    135a:	0e 94 ce 0b 	call	0x179c	; 0x179c <H_Lcd_WriteCommand>
    135e:	82 e0       	ldi	r24, 0x02	; 2
    1360:	0e 94 ce 0b 	call	0x179c	; 0x179c <H_Lcd_WriteCommand>
    1364:	00 00       	nop
    1366:	2e 96       	adiw	r28, 0x0e	; 14
    1368:	0f b6       	in	r0, 0x3f	; 63
    136a:	f8 94       	cli
    136c:	de bf       	out	0x3e, r29	; 62
    136e:	0f be       	out	0x3f, r0	; 63
    1370:	cd bf       	out	0x3d, r28	; 61
    1372:	df 91       	pop	r29
    1374:	cf 91       	pop	r28
    1376:	08 95       	ret

00001378 <H_Lcd_WriteCharacter>:
    1378:	cf 93       	push	r28
    137a:	df 93       	push	r29
    137c:	cd b7       	in	r28, 0x3d	; 61
    137e:	de b7       	in	r29, 0x3e	; 62
    1380:	e9 97       	sbiw	r28, 0x39	; 57
    1382:	0f b6       	in	r0, 0x3f	; 63
    1384:	f8 94       	cli
    1386:	de bf       	out	0x3e, r29	; 62
    1388:	0f be       	out	0x3f, r0	; 63
    138a:	cd bf       	out	0x3d, r28	; 61
    138c:	89 af       	std	Y+57, r24	; 0x39
    138e:	61 e0       	ldi	r22, 0x01	; 1
    1390:	8f e1       	ldi	r24, 0x1F	; 31
    1392:	0e 94 94 0f 	call	0x1f28	; 0x1f28 <M_Dio_PinWrite>
    1396:	8b e3       	ldi	r24, 0x3B	; 59
    1398:	90 e0       	ldi	r25, 0x00	; 0
    139a:	29 ad       	ldd	r18, Y+57	; 0x39
    139c:	42 2f       	mov	r20, r18
    139e:	40 7f       	andi	r20, 0xF0	; 240
    13a0:	2b e3       	ldi	r18, 0x3B	; 59
    13a2:	30 e0       	ldi	r19, 0x00	; 0
    13a4:	f9 01       	movw	r30, r18
    13a6:	20 81       	ld	r18, Z
    13a8:	2f 70       	andi	r18, 0x0F	; 15
    13aa:	24 2b       	or	r18, r20
    13ac:	fc 01       	movw	r30, r24
    13ae:	20 83       	st	Z, r18
    13b0:	61 e0       	ldi	r22, 0x01	; 1
    13b2:	8e e1       	ldi	r24, 0x1E	; 30
    13b4:	0e 94 94 0f 	call	0x1f28	; 0x1f28 <M_Dio_PinWrite>
    13b8:	80 e0       	ldi	r24, 0x00	; 0
    13ba:	90 e0       	ldi	r25, 0x00	; 0
    13bc:	a0 e8       	ldi	r26, 0x80	; 128
    13be:	bf e3       	ldi	r27, 0x3F	; 63
    13c0:	89 83       	std	Y+1, r24	; 0x01
    13c2:	9a 83       	std	Y+2, r25	; 0x02
    13c4:	ab 83       	std	Y+3, r26	; 0x03
    13c6:	bc 83       	std	Y+4, r27	; 0x04
    13c8:	20 e0       	ldi	r18, 0x00	; 0
    13ca:	30 e0       	ldi	r19, 0x00	; 0
    13cc:	4a e7       	ldi	r20, 0x7A	; 122
    13ce:	55 e4       	ldi	r21, 0x45	; 69
    13d0:	69 81       	ldd	r22, Y+1	; 0x01
    13d2:	7a 81       	ldd	r23, Y+2	; 0x02
    13d4:	8b 81       	ldd	r24, Y+3	; 0x03
    13d6:	9c 81       	ldd	r25, Y+4	; 0x04
    13d8:	0e 94 98 13 	call	0x2730	; 0x2730 <__mulsf3>
    13dc:	dc 01       	movw	r26, r24
    13de:	cb 01       	movw	r24, r22
    13e0:	8f a7       	std	Y+47, r24	; 0x2f
    13e2:	98 ab       	std	Y+48, r25	; 0x30
    13e4:	a9 ab       	std	Y+49, r26	; 0x31
    13e6:	ba ab       	std	Y+50, r27	; 0x32
    13e8:	20 e0       	ldi	r18, 0x00	; 0
    13ea:	30 e0       	ldi	r19, 0x00	; 0
    13ec:	40 e8       	ldi	r20, 0x80	; 128
    13ee:	5f e3       	ldi	r21, 0x3F	; 63
    13f0:	6f a5       	ldd	r22, Y+47	; 0x2f
    13f2:	78 a9       	ldd	r23, Y+48	; 0x30
    13f4:	89 a9       	ldd	r24, Y+49	; 0x31
    13f6:	9a a9       	ldd	r25, Y+50	; 0x32
    13f8:	0e 94 24 12 	call	0x2448	; 0x2448 <__cmpsf2>
    13fc:	88 23       	and	r24, r24
    13fe:	2c f4       	brge	.+10     	; 0x140a <H_Lcd_WriteCharacter+0x92>
    1400:	81 e0       	ldi	r24, 0x01	; 1
    1402:	90 e0       	ldi	r25, 0x00	; 0
    1404:	9c ab       	std	Y+52, r25	; 0x34
    1406:	8b ab       	std	Y+51, r24	; 0x33
    1408:	3f c0       	rjmp	.+126    	; 0x1488 <H_Lcd_WriteCharacter+0x110>
    140a:	20 e0       	ldi	r18, 0x00	; 0
    140c:	3f ef       	ldi	r19, 0xFF	; 255
    140e:	4f e7       	ldi	r20, 0x7F	; 127
    1410:	57 e4       	ldi	r21, 0x47	; 71
    1412:	6f a5       	ldd	r22, Y+47	; 0x2f
    1414:	78 a9       	ldd	r23, Y+48	; 0x30
    1416:	89 a9       	ldd	r24, Y+49	; 0x31
    1418:	9a a9       	ldd	r25, Y+50	; 0x32
    141a:	0e 94 93 13 	call	0x2726	; 0x2726 <__gesf2>
    141e:	18 16       	cp	r1, r24
    1420:	4c f5       	brge	.+82     	; 0x1474 <H_Lcd_WriteCharacter+0xfc>
    1422:	20 e0       	ldi	r18, 0x00	; 0
    1424:	30 e0       	ldi	r19, 0x00	; 0
    1426:	40 e2       	ldi	r20, 0x20	; 32
    1428:	51 e4       	ldi	r21, 0x41	; 65
    142a:	69 81       	ldd	r22, Y+1	; 0x01
    142c:	7a 81       	ldd	r23, Y+2	; 0x02
    142e:	8b 81       	ldd	r24, Y+3	; 0x03
    1430:	9c 81       	ldd	r25, Y+4	; 0x04
    1432:	0e 94 98 13 	call	0x2730	; 0x2730 <__mulsf3>
    1436:	dc 01       	movw	r26, r24
    1438:	cb 01       	movw	r24, r22
    143a:	bc 01       	movw	r22, r24
    143c:	cd 01       	movw	r24, r26
    143e:	0e 94 9b 12 	call	0x2536	; 0x2536 <__fixunssfsi>
    1442:	dc 01       	movw	r26, r24
    1444:	cb 01       	movw	r24, r22
    1446:	9c ab       	std	Y+52, r25	; 0x34
    1448:	8b ab       	std	Y+51, r24	; 0x33
    144a:	0f c0       	rjmp	.+30     	; 0x146a <H_Lcd_WriteCharacter+0xf2>
    144c:	80 e9       	ldi	r24, 0x90	; 144
    144e:	91 e0       	ldi	r25, 0x01	; 1
    1450:	9e ab       	std	Y+54, r25	; 0x36
    1452:	8d ab       	std	Y+53, r24	; 0x35
    1454:	8d a9       	ldd	r24, Y+53	; 0x35
    1456:	9e a9       	ldd	r25, Y+54	; 0x36
    1458:	01 97       	sbiw	r24, 0x01	; 1
    145a:	f1 f7       	brne	.-4      	; 0x1458 <H_Lcd_WriteCharacter+0xe0>
    145c:	9e ab       	std	Y+54, r25	; 0x36
    145e:	8d ab       	std	Y+53, r24	; 0x35
    1460:	8b a9       	ldd	r24, Y+51	; 0x33
    1462:	9c a9       	ldd	r25, Y+52	; 0x34
    1464:	01 97       	sbiw	r24, 0x01	; 1
    1466:	9c ab       	std	Y+52, r25	; 0x34
    1468:	8b ab       	std	Y+51, r24	; 0x33
    146a:	8b a9       	ldd	r24, Y+51	; 0x33
    146c:	9c a9       	ldd	r25, Y+52	; 0x34
    146e:	89 2b       	or	r24, r25
    1470:	69 f7       	brne	.-38     	; 0x144c <H_Lcd_WriteCharacter+0xd4>
    1472:	14 c0       	rjmp	.+40     	; 0x149c <H_Lcd_WriteCharacter+0x124>
    1474:	6f a5       	ldd	r22, Y+47	; 0x2f
    1476:	78 a9       	ldd	r23, Y+48	; 0x30
    1478:	89 a9       	ldd	r24, Y+49	; 0x31
    147a:	9a a9       	ldd	r25, Y+50	; 0x32
    147c:	0e 94 9b 12 	call	0x2536	; 0x2536 <__fixunssfsi>
    1480:	dc 01       	movw	r26, r24
    1482:	cb 01       	movw	r24, r22
    1484:	9c ab       	std	Y+52, r25	; 0x34
    1486:	8b ab       	std	Y+51, r24	; 0x33
    1488:	8b a9       	ldd	r24, Y+51	; 0x33
    148a:	9c a9       	ldd	r25, Y+52	; 0x34
    148c:	98 af       	std	Y+56, r25	; 0x38
    148e:	8f ab       	std	Y+55, r24	; 0x37
    1490:	8f a9       	ldd	r24, Y+55	; 0x37
    1492:	98 ad       	ldd	r25, Y+56	; 0x38
    1494:	01 97       	sbiw	r24, 0x01	; 1
    1496:	f1 f7       	brne	.-4      	; 0x1494 <H_Lcd_WriteCharacter+0x11c>
    1498:	98 af       	std	Y+56, r25	; 0x38
    149a:	8f ab       	std	Y+55, r24	; 0x37
    149c:	62 e0       	ldi	r22, 0x02	; 2
    149e:	8e e1       	ldi	r24, 0x1E	; 30
    14a0:	0e 94 94 0f 	call	0x1f28	; 0x1f28 <M_Dio_PinWrite>
    14a4:	80 e0       	ldi	r24, 0x00	; 0
    14a6:	90 e0       	ldi	r25, 0x00	; 0
    14a8:	a0 e8       	ldi	r26, 0x80	; 128
    14aa:	bf e3       	ldi	r27, 0x3F	; 63
    14ac:	8d 83       	std	Y+5, r24	; 0x05
    14ae:	9e 83       	std	Y+6, r25	; 0x06
    14b0:	af 83       	std	Y+7, r26	; 0x07
    14b2:	b8 87       	std	Y+8, r27	; 0x08
    14b4:	20 e0       	ldi	r18, 0x00	; 0
    14b6:	30 e0       	ldi	r19, 0x00	; 0
    14b8:	4a e7       	ldi	r20, 0x7A	; 122
    14ba:	55 e4       	ldi	r21, 0x45	; 69
    14bc:	6d 81       	ldd	r22, Y+5	; 0x05
    14be:	7e 81       	ldd	r23, Y+6	; 0x06
    14c0:	8f 81       	ldd	r24, Y+7	; 0x07
    14c2:	98 85       	ldd	r25, Y+8	; 0x08
    14c4:	0e 94 98 13 	call	0x2730	; 0x2730 <__mulsf3>
    14c8:	dc 01       	movw	r26, r24
    14ca:	cb 01       	movw	r24, r22
    14cc:	8d a3       	std	Y+37, r24	; 0x25
    14ce:	9e a3       	std	Y+38, r25	; 0x26
    14d0:	af a3       	std	Y+39, r26	; 0x27
    14d2:	b8 a7       	std	Y+40, r27	; 0x28
    14d4:	20 e0       	ldi	r18, 0x00	; 0
    14d6:	30 e0       	ldi	r19, 0x00	; 0
    14d8:	40 e8       	ldi	r20, 0x80	; 128
    14da:	5f e3       	ldi	r21, 0x3F	; 63
    14dc:	6d a1       	ldd	r22, Y+37	; 0x25
    14de:	7e a1       	ldd	r23, Y+38	; 0x26
    14e0:	8f a1       	ldd	r24, Y+39	; 0x27
    14e2:	98 a5       	ldd	r25, Y+40	; 0x28
    14e4:	0e 94 24 12 	call	0x2448	; 0x2448 <__cmpsf2>
    14e8:	88 23       	and	r24, r24
    14ea:	2c f4       	brge	.+10     	; 0x14f6 <H_Lcd_WriteCharacter+0x17e>
    14ec:	81 e0       	ldi	r24, 0x01	; 1
    14ee:	90 e0       	ldi	r25, 0x00	; 0
    14f0:	9a a7       	std	Y+42, r25	; 0x2a
    14f2:	89 a7       	std	Y+41, r24	; 0x29
    14f4:	3f c0       	rjmp	.+126    	; 0x1574 <H_Lcd_WriteCharacter+0x1fc>
    14f6:	20 e0       	ldi	r18, 0x00	; 0
    14f8:	3f ef       	ldi	r19, 0xFF	; 255
    14fa:	4f e7       	ldi	r20, 0x7F	; 127
    14fc:	57 e4       	ldi	r21, 0x47	; 71
    14fe:	6d a1       	ldd	r22, Y+37	; 0x25
    1500:	7e a1       	ldd	r23, Y+38	; 0x26
    1502:	8f a1       	ldd	r24, Y+39	; 0x27
    1504:	98 a5       	ldd	r25, Y+40	; 0x28
    1506:	0e 94 93 13 	call	0x2726	; 0x2726 <__gesf2>
    150a:	18 16       	cp	r1, r24
    150c:	4c f5       	brge	.+82     	; 0x1560 <H_Lcd_WriteCharacter+0x1e8>
    150e:	20 e0       	ldi	r18, 0x00	; 0
    1510:	30 e0       	ldi	r19, 0x00	; 0
    1512:	40 e2       	ldi	r20, 0x20	; 32
    1514:	51 e4       	ldi	r21, 0x41	; 65
    1516:	6d 81       	ldd	r22, Y+5	; 0x05
    1518:	7e 81       	ldd	r23, Y+6	; 0x06
    151a:	8f 81       	ldd	r24, Y+7	; 0x07
    151c:	98 85       	ldd	r25, Y+8	; 0x08
    151e:	0e 94 98 13 	call	0x2730	; 0x2730 <__mulsf3>
    1522:	dc 01       	movw	r26, r24
    1524:	cb 01       	movw	r24, r22
    1526:	bc 01       	movw	r22, r24
    1528:	cd 01       	movw	r24, r26
    152a:	0e 94 9b 12 	call	0x2536	; 0x2536 <__fixunssfsi>
    152e:	dc 01       	movw	r26, r24
    1530:	cb 01       	movw	r24, r22
    1532:	9a a7       	std	Y+42, r25	; 0x2a
    1534:	89 a7       	std	Y+41, r24	; 0x29
    1536:	0f c0       	rjmp	.+30     	; 0x1556 <H_Lcd_WriteCharacter+0x1de>
    1538:	80 e9       	ldi	r24, 0x90	; 144
    153a:	91 e0       	ldi	r25, 0x01	; 1
    153c:	9c a7       	std	Y+44, r25	; 0x2c
    153e:	8b a7       	std	Y+43, r24	; 0x2b
    1540:	8b a5       	ldd	r24, Y+43	; 0x2b
    1542:	9c a5       	ldd	r25, Y+44	; 0x2c
    1544:	01 97       	sbiw	r24, 0x01	; 1
    1546:	f1 f7       	brne	.-4      	; 0x1544 <H_Lcd_WriteCharacter+0x1cc>
    1548:	9c a7       	std	Y+44, r25	; 0x2c
    154a:	8b a7       	std	Y+43, r24	; 0x2b
    154c:	89 a5       	ldd	r24, Y+41	; 0x29
    154e:	9a a5       	ldd	r25, Y+42	; 0x2a
    1550:	01 97       	sbiw	r24, 0x01	; 1
    1552:	9a a7       	std	Y+42, r25	; 0x2a
    1554:	89 a7       	std	Y+41, r24	; 0x29
    1556:	89 a5       	ldd	r24, Y+41	; 0x29
    1558:	9a a5       	ldd	r25, Y+42	; 0x2a
    155a:	89 2b       	or	r24, r25
    155c:	69 f7       	brne	.-38     	; 0x1538 <H_Lcd_WriteCharacter+0x1c0>
    155e:	14 c0       	rjmp	.+40     	; 0x1588 <H_Lcd_WriteCharacter+0x210>
    1560:	6d a1       	ldd	r22, Y+37	; 0x25
    1562:	7e a1       	ldd	r23, Y+38	; 0x26
    1564:	8f a1       	ldd	r24, Y+39	; 0x27
    1566:	98 a5       	ldd	r25, Y+40	; 0x28
    1568:	0e 94 9b 12 	call	0x2536	; 0x2536 <__fixunssfsi>
    156c:	dc 01       	movw	r26, r24
    156e:	cb 01       	movw	r24, r22
    1570:	9a a7       	std	Y+42, r25	; 0x2a
    1572:	89 a7       	std	Y+41, r24	; 0x29
    1574:	89 a5       	ldd	r24, Y+41	; 0x29
    1576:	9a a5       	ldd	r25, Y+42	; 0x2a
    1578:	9e a7       	std	Y+46, r25	; 0x2e
    157a:	8d a7       	std	Y+45, r24	; 0x2d
    157c:	8d a5       	ldd	r24, Y+45	; 0x2d
    157e:	9e a5       	ldd	r25, Y+46	; 0x2e
    1580:	01 97       	sbiw	r24, 0x01	; 1
    1582:	f1 f7       	brne	.-4      	; 0x1580 <H_Lcd_WriteCharacter+0x208>
    1584:	9e a7       	std	Y+46, r25	; 0x2e
    1586:	8d a7       	std	Y+45, r24	; 0x2d
    1588:	8b e3       	ldi	r24, 0x3B	; 59
    158a:	90 e0       	ldi	r25, 0x00	; 0
    158c:	29 ad       	ldd	r18, Y+57	; 0x39
    158e:	22 2f       	mov	r18, r18
    1590:	30 e0       	ldi	r19, 0x00	; 0
    1592:	22 95       	swap	r18
    1594:	32 95       	swap	r19
    1596:	30 7f       	andi	r19, 0xF0	; 240
    1598:	32 27       	eor	r19, r18
    159a:	20 7f       	andi	r18, 0xF0	; 240
    159c:	32 27       	eor	r19, r18
    159e:	42 2f       	mov	r20, r18
    15a0:	2b e3       	ldi	r18, 0x3B	; 59
    15a2:	30 e0       	ldi	r19, 0x00	; 0
    15a4:	f9 01       	movw	r30, r18
    15a6:	20 81       	ld	r18, Z
    15a8:	2f 70       	andi	r18, 0x0F	; 15
    15aa:	24 2b       	or	r18, r20
    15ac:	fc 01       	movw	r30, r24
    15ae:	20 83       	st	Z, r18
    15b0:	61 e0       	ldi	r22, 0x01	; 1
    15b2:	8e e1       	ldi	r24, 0x1E	; 30
    15b4:	0e 94 94 0f 	call	0x1f28	; 0x1f28 <M_Dio_PinWrite>
    15b8:	80 e0       	ldi	r24, 0x00	; 0
    15ba:	90 e0       	ldi	r25, 0x00	; 0
    15bc:	a0 e8       	ldi	r26, 0x80	; 128
    15be:	bf e3       	ldi	r27, 0x3F	; 63
    15c0:	89 87       	std	Y+9, r24	; 0x09
    15c2:	9a 87       	std	Y+10, r25	; 0x0a
    15c4:	ab 87       	std	Y+11, r26	; 0x0b
    15c6:	bc 87       	std	Y+12, r27	; 0x0c
    15c8:	20 e0       	ldi	r18, 0x00	; 0
    15ca:	30 e0       	ldi	r19, 0x00	; 0
    15cc:	4a e7       	ldi	r20, 0x7A	; 122
    15ce:	55 e4       	ldi	r21, 0x45	; 69
    15d0:	69 85       	ldd	r22, Y+9	; 0x09
    15d2:	7a 85       	ldd	r23, Y+10	; 0x0a
    15d4:	8b 85       	ldd	r24, Y+11	; 0x0b
    15d6:	9c 85       	ldd	r25, Y+12	; 0x0c
    15d8:	0e 94 98 13 	call	0x2730	; 0x2730 <__mulsf3>
    15dc:	dc 01       	movw	r26, r24
    15de:	cb 01       	movw	r24, r22
    15e0:	8b 8f       	std	Y+27, r24	; 0x1b
    15e2:	9c 8f       	std	Y+28, r25	; 0x1c
    15e4:	ad 8f       	std	Y+29, r26	; 0x1d
    15e6:	be 8f       	std	Y+30, r27	; 0x1e
    15e8:	20 e0       	ldi	r18, 0x00	; 0
    15ea:	30 e0       	ldi	r19, 0x00	; 0
    15ec:	40 e8       	ldi	r20, 0x80	; 128
    15ee:	5f e3       	ldi	r21, 0x3F	; 63
    15f0:	6b 8d       	ldd	r22, Y+27	; 0x1b
    15f2:	7c 8d       	ldd	r23, Y+28	; 0x1c
    15f4:	8d 8d       	ldd	r24, Y+29	; 0x1d
    15f6:	9e 8d       	ldd	r25, Y+30	; 0x1e
    15f8:	0e 94 24 12 	call	0x2448	; 0x2448 <__cmpsf2>
    15fc:	88 23       	and	r24, r24
    15fe:	2c f4       	brge	.+10     	; 0x160a <H_Lcd_WriteCharacter+0x292>
    1600:	81 e0       	ldi	r24, 0x01	; 1
    1602:	90 e0       	ldi	r25, 0x00	; 0
    1604:	98 a3       	std	Y+32, r25	; 0x20
    1606:	8f 8f       	std	Y+31, r24	; 0x1f
    1608:	3f c0       	rjmp	.+126    	; 0x1688 <H_Lcd_WriteCharacter+0x310>
    160a:	20 e0       	ldi	r18, 0x00	; 0
    160c:	3f ef       	ldi	r19, 0xFF	; 255
    160e:	4f e7       	ldi	r20, 0x7F	; 127
    1610:	57 e4       	ldi	r21, 0x47	; 71
    1612:	6b 8d       	ldd	r22, Y+27	; 0x1b
    1614:	7c 8d       	ldd	r23, Y+28	; 0x1c
    1616:	8d 8d       	ldd	r24, Y+29	; 0x1d
    1618:	9e 8d       	ldd	r25, Y+30	; 0x1e
    161a:	0e 94 93 13 	call	0x2726	; 0x2726 <__gesf2>
    161e:	18 16       	cp	r1, r24
    1620:	4c f5       	brge	.+82     	; 0x1674 <H_Lcd_WriteCharacter+0x2fc>
    1622:	20 e0       	ldi	r18, 0x00	; 0
    1624:	30 e0       	ldi	r19, 0x00	; 0
    1626:	40 e2       	ldi	r20, 0x20	; 32
    1628:	51 e4       	ldi	r21, 0x41	; 65
    162a:	69 85       	ldd	r22, Y+9	; 0x09
    162c:	7a 85       	ldd	r23, Y+10	; 0x0a
    162e:	8b 85       	ldd	r24, Y+11	; 0x0b
    1630:	9c 85       	ldd	r25, Y+12	; 0x0c
    1632:	0e 94 98 13 	call	0x2730	; 0x2730 <__mulsf3>
    1636:	dc 01       	movw	r26, r24
    1638:	cb 01       	movw	r24, r22
    163a:	bc 01       	movw	r22, r24
    163c:	cd 01       	movw	r24, r26
    163e:	0e 94 9b 12 	call	0x2536	; 0x2536 <__fixunssfsi>
    1642:	dc 01       	movw	r26, r24
    1644:	cb 01       	movw	r24, r22
    1646:	98 a3       	std	Y+32, r25	; 0x20
    1648:	8f 8f       	std	Y+31, r24	; 0x1f
    164a:	0f c0       	rjmp	.+30     	; 0x166a <H_Lcd_WriteCharacter+0x2f2>
    164c:	80 e9       	ldi	r24, 0x90	; 144
    164e:	91 e0       	ldi	r25, 0x01	; 1
    1650:	9a a3       	std	Y+34, r25	; 0x22
    1652:	89 a3       	std	Y+33, r24	; 0x21
    1654:	89 a1       	ldd	r24, Y+33	; 0x21
    1656:	9a a1       	ldd	r25, Y+34	; 0x22
    1658:	01 97       	sbiw	r24, 0x01	; 1
    165a:	f1 f7       	brne	.-4      	; 0x1658 <H_Lcd_WriteCharacter+0x2e0>
    165c:	9a a3       	std	Y+34, r25	; 0x22
    165e:	89 a3       	std	Y+33, r24	; 0x21
    1660:	8f 8d       	ldd	r24, Y+31	; 0x1f
    1662:	98 a1       	ldd	r25, Y+32	; 0x20
    1664:	01 97       	sbiw	r24, 0x01	; 1
    1666:	98 a3       	std	Y+32, r25	; 0x20
    1668:	8f 8f       	std	Y+31, r24	; 0x1f
    166a:	8f 8d       	ldd	r24, Y+31	; 0x1f
    166c:	98 a1       	ldd	r25, Y+32	; 0x20
    166e:	89 2b       	or	r24, r25
    1670:	69 f7       	brne	.-38     	; 0x164c <H_Lcd_WriteCharacter+0x2d4>
    1672:	14 c0       	rjmp	.+40     	; 0x169c <H_Lcd_WriteCharacter+0x324>
    1674:	6b 8d       	ldd	r22, Y+27	; 0x1b
    1676:	7c 8d       	ldd	r23, Y+28	; 0x1c
    1678:	8d 8d       	ldd	r24, Y+29	; 0x1d
    167a:	9e 8d       	ldd	r25, Y+30	; 0x1e
    167c:	0e 94 9b 12 	call	0x2536	; 0x2536 <__fixunssfsi>
    1680:	dc 01       	movw	r26, r24
    1682:	cb 01       	movw	r24, r22
    1684:	98 a3       	std	Y+32, r25	; 0x20
    1686:	8f 8f       	std	Y+31, r24	; 0x1f
    1688:	8f 8d       	ldd	r24, Y+31	; 0x1f
    168a:	98 a1       	ldd	r25, Y+32	; 0x20
    168c:	9c a3       	std	Y+36, r25	; 0x24
    168e:	8b a3       	std	Y+35, r24	; 0x23
    1690:	8b a1       	ldd	r24, Y+35	; 0x23
    1692:	9c a1       	ldd	r25, Y+36	; 0x24
    1694:	01 97       	sbiw	r24, 0x01	; 1
    1696:	f1 f7       	brne	.-4      	; 0x1694 <H_Lcd_WriteCharacter+0x31c>
    1698:	9c a3       	std	Y+36, r25	; 0x24
    169a:	8b a3       	std	Y+35, r24	; 0x23
    169c:	62 e0       	ldi	r22, 0x02	; 2
    169e:	8e e1       	ldi	r24, 0x1E	; 30
    16a0:	0e 94 94 0f 	call	0x1f28	; 0x1f28 <M_Dio_PinWrite>
    16a4:	80 e0       	ldi	r24, 0x00	; 0
    16a6:	90 e0       	ldi	r25, 0x00	; 0
    16a8:	a0 ea       	ldi	r26, 0xA0	; 160
    16aa:	b0 e4       	ldi	r27, 0x40	; 64
    16ac:	8d 87       	std	Y+13, r24	; 0x0d
    16ae:	9e 87       	std	Y+14, r25	; 0x0e
    16b0:	af 87       	std	Y+15, r26	; 0x0f
    16b2:	b8 8b       	std	Y+16, r27	; 0x10
    16b4:	20 e0       	ldi	r18, 0x00	; 0
    16b6:	30 e0       	ldi	r19, 0x00	; 0
    16b8:	4a e7       	ldi	r20, 0x7A	; 122
    16ba:	55 e4       	ldi	r21, 0x45	; 69
    16bc:	6d 85       	ldd	r22, Y+13	; 0x0d
    16be:	7e 85       	ldd	r23, Y+14	; 0x0e
    16c0:	8f 85       	ldd	r24, Y+15	; 0x0f
    16c2:	98 89       	ldd	r25, Y+16	; 0x10
    16c4:	0e 94 98 13 	call	0x2730	; 0x2730 <__mulsf3>
    16c8:	dc 01       	movw	r26, r24
    16ca:	cb 01       	movw	r24, r22
    16cc:	89 8b       	std	Y+17, r24	; 0x11
    16ce:	9a 8b       	std	Y+18, r25	; 0x12
    16d0:	ab 8b       	std	Y+19, r26	; 0x13
    16d2:	bc 8b       	std	Y+20, r27	; 0x14
    16d4:	20 e0       	ldi	r18, 0x00	; 0
    16d6:	30 e0       	ldi	r19, 0x00	; 0
    16d8:	40 e8       	ldi	r20, 0x80	; 128
    16da:	5f e3       	ldi	r21, 0x3F	; 63
    16dc:	69 89       	ldd	r22, Y+17	; 0x11
    16de:	7a 89       	ldd	r23, Y+18	; 0x12
    16e0:	8b 89       	ldd	r24, Y+19	; 0x13
    16e2:	9c 89       	ldd	r25, Y+20	; 0x14
    16e4:	0e 94 24 12 	call	0x2448	; 0x2448 <__cmpsf2>
    16e8:	88 23       	and	r24, r24
    16ea:	2c f4       	brge	.+10     	; 0x16f6 <H_Lcd_WriteCharacter+0x37e>
    16ec:	81 e0       	ldi	r24, 0x01	; 1
    16ee:	90 e0       	ldi	r25, 0x00	; 0
    16f0:	9e 8b       	std	Y+22, r25	; 0x16
    16f2:	8d 8b       	std	Y+21, r24	; 0x15
    16f4:	3f c0       	rjmp	.+126    	; 0x1774 <H_Lcd_WriteCharacter+0x3fc>
    16f6:	20 e0       	ldi	r18, 0x00	; 0
    16f8:	3f ef       	ldi	r19, 0xFF	; 255
    16fa:	4f e7       	ldi	r20, 0x7F	; 127
    16fc:	57 e4       	ldi	r21, 0x47	; 71
    16fe:	69 89       	ldd	r22, Y+17	; 0x11
    1700:	7a 89       	ldd	r23, Y+18	; 0x12
    1702:	8b 89       	ldd	r24, Y+19	; 0x13
    1704:	9c 89       	ldd	r25, Y+20	; 0x14
    1706:	0e 94 93 13 	call	0x2726	; 0x2726 <__gesf2>
    170a:	18 16       	cp	r1, r24
    170c:	4c f5       	brge	.+82     	; 0x1760 <H_Lcd_WriteCharacter+0x3e8>
    170e:	20 e0       	ldi	r18, 0x00	; 0
    1710:	30 e0       	ldi	r19, 0x00	; 0
    1712:	40 e2       	ldi	r20, 0x20	; 32
    1714:	51 e4       	ldi	r21, 0x41	; 65
    1716:	6d 85       	ldd	r22, Y+13	; 0x0d
    1718:	7e 85       	ldd	r23, Y+14	; 0x0e
    171a:	8f 85       	ldd	r24, Y+15	; 0x0f
    171c:	98 89       	ldd	r25, Y+16	; 0x10
    171e:	0e 94 98 13 	call	0x2730	; 0x2730 <__mulsf3>
    1722:	dc 01       	movw	r26, r24
    1724:	cb 01       	movw	r24, r22
    1726:	bc 01       	movw	r22, r24
    1728:	cd 01       	movw	r24, r26
    172a:	0e 94 9b 12 	call	0x2536	; 0x2536 <__fixunssfsi>
    172e:	dc 01       	movw	r26, r24
    1730:	cb 01       	movw	r24, r22
    1732:	9e 8b       	std	Y+22, r25	; 0x16
    1734:	8d 8b       	std	Y+21, r24	; 0x15
    1736:	0f c0       	rjmp	.+30     	; 0x1756 <H_Lcd_WriteCharacter+0x3de>
    1738:	80 e9       	ldi	r24, 0x90	; 144
    173a:	91 e0       	ldi	r25, 0x01	; 1
    173c:	98 8f       	std	Y+24, r25	; 0x18
    173e:	8f 8b       	std	Y+23, r24	; 0x17
    1740:	8f 89       	ldd	r24, Y+23	; 0x17
    1742:	98 8d       	ldd	r25, Y+24	; 0x18
    1744:	01 97       	sbiw	r24, 0x01	; 1
    1746:	f1 f7       	brne	.-4      	; 0x1744 <H_Lcd_WriteCharacter+0x3cc>
    1748:	98 8f       	std	Y+24, r25	; 0x18
    174a:	8f 8b       	std	Y+23, r24	; 0x17
    174c:	8d 89       	ldd	r24, Y+21	; 0x15
    174e:	9e 89       	ldd	r25, Y+22	; 0x16
    1750:	01 97       	sbiw	r24, 0x01	; 1
    1752:	9e 8b       	std	Y+22, r25	; 0x16
    1754:	8d 8b       	std	Y+21, r24	; 0x15
    1756:	8d 89       	ldd	r24, Y+21	; 0x15
    1758:	9e 89       	ldd	r25, Y+22	; 0x16
    175a:	89 2b       	or	r24, r25
    175c:	69 f7       	brne	.-38     	; 0x1738 <H_Lcd_WriteCharacter+0x3c0>
    175e:	14 c0       	rjmp	.+40     	; 0x1788 <H_Lcd_WriteCharacter+0x410>
    1760:	69 89       	ldd	r22, Y+17	; 0x11
    1762:	7a 89       	ldd	r23, Y+18	; 0x12
    1764:	8b 89       	ldd	r24, Y+19	; 0x13
    1766:	9c 89       	ldd	r25, Y+20	; 0x14
    1768:	0e 94 9b 12 	call	0x2536	; 0x2536 <__fixunssfsi>
    176c:	dc 01       	movw	r26, r24
    176e:	cb 01       	movw	r24, r22
    1770:	9e 8b       	std	Y+22, r25	; 0x16
    1772:	8d 8b       	std	Y+21, r24	; 0x15
    1774:	8d 89       	ldd	r24, Y+21	; 0x15
    1776:	9e 89       	ldd	r25, Y+22	; 0x16
    1778:	9a 8f       	std	Y+26, r25	; 0x1a
    177a:	89 8f       	std	Y+25, r24	; 0x19
    177c:	89 8d       	ldd	r24, Y+25	; 0x19
    177e:	9a 8d       	ldd	r25, Y+26	; 0x1a
    1780:	01 97       	sbiw	r24, 0x01	; 1
    1782:	f1 f7       	brne	.-4      	; 0x1780 <H_Lcd_WriteCharacter+0x408>
    1784:	9a 8f       	std	Y+26, r25	; 0x1a
    1786:	89 8f       	std	Y+25, r24	; 0x19
    1788:	00 00       	nop
    178a:	e9 96       	adiw	r28, 0x39	; 57
    178c:	0f b6       	in	r0, 0x3f	; 63
    178e:	f8 94       	cli
    1790:	de bf       	out	0x3e, r29	; 62
    1792:	0f be       	out	0x3f, r0	; 63
    1794:	cd bf       	out	0x3d, r28	; 61
    1796:	df 91       	pop	r29
    1798:	cf 91       	pop	r28
    179a:	08 95       	ret

0000179c <H_Lcd_WriteCommand>:
    179c:	cf 93       	push	r28
    179e:	df 93       	push	r29
    17a0:	cd b7       	in	r28, 0x3d	; 61
    17a2:	de b7       	in	r29, 0x3e	; 62
    17a4:	e9 97       	sbiw	r28, 0x39	; 57
    17a6:	0f b6       	in	r0, 0x3f	; 63
    17a8:	f8 94       	cli
    17aa:	de bf       	out	0x3e, r29	; 62
    17ac:	0f be       	out	0x3f, r0	; 63
    17ae:	cd bf       	out	0x3d, r28	; 61
    17b0:	89 af       	std	Y+57, r24	; 0x39
    17b2:	62 e0       	ldi	r22, 0x02	; 2
    17b4:	8f e1       	ldi	r24, 0x1F	; 31
    17b6:	0e 94 94 0f 	call	0x1f28	; 0x1f28 <M_Dio_PinWrite>
    17ba:	8b e3       	ldi	r24, 0x3B	; 59
    17bc:	90 e0       	ldi	r25, 0x00	; 0
    17be:	29 ad       	ldd	r18, Y+57	; 0x39
    17c0:	42 2f       	mov	r20, r18
    17c2:	40 7f       	andi	r20, 0xF0	; 240
    17c4:	2b e3       	ldi	r18, 0x3B	; 59
    17c6:	30 e0       	ldi	r19, 0x00	; 0
    17c8:	f9 01       	movw	r30, r18
    17ca:	20 81       	ld	r18, Z
    17cc:	2f 70       	andi	r18, 0x0F	; 15
    17ce:	24 2b       	or	r18, r20
    17d0:	fc 01       	movw	r30, r24
    17d2:	20 83       	st	Z, r18
    17d4:	61 e0       	ldi	r22, 0x01	; 1
    17d6:	8e e1       	ldi	r24, 0x1E	; 30
    17d8:	0e 94 94 0f 	call	0x1f28	; 0x1f28 <M_Dio_PinWrite>
    17dc:	80 e0       	ldi	r24, 0x00	; 0
    17de:	90 e0       	ldi	r25, 0x00	; 0
    17e0:	a0 e8       	ldi	r26, 0x80	; 128
    17e2:	bf e3       	ldi	r27, 0x3F	; 63
    17e4:	89 83       	std	Y+1, r24	; 0x01
    17e6:	9a 83       	std	Y+2, r25	; 0x02
    17e8:	ab 83       	std	Y+3, r26	; 0x03
    17ea:	bc 83       	std	Y+4, r27	; 0x04
    17ec:	20 e0       	ldi	r18, 0x00	; 0
    17ee:	30 e0       	ldi	r19, 0x00	; 0
    17f0:	4a e7       	ldi	r20, 0x7A	; 122
    17f2:	55 e4       	ldi	r21, 0x45	; 69
    17f4:	69 81       	ldd	r22, Y+1	; 0x01
    17f6:	7a 81       	ldd	r23, Y+2	; 0x02
    17f8:	8b 81       	ldd	r24, Y+3	; 0x03
    17fa:	9c 81       	ldd	r25, Y+4	; 0x04
    17fc:	0e 94 98 13 	call	0x2730	; 0x2730 <__mulsf3>
    1800:	dc 01       	movw	r26, r24
    1802:	cb 01       	movw	r24, r22
    1804:	8f a7       	std	Y+47, r24	; 0x2f
    1806:	98 ab       	std	Y+48, r25	; 0x30
    1808:	a9 ab       	std	Y+49, r26	; 0x31
    180a:	ba ab       	std	Y+50, r27	; 0x32
    180c:	20 e0       	ldi	r18, 0x00	; 0
    180e:	30 e0       	ldi	r19, 0x00	; 0
    1810:	40 e8       	ldi	r20, 0x80	; 128
    1812:	5f e3       	ldi	r21, 0x3F	; 63
    1814:	6f a5       	ldd	r22, Y+47	; 0x2f
    1816:	78 a9       	ldd	r23, Y+48	; 0x30
    1818:	89 a9       	ldd	r24, Y+49	; 0x31
    181a:	9a a9       	ldd	r25, Y+50	; 0x32
    181c:	0e 94 24 12 	call	0x2448	; 0x2448 <__cmpsf2>
    1820:	88 23       	and	r24, r24
    1822:	2c f4       	brge	.+10     	; 0x182e <H_Lcd_WriteCommand+0x92>
    1824:	81 e0       	ldi	r24, 0x01	; 1
    1826:	90 e0       	ldi	r25, 0x00	; 0
    1828:	9c ab       	std	Y+52, r25	; 0x34
    182a:	8b ab       	std	Y+51, r24	; 0x33
    182c:	3f c0       	rjmp	.+126    	; 0x18ac <H_Lcd_WriteCommand+0x110>
    182e:	20 e0       	ldi	r18, 0x00	; 0
    1830:	3f ef       	ldi	r19, 0xFF	; 255
    1832:	4f e7       	ldi	r20, 0x7F	; 127
    1834:	57 e4       	ldi	r21, 0x47	; 71
    1836:	6f a5       	ldd	r22, Y+47	; 0x2f
    1838:	78 a9       	ldd	r23, Y+48	; 0x30
    183a:	89 a9       	ldd	r24, Y+49	; 0x31
    183c:	9a a9       	ldd	r25, Y+50	; 0x32
    183e:	0e 94 93 13 	call	0x2726	; 0x2726 <__gesf2>
    1842:	18 16       	cp	r1, r24
    1844:	4c f5       	brge	.+82     	; 0x1898 <H_Lcd_WriteCommand+0xfc>
    1846:	20 e0       	ldi	r18, 0x00	; 0
    1848:	30 e0       	ldi	r19, 0x00	; 0
    184a:	40 e2       	ldi	r20, 0x20	; 32
    184c:	51 e4       	ldi	r21, 0x41	; 65
    184e:	69 81       	ldd	r22, Y+1	; 0x01
    1850:	7a 81       	ldd	r23, Y+2	; 0x02
    1852:	8b 81       	ldd	r24, Y+3	; 0x03
    1854:	9c 81       	ldd	r25, Y+4	; 0x04
    1856:	0e 94 98 13 	call	0x2730	; 0x2730 <__mulsf3>
    185a:	dc 01       	movw	r26, r24
    185c:	cb 01       	movw	r24, r22
    185e:	bc 01       	movw	r22, r24
    1860:	cd 01       	movw	r24, r26
    1862:	0e 94 9b 12 	call	0x2536	; 0x2536 <__fixunssfsi>
    1866:	dc 01       	movw	r26, r24
    1868:	cb 01       	movw	r24, r22
    186a:	9c ab       	std	Y+52, r25	; 0x34
    186c:	8b ab       	std	Y+51, r24	; 0x33
    186e:	0f c0       	rjmp	.+30     	; 0x188e <H_Lcd_WriteCommand+0xf2>
    1870:	80 e9       	ldi	r24, 0x90	; 144
    1872:	91 e0       	ldi	r25, 0x01	; 1
    1874:	9e ab       	std	Y+54, r25	; 0x36
    1876:	8d ab       	std	Y+53, r24	; 0x35
    1878:	8d a9       	ldd	r24, Y+53	; 0x35
    187a:	9e a9       	ldd	r25, Y+54	; 0x36
    187c:	01 97       	sbiw	r24, 0x01	; 1
    187e:	f1 f7       	brne	.-4      	; 0x187c <H_Lcd_WriteCommand+0xe0>
    1880:	9e ab       	std	Y+54, r25	; 0x36
    1882:	8d ab       	std	Y+53, r24	; 0x35
    1884:	8b a9       	ldd	r24, Y+51	; 0x33
    1886:	9c a9       	ldd	r25, Y+52	; 0x34
    1888:	01 97       	sbiw	r24, 0x01	; 1
    188a:	9c ab       	std	Y+52, r25	; 0x34
    188c:	8b ab       	std	Y+51, r24	; 0x33
    188e:	8b a9       	ldd	r24, Y+51	; 0x33
    1890:	9c a9       	ldd	r25, Y+52	; 0x34
    1892:	89 2b       	or	r24, r25
    1894:	69 f7       	brne	.-38     	; 0x1870 <H_Lcd_WriteCommand+0xd4>
    1896:	14 c0       	rjmp	.+40     	; 0x18c0 <H_Lcd_WriteCommand+0x124>
    1898:	6f a5       	ldd	r22, Y+47	; 0x2f
    189a:	78 a9       	ldd	r23, Y+48	; 0x30
    189c:	89 a9       	ldd	r24, Y+49	; 0x31
    189e:	9a a9       	ldd	r25, Y+50	; 0x32
    18a0:	0e 94 9b 12 	call	0x2536	; 0x2536 <__fixunssfsi>
    18a4:	dc 01       	movw	r26, r24
    18a6:	cb 01       	movw	r24, r22
    18a8:	9c ab       	std	Y+52, r25	; 0x34
    18aa:	8b ab       	std	Y+51, r24	; 0x33
    18ac:	8b a9       	ldd	r24, Y+51	; 0x33
    18ae:	9c a9       	ldd	r25, Y+52	; 0x34
    18b0:	98 af       	std	Y+56, r25	; 0x38
    18b2:	8f ab       	std	Y+55, r24	; 0x37
    18b4:	8f a9       	ldd	r24, Y+55	; 0x37
    18b6:	98 ad       	ldd	r25, Y+56	; 0x38
    18b8:	01 97       	sbiw	r24, 0x01	; 1
    18ba:	f1 f7       	brne	.-4      	; 0x18b8 <H_Lcd_WriteCommand+0x11c>
    18bc:	98 af       	std	Y+56, r25	; 0x38
    18be:	8f ab       	std	Y+55, r24	; 0x37
    18c0:	62 e0       	ldi	r22, 0x02	; 2
    18c2:	8e e1       	ldi	r24, 0x1E	; 30
    18c4:	0e 94 94 0f 	call	0x1f28	; 0x1f28 <M_Dio_PinWrite>
    18c8:	80 e0       	ldi	r24, 0x00	; 0
    18ca:	90 e0       	ldi	r25, 0x00	; 0
    18cc:	a0 e8       	ldi	r26, 0x80	; 128
    18ce:	bf e3       	ldi	r27, 0x3F	; 63
    18d0:	8d 83       	std	Y+5, r24	; 0x05
    18d2:	9e 83       	std	Y+6, r25	; 0x06
    18d4:	af 83       	std	Y+7, r26	; 0x07
    18d6:	b8 87       	std	Y+8, r27	; 0x08
    18d8:	20 e0       	ldi	r18, 0x00	; 0
    18da:	30 e0       	ldi	r19, 0x00	; 0
    18dc:	4a e7       	ldi	r20, 0x7A	; 122
    18de:	55 e4       	ldi	r21, 0x45	; 69
    18e0:	6d 81       	ldd	r22, Y+5	; 0x05
    18e2:	7e 81       	ldd	r23, Y+6	; 0x06
    18e4:	8f 81       	ldd	r24, Y+7	; 0x07
    18e6:	98 85       	ldd	r25, Y+8	; 0x08
    18e8:	0e 94 98 13 	call	0x2730	; 0x2730 <__mulsf3>
    18ec:	dc 01       	movw	r26, r24
    18ee:	cb 01       	movw	r24, r22
    18f0:	8d a3       	std	Y+37, r24	; 0x25
    18f2:	9e a3       	std	Y+38, r25	; 0x26
    18f4:	af a3       	std	Y+39, r26	; 0x27
    18f6:	b8 a7       	std	Y+40, r27	; 0x28
    18f8:	20 e0       	ldi	r18, 0x00	; 0
    18fa:	30 e0       	ldi	r19, 0x00	; 0
    18fc:	40 e8       	ldi	r20, 0x80	; 128
    18fe:	5f e3       	ldi	r21, 0x3F	; 63
    1900:	6d a1       	ldd	r22, Y+37	; 0x25
    1902:	7e a1       	ldd	r23, Y+38	; 0x26
    1904:	8f a1       	ldd	r24, Y+39	; 0x27
    1906:	98 a5       	ldd	r25, Y+40	; 0x28
    1908:	0e 94 24 12 	call	0x2448	; 0x2448 <__cmpsf2>
    190c:	88 23       	and	r24, r24
    190e:	2c f4       	brge	.+10     	; 0x191a <H_Lcd_WriteCommand+0x17e>
    1910:	81 e0       	ldi	r24, 0x01	; 1
    1912:	90 e0       	ldi	r25, 0x00	; 0
    1914:	9a a7       	std	Y+42, r25	; 0x2a
    1916:	89 a7       	std	Y+41, r24	; 0x29
    1918:	3f c0       	rjmp	.+126    	; 0x1998 <H_Lcd_WriteCommand+0x1fc>
    191a:	20 e0       	ldi	r18, 0x00	; 0
    191c:	3f ef       	ldi	r19, 0xFF	; 255
    191e:	4f e7       	ldi	r20, 0x7F	; 127
    1920:	57 e4       	ldi	r21, 0x47	; 71
    1922:	6d a1       	ldd	r22, Y+37	; 0x25
    1924:	7e a1       	ldd	r23, Y+38	; 0x26
    1926:	8f a1       	ldd	r24, Y+39	; 0x27
    1928:	98 a5       	ldd	r25, Y+40	; 0x28
    192a:	0e 94 93 13 	call	0x2726	; 0x2726 <__gesf2>
    192e:	18 16       	cp	r1, r24
    1930:	4c f5       	brge	.+82     	; 0x1984 <H_Lcd_WriteCommand+0x1e8>
    1932:	20 e0       	ldi	r18, 0x00	; 0
    1934:	30 e0       	ldi	r19, 0x00	; 0
    1936:	40 e2       	ldi	r20, 0x20	; 32
    1938:	51 e4       	ldi	r21, 0x41	; 65
    193a:	6d 81       	ldd	r22, Y+5	; 0x05
    193c:	7e 81       	ldd	r23, Y+6	; 0x06
    193e:	8f 81       	ldd	r24, Y+7	; 0x07
    1940:	98 85       	ldd	r25, Y+8	; 0x08
    1942:	0e 94 98 13 	call	0x2730	; 0x2730 <__mulsf3>
    1946:	dc 01       	movw	r26, r24
    1948:	cb 01       	movw	r24, r22
    194a:	bc 01       	movw	r22, r24
    194c:	cd 01       	movw	r24, r26
    194e:	0e 94 9b 12 	call	0x2536	; 0x2536 <__fixunssfsi>
    1952:	dc 01       	movw	r26, r24
    1954:	cb 01       	movw	r24, r22
    1956:	9a a7       	std	Y+42, r25	; 0x2a
    1958:	89 a7       	std	Y+41, r24	; 0x29
    195a:	0f c0       	rjmp	.+30     	; 0x197a <H_Lcd_WriteCommand+0x1de>
    195c:	80 e9       	ldi	r24, 0x90	; 144
    195e:	91 e0       	ldi	r25, 0x01	; 1
    1960:	9c a7       	std	Y+44, r25	; 0x2c
    1962:	8b a7       	std	Y+43, r24	; 0x2b
    1964:	8b a5       	ldd	r24, Y+43	; 0x2b
    1966:	9c a5       	ldd	r25, Y+44	; 0x2c
    1968:	01 97       	sbiw	r24, 0x01	; 1
    196a:	f1 f7       	brne	.-4      	; 0x1968 <H_Lcd_WriteCommand+0x1cc>
    196c:	9c a7       	std	Y+44, r25	; 0x2c
    196e:	8b a7       	std	Y+43, r24	; 0x2b
    1970:	89 a5       	ldd	r24, Y+41	; 0x29
    1972:	9a a5       	ldd	r25, Y+42	; 0x2a
    1974:	01 97       	sbiw	r24, 0x01	; 1
    1976:	9a a7       	std	Y+42, r25	; 0x2a
    1978:	89 a7       	std	Y+41, r24	; 0x29
    197a:	89 a5       	ldd	r24, Y+41	; 0x29
    197c:	9a a5       	ldd	r25, Y+42	; 0x2a
    197e:	89 2b       	or	r24, r25
    1980:	69 f7       	brne	.-38     	; 0x195c <H_Lcd_WriteCommand+0x1c0>
    1982:	14 c0       	rjmp	.+40     	; 0x19ac <H_Lcd_WriteCommand+0x210>
    1984:	6d a1       	ldd	r22, Y+37	; 0x25
    1986:	7e a1       	ldd	r23, Y+38	; 0x26
    1988:	8f a1       	ldd	r24, Y+39	; 0x27
    198a:	98 a5       	ldd	r25, Y+40	; 0x28
    198c:	0e 94 9b 12 	call	0x2536	; 0x2536 <__fixunssfsi>
    1990:	dc 01       	movw	r26, r24
    1992:	cb 01       	movw	r24, r22
    1994:	9a a7       	std	Y+42, r25	; 0x2a
    1996:	89 a7       	std	Y+41, r24	; 0x29
    1998:	89 a5       	ldd	r24, Y+41	; 0x29
    199a:	9a a5       	ldd	r25, Y+42	; 0x2a
    199c:	9e a7       	std	Y+46, r25	; 0x2e
    199e:	8d a7       	std	Y+45, r24	; 0x2d
    19a0:	8d a5       	ldd	r24, Y+45	; 0x2d
    19a2:	9e a5       	ldd	r25, Y+46	; 0x2e
    19a4:	01 97       	sbiw	r24, 0x01	; 1
    19a6:	f1 f7       	brne	.-4      	; 0x19a4 <H_Lcd_WriteCommand+0x208>
    19a8:	9e a7       	std	Y+46, r25	; 0x2e
    19aa:	8d a7       	std	Y+45, r24	; 0x2d
    19ac:	8b e3       	ldi	r24, 0x3B	; 59
    19ae:	90 e0       	ldi	r25, 0x00	; 0
    19b0:	29 ad       	ldd	r18, Y+57	; 0x39
    19b2:	22 2f       	mov	r18, r18
    19b4:	30 e0       	ldi	r19, 0x00	; 0
    19b6:	22 95       	swap	r18
    19b8:	32 95       	swap	r19
    19ba:	30 7f       	andi	r19, 0xF0	; 240
    19bc:	32 27       	eor	r19, r18
    19be:	20 7f       	andi	r18, 0xF0	; 240
    19c0:	32 27       	eor	r19, r18
    19c2:	42 2f       	mov	r20, r18
    19c4:	2b e3       	ldi	r18, 0x3B	; 59
    19c6:	30 e0       	ldi	r19, 0x00	; 0
    19c8:	f9 01       	movw	r30, r18
    19ca:	20 81       	ld	r18, Z
    19cc:	2f 70       	andi	r18, 0x0F	; 15
    19ce:	24 2b       	or	r18, r20
    19d0:	fc 01       	movw	r30, r24
    19d2:	20 83       	st	Z, r18
    19d4:	61 e0       	ldi	r22, 0x01	; 1
    19d6:	8e e1       	ldi	r24, 0x1E	; 30
    19d8:	0e 94 94 0f 	call	0x1f28	; 0x1f28 <M_Dio_PinWrite>
    19dc:	80 e0       	ldi	r24, 0x00	; 0
    19de:	90 e0       	ldi	r25, 0x00	; 0
    19e0:	a0 e8       	ldi	r26, 0x80	; 128
    19e2:	bf e3       	ldi	r27, 0x3F	; 63
    19e4:	89 87       	std	Y+9, r24	; 0x09
    19e6:	9a 87       	std	Y+10, r25	; 0x0a
    19e8:	ab 87       	std	Y+11, r26	; 0x0b
    19ea:	bc 87       	std	Y+12, r27	; 0x0c
    19ec:	20 e0       	ldi	r18, 0x00	; 0
    19ee:	30 e0       	ldi	r19, 0x00	; 0
    19f0:	4a e7       	ldi	r20, 0x7A	; 122
    19f2:	55 e4       	ldi	r21, 0x45	; 69
    19f4:	69 85       	ldd	r22, Y+9	; 0x09
    19f6:	7a 85       	ldd	r23, Y+10	; 0x0a
    19f8:	8b 85       	ldd	r24, Y+11	; 0x0b
    19fa:	9c 85       	ldd	r25, Y+12	; 0x0c
    19fc:	0e 94 98 13 	call	0x2730	; 0x2730 <__mulsf3>
    1a00:	dc 01       	movw	r26, r24
    1a02:	cb 01       	movw	r24, r22
    1a04:	8b 8f       	std	Y+27, r24	; 0x1b
    1a06:	9c 8f       	std	Y+28, r25	; 0x1c
    1a08:	ad 8f       	std	Y+29, r26	; 0x1d
    1a0a:	be 8f       	std	Y+30, r27	; 0x1e
    1a0c:	20 e0       	ldi	r18, 0x00	; 0
    1a0e:	30 e0       	ldi	r19, 0x00	; 0
    1a10:	40 e8       	ldi	r20, 0x80	; 128
    1a12:	5f e3       	ldi	r21, 0x3F	; 63
    1a14:	6b 8d       	ldd	r22, Y+27	; 0x1b
    1a16:	7c 8d       	ldd	r23, Y+28	; 0x1c
    1a18:	8d 8d       	ldd	r24, Y+29	; 0x1d
    1a1a:	9e 8d       	ldd	r25, Y+30	; 0x1e
    1a1c:	0e 94 24 12 	call	0x2448	; 0x2448 <__cmpsf2>
    1a20:	88 23       	and	r24, r24
    1a22:	2c f4       	brge	.+10     	; 0x1a2e <H_Lcd_WriteCommand+0x292>
    1a24:	81 e0       	ldi	r24, 0x01	; 1
    1a26:	90 e0       	ldi	r25, 0x00	; 0
    1a28:	98 a3       	std	Y+32, r25	; 0x20
    1a2a:	8f 8f       	std	Y+31, r24	; 0x1f
    1a2c:	3f c0       	rjmp	.+126    	; 0x1aac <H_Lcd_WriteCommand+0x310>
    1a2e:	20 e0       	ldi	r18, 0x00	; 0
    1a30:	3f ef       	ldi	r19, 0xFF	; 255
    1a32:	4f e7       	ldi	r20, 0x7F	; 127
    1a34:	57 e4       	ldi	r21, 0x47	; 71
    1a36:	6b 8d       	ldd	r22, Y+27	; 0x1b
    1a38:	7c 8d       	ldd	r23, Y+28	; 0x1c
    1a3a:	8d 8d       	ldd	r24, Y+29	; 0x1d
    1a3c:	9e 8d       	ldd	r25, Y+30	; 0x1e
    1a3e:	0e 94 93 13 	call	0x2726	; 0x2726 <__gesf2>
    1a42:	18 16       	cp	r1, r24
    1a44:	4c f5       	brge	.+82     	; 0x1a98 <H_Lcd_WriteCommand+0x2fc>
    1a46:	20 e0       	ldi	r18, 0x00	; 0
    1a48:	30 e0       	ldi	r19, 0x00	; 0
    1a4a:	40 e2       	ldi	r20, 0x20	; 32
    1a4c:	51 e4       	ldi	r21, 0x41	; 65
    1a4e:	69 85       	ldd	r22, Y+9	; 0x09
    1a50:	7a 85       	ldd	r23, Y+10	; 0x0a
    1a52:	8b 85       	ldd	r24, Y+11	; 0x0b
    1a54:	9c 85       	ldd	r25, Y+12	; 0x0c
    1a56:	0e 94 98 13 	call	0x2730	; 0x2730 <__mulsf3>
    1a5a:	dc 01       	movw	r26, r24
    1a5c:	cb 01       	movw	r24, r22
    1a5e:	bc 01       	movw	r22, r24
    1a60:	cd 01       	movw	r24, r26
    1a62:	0e 94 9b 12 	call	0x2536	; 0x2536 <__fixunssfsi>
    1a66:	dc 01       	movw	r26, r24
    1a68:	cb 01       	movw	r24, r22
    1a6a:	98 a3       	std	Y+32, r25	; 0x20
    1a6c:	8f 8f       	std	Y+31, r24	; 0x1f
    1a6e:	0f c0       	rjmp	.+30     	; 0x1a8e <H_Lcd_WriteCommand+0x2f2>
    1a70:	80 e9       	ldi	r24, 0x90	; 144
    1a72:	91 e0       	ldi	r25, 0x01	; 1
    1a74:	9a a3       	std	Y+34, r25	; 0x22
    1a76:	89 a3       	std	Y+33, r24	; 0x21
    1a78:	89 a1       	ldd	r24, Y+33	; 0x21
    1a7a:	9a a1       	ldd	r25, Y+34	; 0x22
    1a7c:	01 97       	sbiw	r24, 0x01	; 1
    1a7e:	f1 f7       	brne	.-4      	; 0x1a7c <H_Lcd_WriteCommand+0x2e0>
    1a80:	9a a3       	std	Y+34, r25	; 0x22
    1a82:	89 a3       	std	Y+33, r24	; 0x21
    1a84:	8f 8d       	ldd	r24, Y+31	; 0x1f
    1a86:	98 a1       	ldd	r25, Y+32	; 0x20
    1a88:	01 97       	sbiw	r24, 0x01	; 1
    1a8a:	98 a3       	std	Y+32, r25	; 0x20
    1a8c:	8f 8f       	std	Y+31, r24	; 0x1f
    1a8e:	8f 8d       	ldd	r24, Y+31	; 0x1f
    1a90:	98 a1       	ldd	r25, Y+32	; 0x20
    1a92:	89 2b       	or	r24, r25
    1a94:	69 f7       	brne	.-38     	; 0x1a70 <H_Lcd_WriteCommand+0x2d4>
    1a96:	14 c0       	rjmp	.+40     	; 0x1ac0 <H_Lcd_WriteCommand+0x324>
    1a98:	6b 8d       	ldd	r22, Y+27	; 0x1b
    1a9a:	7c 8d       	ldd	r23, Y+28	; 0x1c
    1a9c:	8d 8d       	ldd	r24, Y+29	; 0x1d
    1a9e:	9e 8d       	ldd	r25, Y+30	; 0x1e
    1aa0:	0e 94 9b 12 	call	0x2536	; 0x2536 <__fixunssfsi>
    1aa4:	dc 01       	movw	r26, r24
    1aa6:	cb 01       	movw	r24, r22
    1aa8:	98 a3       	std	Y+32, r25	; 0x20
    1aaa:	8f 8f       	std	Y+31, r24	; 0x1f
    1aac:	8f 8d       	ldd	r24, Y+31	; 0x1f
    1aae:	98 a1       	ldd	r25, Y+32	; 0x20
    1ab0:	9c a3       	std	Y+36, r25	; 0x24
    1ab2:	8b a3       	std	Y+35, r24	; 0x23
    1ab4:	8b a1       	ldd	r24, Y+35	; 0x23
    1ab6:	9c a1       	ldd	r25, Y+36	; 0x24
    1ab8:	01 97       	sbiw	r24, 0x01	; 1
    1aba:	f1 f7       	brne	.-4      	; 0x1ab8 <H_Lcd_WriteCommand+0x31c>
    1abc:	9c a3       	std	Y+36, r25	; 0x24
    1abe:	8b a3       	std	Y+35, r24	; 0x23
    1ac0:	62 e0       	ldi	r22, 0x02	; 2
    1ac2:	8e e1       	ldi	r24, 0x1E	; 30
    1ac4:	0e 94 94 0f 	call	0x1f28	; 0x1f28 <M_Dio_PinWrite>
    1ac8:	80 e0       	ldi	r24, 0x00	; 0
    1aca:	90 e0       	ldi	r25, 0x00	; 0
    1acc:	a0 ea       	ldi	r26, 0xA0	; 160
    1ace:	b0 e4       	ldi	r27, 0x40	; 64
    1ad0:	8d 87       	std	Y+13, r24	; 0x0d
    1ad2:	9e 87       	std	Y+14, r25	; 0x0e
    1ad4:	af 87       	std	Y+15, r26	; 0x0f
    1ad6:	b8 8b       	std	Y+16, r27	; 0x10
    1ad8:	20 e0       	ldi	r18, 0x00	; 0
    1ada:	30 e0       	ldi	r19, 0x00	; 0
    1adc:	4a e7       	ldi	r20, 0x7A	; 122
    1ade:	55 e4       	ldi	r21, 0x45	; 69
    1ae0:	6d 85       	ldd	r22, Y+13	; 0x0d
    1ae2:	7e 85       	ldd	r23, Y+14	; 0x0e
    1ae4:	8f 85       	ldd	r24, Y+15	; 0x0f
    1ae6:	98 89       	ldd	r25, Y+16	; 0x10
    1ae8:	0e 94 98 13 	call	0x2730	; 0x2730 <__mulsf3>
    1aec:	dc 01       	movw	r26, r24
    1aee:	cb 01       	movw	r24, r22
    1af0:	89 8b       	std	Y+17, r24	; 0x11
    1af2:	9a 8b       	std	Y+18, r25	; 0x12
    1af4:	ab 8b       	std	Y+19, r26	; 0x13
    1af6:	bc 8b       	std	Y+20, r27	; 0x14
    1af8:	20 e0       	ldi	r18, 0x00	; 0
    1afa:	30 e0       	ldi	r19, 0x00	; 0
    1afc:	40 e8       	ldi	r20, 0x80	; 128
    1afe:	5f e3       	ldi	r21, 0x3F	; 63
    1b00:	69 89       	ldd	r22, Y+17	; 0x11
    1b02:	7a 89       	ldd	r23, Y+18	; 0x12
    1b04:	8b 89       	ldd	r24, Y+19	; 0x13
    1b06:	9c 89       	ldd	r25, Y+20	; 0x14
    1b08:	0e 94 24 12 	call	0x2448	; 0x2448 <__cmpsf2>
    1b0c:	88 23       	and	r24, r24
    1b0e:	2c f4       	brge	.+10     	; 0x1b1a <H_Lcd_WriteCommand+0x37e>
    1b10:	81 e0       	ldi	r24, 0x01	; 1
    1b12:	90 e0       	ldi	r25, 0x00	; 0
    1b14:	9e 8b       	std	Y+22, r25	; 0x16
    1b16:	8d 8b       	std	Y+21, r24	; 0x15
    1b18:	3f c0       	rjmp	.+126    	; 0x1b98 <H_Lcd_WriteCommand+0x3fc>
    1b1a:	20 e0       	ldi	r18, 0x00	; 0
    1b1c:	3f ef       	ldi	r19, 0xFF	; 255
    1b1e:	4f e7       	ldi	r20, 0x7F	; 127
    1b20:	57 e4       	ldi	r21, 0x47	; 71
    1b22:	69 89       	ldd	r22, Y+17	; 0x11
    1b24:	7a 89       	ldd	r23, Y+18	; 0x12
    1b26:	8b 89       	ldd	r24, Y+19	; 0x13
    1b28:	9c 89       	ldd	r25, Y+20	; 0x14
    1b2a:	0e 94 93 13 	call	0x2726	; 0x2726 <__gesf2>
    1b2e:	18 16       	cp	r1, r24
    1b30:	4c f5       	brge	.+82     	; 0x1b84 <H_Lcd_WriteCommand+0x3e8>
    1b32:	20 e0       	ldi	r18, 0x00	; 0
    1b34:	30 e0       	ldi	r19, 0x00	; 0
    1b36:	40 e2       	ldi	r20, 0x20	; 32
    1b38:	51 e4       	ldi	r21, 0x41	; 65
    1b3a:	6d 85       	ldd	r22, Y+13	; 0x0d
    1b3c:	7e 85       	ldd	r23, Y+14	; 0x0e
    1b3e:	8f 85       	ldd	r24, Y+15	; 0x0f
    1b40:	98 89       	ldd	r25, Y+16	; 0x10
    1b42:	0e 94 98 13 	call	0x2730	; 0x2730 <__mulsf3>
    1b46:	dc 01       	movw	r26, r24
    1b48:	cb 01       	movw	r24, r22
    1b4a:	bc 01       	movw	r22, r24
    1b4c:	cd 01       	movw	r24, r26
    1b4e:	0e 94 9b 12 	call	0x2536	; 0x2536 <__fixunssfsi>
    1b52:	dc 01       	movw	r26, r24
    1b54:	cb 01       	movw	r24, r22
    1b56:	9e 8b       	std	Y+22, r25	; 0x16
    1b58:	8d 8b       	std	Y+21, r24	; 0x15
    1b5a:	0f c0       	rjmp	.+30     	; 0x1b7a <H_Lcd_WriteCommand+0x3de>
    1b5c:	80 e9       	ldi	r24, 0x90	; 144
    1b5e:	91 e0       	ldi	r25, 0x01	; 1
    1b60:	98 8f       	std	Y+24, r25	; 0x18
    1b62:	8f 8b       	std	Y+23, r24	; 0x17
    1b64:	8f 89       	ldd	r24, Y+23	; 0x17
    1b66:	98 8d       	ldd	r25, Y+24	; 0x18
    1b68:	01 97       	sbiw	r24, 0x01	; 1
    1b6a:	f1 f7       	brne	.-4      	; 0x1b68 <H_Lcd_WriteCommand+0x3cc>
    1b6c:	98 8f       	std	Y+24, r25	; 0x18
    1b6e:	8f 8b       	std	Y+23, r24	; 0x17
    1b70:	8d 89       	ldd	r24, Y+21	; 0x15
    1b72:	9e 89       	ldd	r25, Y+22	; 0x16
    1b74:	01 97       	sbiw	r24, 0x01	; 1
    1b76:	9e 8b       	std	Y+22, r25	; 0x16
    1b78:	8d 8b       	std	Y+21, r24	; 0x15
    1b7a:	8d 89       	ldd	r24, Y+21	; 0x15
    1b7c:	9e 89       	ldd	r25, Y+22	; 0x16
    1b7e:	89 2b       	or	r24, r25
    1b80:	69 f7       	brne	.-38     	; 0x1b5c <H_Lcd_WriteCommand+0x3c0>
    1b82:	14 c0       	rjmp	.+40     	; 0x1bac <H_Lcd_WriteCommand+0x410>
    1b84:	69 89       	ldd	r22, Y+17	; 0x11
    1b86:	7a 89       	ldd	r23, Y+18	; 0x12
    1b88:	8b 89       	ldd	r24, Y+19	; 0x13
    1b8a:	9c 89       	ldd	r25, Y+20	; 0x14
    1b8c:	0e 94 9b 12 	call	0x2536	; 0x2536 <__fixunssfsi>
    1b90:	dc 01       	movw	r26, r24
    1b92:	cb 01       	movw	r24, r22
    1b94:	9e 8b       	std	Y+22, r25	; 0x16
    1b96:	8d 8b       	std	Y+21, r24	; 0x15
    1b98:	8d 89       	ldd	r24, Y+21	; 0x15
    1b9a:	9e 89       	ldd	r25, Y+22	; 0x16
    1b9c:	9a 8f       	std	Y+26, r25	; 0x1a
    1b9e:	89 8f       	std	Y+25, r24	; 0x19
    1ba0:	89 8d       	ldd	r24, Y+25	; 0x19
    1ba2:	9a 8d       	ldd	r25, Y+26	; 0x1a
    1ba4:	01 97       	sbiw	r24, 0x01	; 1
    1ba6:	f1 f7       	brne	.-4      	; 0x1ba4 <H_Lcd_WriteCommand+0x408>
    1ba8:	9a 8f       	std	Y+26, r25	; 0x1a
    1baa:	89 8f       	std	Y+25, r24	; 0x19
    1bac:	00 00       	nop
    1bae:	e9 96       	adiw	r28, 0x39	; 57
    1bb0:	0f b6       	in	r0, 0x3f	; 63
    1bb2:	f8 94       	cli
    1bb4:	de bf       	out	0x3e, r29	; 62
    1bb6:	0f be       	out	0x3f, r0	; 63
    1bb8:	cd bf       	out	0x3d, r28	; 61
    1bba:	df 91       	pop	r29
    1bbc:	cf 91       	pop	r28
    1bbe:	08 95       	ret

00001bc0 <H_Lcd_WriteString>:
    1bc0:	cf 93       	push	r28
    1bc2:	df 93       	push	r29
    1bc4:	00 d0       	rcall	.+0      	; 0x1bc6 <H_Lcd_WriteString+0x6>
    1bc6:	1f 92       	push	r1
    1bc8:	cd b7       	in	r28, 0x3d	; 61
    1bca:	de b7       	in	r29, 0x3e	; 62
    1bcc:	9b 83       	std	Y+3, r25	; 0x03
    1bce:	8a 83       	std	Y+2, r24	; 0x02
    1bd0:	19 82       	std	Y+1, r1	; 0x01
    1bd2:	0e c0       	rjmp	.+28     	; 0x1bf0 <H_Lcd_WriteString+0x30>
    1bd4:	89 81       	ldd	r24, Y+1	; 0x01
    1bd6:	88 2f       	mov	r24, r24
    1bd8:	90 e0       	ldi	r25, 0x00	; 0
    1bda:	2a 81       	ldd	r18, Y+2	; 0x02
    1bdc:	3b 81       	ldd	r19, Y+3	; 0x03
    1bde:	82 0f       	add	r24, r18
    1be0:	93 1f       	adc	r25, r19
    1be2:	fc 01       	movw	r30, r24
    1be4:	80 81       	ld	r24, Z
    1be6:	0e 94 bc 09 	call	0x1378	; 0x1378 <H_Lcd_WriteCharacter>
    1bea:	89 81       	ldd	r24, Y+1	; 0x01
    1bec:	8f 5f       	subi	r24, 0xFF	; 255
    1bee:	89 83       	std	Y+1, r24	; 0x01
    1bf0:	89 81       	ldd	r24, Y+1	; 0x01
    1bf2:	88 2f       	mov	r24, r24
    1bf4:	90 e0       	ldi	r25, 0x00	; 0
    1bf6:	2a 81       	ldd	r18, Y+2	; 0x02
    1bf8:	3b 81       	ldd	r19, Y+3	; 0x03
    1bfa:	82 0f       	add	r24, r18
    1bfc:	93 1f       	adc	r25, r19
    1bfe:	fc 01       	movw	r30, r24
    1c00:	80 81       	ld	r24, Z
    1c02:	88 2f       	mov	r24, r24
    1c04:	90 e0       	ldi	r25, 0x00	; 0
    1c06:	89 2b       	or	r24, r25
    1c08:	29 f7       	brne	.-54     	; 0x1bd4 <H_Lcd_WriteString+0x14>
    1c0a:	00 00       	nop
    1c0c:	0f 90       	pop	r0
    1c0e:	0f 90       	pop	r0
    1c10:	0f 90       	pop	r0
    1c12:	df 91       	pop	r29
    1c14:	cf 91       	pop	r28
    1c16:	08 95       	ret

00001c18 <H_Lcd_WriteNumberflt>:
    1c18:	cf 93       	push	r28
    1c1a:	df 93       	push	r29
    1c1c:	cd b7       	in	r28, 0x3d	; 61
    1c1e:	de b7       	in	r29, 0x3e	; 62
    1c20:	68 97       	sbiw	r28, 0x18	; 24
    1c22:	0f b6       	in	r0, 0x3f	; 63
    1c24:	f8 94       	cli
    1c26:	de bf       	out	0x3e, r29	; 62
    1c28:	0f be       	out	0x3f, r0	; 63
    1c2a:	cd bf       	out	0x3d, r28	; 61
    1c2c:	6d 8b       	std	Y+21, r22	; 0x15
    1c2e:	7e 8b       	std	Y+22, r23	; 0x16
    1c30:	8f 8b       	std	Y+23, r24	; 0x17
    1c32:	98 8f       	std	Y+24, r25	; 0x18
    1c34:	20 e0       	ldi	r18, 0x00	; 0
    1c36:	30 e0       	ldi	r19, 0x00	; 0
    1c38:	a9 01       	movw	r20, r18
    1c3a:	6d 89       	ldd	r22, Y+21	; 0x15
    1c3c:	7e 89       	ldd	r23, Y+22	; 0x16
    1c3e:	8f 89       	ldd	r24, Y+23	; 0x17
    1c40:	98 8d       	ldd	r25, Y+24	; 0x18
    1c42:	0e 94 24 12 	call	0x2448	; 0x2448 <__cmpsf2>
    1c46:	88 23       	and	r24, r24
    1c48:	21 f4       	brne	.+8      	; 0x1c52 <H_Lcd_WriteNumberflt+0x3a>
    1c4a:	80 e3       	ldi	r24, 0x30	; 48
    1c4c:	0e 94 bc 09 	call	0x1378	; 0x1378 <H_Lcd_WriteCharacter>
    1c50:	21 c0       	rjmp	.+66     	; 0x1c94 <H_Lcd_WriteNumberflt+0x7c>
    1c52:	88 8d       	ldd	r24, Y+24	; 0x18
    1c54:	8f 93       	push	r24
    1c56:	8f 89       	ldd	r24, Y+23	; 0x17
    1c58:	8f 93       	push	r24
    1c5a:	8e 89       	ldd	r24, Y+22	; 0x16
    1c5c:	8f 93       	push	r24
    1c5e:	8d 89       	ldd	r24, Y+21	; 0x15
    1c60:	8f 93       	push	r24
    1c62:	8f e8       	ldi	r24, 0x8F	; 143
    1c64:	90 e0       	ldi	r25, 0x00	; 0
    1c66:	89 2f       	mov	r24, r25
    1c68:	8f 93       	push	r24
    1c6a:	8f e8       	ldi	r24, 0x8F	; 143
    1c6c:	90 e0       	ldi	r25, 0x00	; 0
    1c6e:	8f 93       	push	r24
    1c70:	ce 01       	movw	r24, r28
    1c72:	01 96       	adiw	r24, 0x01	; 1
    1c74:	9f 93       	push	r25
    1c76:	8f 93       	push	r24
    1c78:	0e 94 3d 1a 	call	0x347a	; 0x347a <sprintf>
    1c7c:	8d b7       	in	r24, 0x3d	; 61
    1c7e:	9e b7       	in	r25, 0x3e	; 62
    1c80:	08 96       	adiw	r24, 0x08	; 8
    1c82:	0f b6       	in	r0, 0x3f	; 63
    1c84:	f8 94       	cli
    1c86:	de bf       	out	0x3e, r29	; 62
    1c88:	0f be       	out	0x3f, r0	; 63
    1c8a:	cd bf       	out	0x3d, r28	; 61
    1c8c:	ce 01       	movw	r24, r28
    1c8e:	01 96       	adiw	r24, 0x01	; 1
    1c90:	0e 94 e0 0d 	call	0x1bc0	; 0x1bc0 <H_Lcd_WriteString>
    1c94:	00 00       	nop
    1c96:	68 96       	adiw	r28, 0x18	; 24
    1c98:	0f b6       	in	r0, 0x3f	; 63
    1c9a:	f8 94       	cli
    1c9c:	de bf       	out	0x3e, r29	; 62
    1c9e:	0f be       	out	0x3f, r0	; 63
    1ca0:	cd bf       	out	0x3d, r28	; 61
    1ca2:	df 91       	pop	r29
    1ca4:	cf 91       	pop	r28
    1ca6:	08 95       	ret

00001ca8 <H_Lcd_Clr>:
    1ca8:	cf 93       	push	r28
    1caa:	df 93       	push	r29
    1cac:	cd b7       	in	r28, 0x3d	; 61
    1cae:	de b7       	in	r29, 0x3e	; 62
    1cb0:	81 e0       	ldi	r24, 0x01	; 1
    1cb2:	0e 94 ce 0b 	call	0x179c	; 0x179c <H_Lcd_WriteCommand>
    1cb6:	00 00       	nop
    1cb8:	df 91       	pop	r29
    1cba:	cf 91       	pop	r28
    1cbc:	08 95       	ret

00001cbe <H_Lcd_GoTo>:
    1cbe:	cf 93       	push	r28
    1cc0:	df 93       	push	r29
    1cc2:	00 d0       	rcall	.+0      	; 0x1cc4 <H_Lcd_GoTo+0x6>
    1cc4:	00 d0       	rcall	.+0      	; 0x1cc6 <H_Lcd_GoTo+0x8>
    1cc6:	cd b7       	in	r28, 0x3d	; 61
    1cc8:	de b7       	in	r29, 0x3e	; 62
    1cca:	8b 83       	std	Y+3, r24	; 0x03
    1ccc:	6c 83       	std	Y+4, r22	; 0x04
    1cce:	80 e8       	ldi	r24, 0x80	; 128
    1cd0:	89 83       	std	Y+1, r24	; 0x01
    1cd2:	80 ec       	ldi	r24, 0xC0	; 192
    1cd4:	8a 83       	std	Y+2, r24	; 0x02
    1cd6:	8b 81       	ldd	r24, Y+3	; 0x03
    1cd8:	88 2f       	mov	r24, r24
    1cda:	90 e0       	ldi	r25, 0x00	; 0
    1cdc:	9e 01       	movw	r18, r28
    1cde:	2f 5f       	subi	r18, 0xFF	; 255
    1ce0:	3f 4f       	sbci	r19, 0xFF	; 255
    1ce2:	82 0f       	add	r24, r18
    1ce4:	93 1f       	adc	r25, r19
    1ce6:	fc 01       	movw	r30, r24
    1ce8:	90 81       	ld	r25, Z
    1cea:	8c 81       	ldd	r24, Y+4	; 0x04
    1cec:	89 0f       	add	r24, r25
    1cee:	0e 94 ce 0b 	call	0x179c	; 0x179c <H_Lcd_WriteCommand>
    1cf2:	00 00       	nop
    1cf4:	0f 90       	pop	r0
    1cf6:	0f 90       	pop	r0
    1cf8:	0f 90       	pop	r0
    1cfa:	0f 90       	pop	r0
    1cfc:	df 91       	pop	r29
    1cfe:	cf 91       	pop	r28
    1d00:	08 95       	ret

00001d02 <H_Lcd_ShiftLeft>:

void H_Lcd_ShiftLeft(void)
{
    1d02:	cf 93       	push	r28
    1d04:	df 93       	push	r29
    1d06:	cd b7       	in	r28, 0x3d	; 61
    1d08:	de b7       	in	r29, 0x3e	; 62
	H_Lcd_WriteCommand(LCD_SHIFT_LEFT);
    1d0a:	88 e1       	ldi	r24, 0x18	; 24
    1d0c:	0e 94 ce 0b 	call	0x179c	; 0x179c <H_Lcd_WriteCommand>
}
    1d10:	00 00       	nop
    1d12:	df 91       	pop	r29
    1d14:	cf 91       	pop	r28
    1d16:	08 95       	ret

00001d18 <M_Dio_PinMode>:
		case 2: TogBit(_PORTB,Local_u8_Pin); break;
		case 3: TogBit(_PORTC,Local_u8_Pin); break;
		case 4: TogBit(_PORTD,Local_u8_Pin); break;
		default:                            break;	
	}
}
    1d18:	cf 93       	push	r28
    1d1a:	df 93       	push	r29
    1d1c:	00 d0       	rcall	.+0      	; 0x1d1e <M_Dio_PinMode+0x6>
    1d1e:	00 d0       	rcall	.+0      	; 0x1d20 <M_Dio_PinMode+0x8>
    1d20:	cd b7       	in	r28, 0x3d	; 61
    1d22:	de b7       	in	r29, 0x3e	; 62
    1d24:	8b 83       	std	Y+3, r24	; 0x03
    1d26:	6c 83       	std	Y+4, r22	; 0x04
    1d28:	9b 81       	ldd	r25, Y+3	; 0x03
    1d2a:	8d ec       	ldi	r24, 0xCD	; 205
    1d2c:	98 9f       	mul	r25, r24
    1d2e:	81 2d       	mov	r24, r1
    1d30:	11 24       	eor	r1, r1
    1d32:	86 95       	lsr	r24
    1d34:	86 95       	lsr	r24
    1d36:	86 95       	lsr	r24
    1d38:	88 0f       	add	r24, r24
    1d3a:	28 2f       	mov	r18, r24
    1d3c:	22 0f       	add	r18, r18
    1d3e:	22 0f       	add	r18, r18
    1d40:	82 0f       	add	r24, r18
    1d42:	29 2f       	mov	r18, r25
    1d44:	28 1b       	sub	r18, r24
    1d46:	82 2f       	mov	r24, r18
    1d48:	89 83       	std	Y+1, r24	; 0x01
    1d4a:	9b 81       	ldd	r25, Y+3	; 0x03
    1d4c:	8d ec       	ldi	r24, 0xCD	; 205
    1d4e:	98 9f       	mul	r25, r24
    1d50:	81 2d       	mov	r24, r1
    1d52:	11 24       	eor	r1, r1
    1d54:	86 95       	lsr	r24
    1d56:	86 95       	lsr	r24
    1d58:	86 95       	lsr	r24
    1d5a:	8a 83       	std	Y+2, r24	; 0x02
    1d5c:	8c 81       	ldd	r24, Y+4	; 0x04
    1d5e:	88 2f       	mov	r24, r24
    1d60:	90 e0       	ldi	r25, 0x00	; 0
    1d62:	81 30       	cpi	r24, 0x01	; 1
    1d64:	91 05       	cpc	r25, r1
    1d66:	21 f0       	breq	.+8      	; 0x1d70 <M_Dio_PinMode+0x58>
    1d68:	02 97       	sbiw	r24, 0x02	; 2
    1d6a:	09 f4       	brne	.+2      	; 0x1d6e <M_Dio_PinMode+0x56>
    1d6c:	69 c0       	rjmp	.+210    	; 0x1e40 <M_Dio_PinMode+0x128>
    1d6e:	d4 c0       	rjmp	.+424    	; 0x1f18 <M_Dio_PinMode+0x200>
    1d70:	8a 81       	ldd	r24, Y+2	; 0x02
    1d72:	88 2f       	mov	r24, r24
    1d74:	90 e0       	ldi	r25, 0x00	; 0
    1d76:	82 30       	cpi	r24, 0x02	; 2
    1d78:	91 05       	cpc	r25, r1
    1d7a:	11 f1       	breq	.+68     	; 0x1dc0 <M_Dio_PinMode+0xa8>
    1d7c:	83 30       	cpi	r24, 0x03	; 3
    1d7e:	91 05       	cpc	r25, r1
    1d80:	1c f4       	brge	.+6      	; 0x1d88 <M_Dio_PinMode+0x70>
    1d82:	01 97       	sbiw	r24, 0x01	; 1
    1d84:	41 f0       	breq	.+16     	; 0x1d96 <M_Dio_PinMode+0x7e>
    1d86:	5b c0       	rjmp	.+182    	; 0x1e3e <M_Dio_PinMode+0x126>
    1d88:	83 30       	cpi	r24, 0x03	; 3
    1d8a:	91 05       	cpc	r25, r1
    1d8c:	71 f1       	breq	.+92     	; 0x1dea <M_Dio_PinMode+0xd2>
    1d8e:	04 97       	sbiw	r24, 0x04	; 4
    1d90:	09 f4       	brne	.+2      	; 0x1d94 <M_Dio_PinMode+0x7c>
    1d92:	40 c0       	rjmp	.+128    	; 0x1e14 <M_Dio_PinMode+0xfc>
    1d94:	54 c0       	rjmp	.+168    	; 0x1e3e <M_Dio_PinMode+0x126>
    1d96:	8a e3       	ldi	r24, 0x3A	; 58
    1d98:	90 e0       	ldi	r25, 0x00	; 0
    1d9a:	2a e3       	ldi	r18, 0x3A	; 58
    1d9c:	30 e0       	ldi	r19, 0x00	; 0
    1d9e:	f9 01       	movw	r30, r18
    1da0:	20 81       	ld	r18, Z
    1da2:	62 2f       	mov	r22, r18
    1da4:	29 81       	ldd	r18, Y+1	; 0x01
    1da6:	42 2f       	mov	r20, r18
    1da8:	50 e0       	ldi	r21, 0x00	; 0
    1daa:	21 e0       	ldi	r18, 0x01	; 1
    1dac:	30 e0       	ldi	r19, 0x00	; 0
    1dae:	02 c0       	rjmp	.+4      	; 0x1db4 <M_Dio_PinMode+0x9c>
    1db0:	22 0f       	add	r18, r18
    1db2:	33 1f       	adc	r19, r19
    1db4:	4a 95       	dec	r20
    1db6:	e2 f7       	brpl	.-8      	; 0x1db0 <M_Dio_PinMode+0x98>
    1db8:	26 2b       	or	r18, r22
    1dba:	fc 01       	movw	r30, r24
    1dbc:	20 83       	st	Z, r18
    1dbe:	3f c0       	rjmp	.+126    	; 0x1e3e <M_Dio_PinMode+0x126>
    1dc0:	87 e3       	ldi	r24, 0x37	; 55
    1dc2:	90 e0       	ldi	r25, 0x00	; 0
    1dc4:	27 e3       	ldi	r18, 0x37	; 55
    1dc6:	30 e0       	ldi	r19, 0x00	; 0
    1dc8:	f9 01       	movw	r30, r18
    1dca:	20 81       	ld	r18, Z
    1dcc:	62 2f       	mov	r22, r18
    1dce:	29 81       	ldd	r18, Y+1	; 0x01
    1dd0:	42 2f       	mov	r20, r18
    1dd2:	50 e0       	ldi	r21, 0x00	; 0
    1dd4:	21 e0       	ldi	r18, 0x01	; 1
    1dd6:	30 e0       	ldi	r19, 0x00	; 0
    1dd8:	02 c0       	rjmp	.+4      	; 0x1dde <M_Dio_PinMode+0xc6>
    1dda:	22 0f       	add	r18, r18
    1ddc:	33 1f       	adc	r19, r19
    1dde:	4a 95       	dec	r20
    1de0:	e2 f7       	brpl	.-8      	; 0x1dda <M_Dio_PinMode+0xc2>
    1de2:	26 2b       	or	r18, r22
    1de4:	fc 01       	movw	r30, r24
    1de6:	20 83       	st	Z, r18
    1de8:	2a c0       	rjmp	.+84     	; 0x1e3e <M_Dio_PinMode+0x126>
    1dea:	84 e3       	ldi	r24, 0x34	; 52
    1dec:	90 e0       	ldi	r25, 0x00	; 0
    1dee:	24 e3       	ldi	r18, 0x34	; 52
    1df0:	30 e0       	ldi	r19, 0x00	; 0
    1df2:	f9 01       	movw	r30, r18
    1df4:	20 81       	ld	r18, Z
    1df6:	62 2f       	mov	r22, r18
    1df8:	29 81       	ldd	r18, Y+1	; 0x01
    1dfa:	42 2f       	mov	r20, r18
    1dfc:	50 e0       	ldi	r21, 0x00	; 0
    1dfe:	21 e0       	ldi	r18, 0x01	; 1
    1e00:	30 e0       	ldi	r19, 0x00	; 0
    1e02:	02 c0       	rjmp	.+4      	; 0x1e08 <M_Dio_PinMode+0xf0>
    1e04:	22 0f       	add	r18, r18
    1e06:	33 1f       	adc	r19, r19
    1e08:	4a 95       	dec	r20
    1e0a:	e2 f7       	brpl	.-8      	; 0x1e04 <M_Dio_PinMode+0xec>
    1e0c:	26 2b       	or	r18, r22
    1e0e:	fc 01       	movw	r30, r24
    1e10:	20 83       	st	Z, r18
    1e12:	15 c0       	rjmp	.+42     	; 0x1e3e <M_Dio_PinMode+0x126>
    1e14:	81 e3       	ldi	r24, 0x31	; 49
    1e16:	90 e0       	ldi	r25, 0x00	; 0
    1e18:	21 e3       	ldi	r18, 0x31	; 49
    1e1a:	30 e0       	ldi	r19, 0x00	; 0
    1e1c:	f9 01       	movw	r30, r18
    1e1e:	20 81       	ld	r18, Z
    1e20:	62 2f       	mov	r22, r18
    1e22:	29 81       	ldd	r18, Y+1	; 0x01
    1e24:	42 2f       	mov	r20, r18
    1e26:	50 e0       	ldi	r21, 0x00	; 0
    1e28:	21 e0       	ldi	r18, 0x01	; 1
    1e2a:	30 e0       	ldi	r19, 0x00	; 0
    1e2c:	02 c0       	rjmp	.+4      	; 0x1e32 <M_Dio_PinMode+0x11a>
    1e2e:	22 0f       	add	r18, r18
    1e30:	33 1f       	adc	r19, r19
    1e32:	4a 95       	dec	r20
    1e34:	e2 f7       	brpl	.-8      	; 0x1e2e <M_Dio_PinMode+0x116>
    1e36:	26 2b       	or	r18, r22
    1e38:	fc 01       	movw	r30, r24
    1e3a:	20 83       	st	Z, r18
    1e3c:	00 00       	nop
    1e3e:	6c c0       	rjmp	.+216    	; 0x1f18 <M_Dio_PinMode+0x200>
    1e40:	8a 81       	ldd	r24, Y+2	; 0x02
    1e42:	88 2f       	mov	r24, r24
    1e44:	90 e0       	ldi	r25, 0x00	; 0
    1e46:	82 30       	cpi	r24, 0x02	; 2
    1e48:	91 05       	cpc	r25, r1
    1e4a:	19 f1       	breq	.+70     	; 0x1e92 <M_Dio_PinMode+0x17a>
    1e4c:	83 30       	cpi	r24, 0x03	; 3
    1e4e:	91 05       	cpc	r25, r1
    1e50:	1c f4       	brge	.+6      	; 0x1e58 <M_Dio_PinMode+0x140>
    1e52:	01 97       	sbiw	r24, 0x01	; 1
    1e54:	41 f0       	breq	.+16     	; 0x1e66 <M_Dio_PinMode+0x14e>
    1e56:	5f c0       	rjmp	.+190    	; 0x1f16 <M_Dio_PinMode+0x1fe>
    1e58:	83 30       	cpi	r24, 0x03	; 3
    1e5a:	91 05       	cpc	r25, r1
    1e5c:	81 f1       	breq	.+96     	; 0x1ebe <M_Dio_PinMode+0x1a6>
    1e5e:	04 97       	sbiw	r24, 0x04	; 4
    1e60:	09 f4       	brne	.+2      	; 0x1e64 <M_Dio_PinMode+0x14c>
    1e62:	43 c0       	rjmp	.+134    	; 0x1eea <M_Dio_PinMode+0x1d2>
    1e64:	58 c0       	rjmp	.+176    	; 0x1f16 <M_Dio_PinMode+0x1fe>
    1e66:	8a e3       	ldi	r24, 0x3A	; 58
    1e68:	90 e0       	ldi	r25, 0x00	; 0
    1e6a:	2a e3       	ldi	r18, 0x3A	; 58
    1e6c:	30 e0       	ldi	r19, 0x00	; 0
    1e6e:	f9 01       	movw	r30, r18
    1e70:	20 81       	ld	r18, Z
    1e72:	62 2f       	mov	r22, r18
    1e74:	29 81       	ldd	r18, Y+1	; 0x01
    1e76:	42 2f       	mov	r20, r18
    1e78:	50 e0       	ldi	r21, 0x00	; 0
    1e7a:	21 e0       	ldi	r18, 0x01	; 1
    1e7c:	30 e0       	ldi	r19, 0x00	; 0
    1e7e:	02 c0       	rjmp	.+4      	; 0x1e84 <M_Dio_PinMode+0x16c>
    1e80:	22 0f       	add	r18, r18
    1e82:	33 1f       	adc	r19, r19
    1e84:	4a 95       	dec	r20
    1e86:	e2 f7       	brpl	.-8      	; 0x1e80 <M_Dio_PinMode+0x168>
    1e88:	20 95       	com	r18
    1e8a:	26 23       	and	r18, r22
    1e8c:	fc 01       	movw	r30, r24
    1e8e:	20 83       	st	Z, r18
    1e90:	42 c0       	rjmp	.+132    	; 0x1f16 <M_Dio_PinMode+0x1fe>
    1e92:	87 e3       	ldi	r24, 0x37	; 55
    1e94:	90 e0       	ldi	r25, 0x00	; 0
    1e96:	27 e3       	ldi	r18, 0x37	; 55
    1e98:	30 e0       	ldi	r19, 0x00	; 0
    1e9a:	f9 01       	movw	r30, r18
    1e9c:	20 81       	ld	r18, Z
    1e9e:	62 2f       	mov	r22, r18
    1ea0:	29 81       	ldd	r18, Y+1	; 0x01
    1ea2:	42 2f       	mov	r20, r18
    1ea4:	50 e0       	ldi	r21, 0x00	; 0
    1ea6:	21 e0       	ldi	r18, 0x01	; 1
    1ea8:	30 e0       	ldi	r19, 0x00	; 0
    1eaa:	02 c0       	rjmp	.+4      	; 0x1eb0 <M_Dio_PinMode+0x198>
    1eac:	22 0f       	add	r18, r18
    1eae:	33 1f       	adc	r19, r19
    1eb0:	4a 95       	dec	r20
    1eb2:	e2 f7       	brpl	.-8      	; 0x1eac <M_Dio_PinMode+0x194>
    1eb4:	20 95       	com	r18
    1eb6:	26 23       	and	r18, r22
    1eb8:	fc 01       	movw	r30, r24
    1eba:	20 83       	st	Z, r18
    1ebc:	2c c0       	rjmp	.+88     	; 0x1f16 <M_Dio_PinMode+0x1fe>
    1ebe:	84 e3       	ldi	r24, 0x34	; 52
    1ec0:	90 e0       	ldi	r25, 0x00	; 0
    1ec2:	24 e3       	ldi	r18, 0x34	; 52
    1ec4:	30 e0       	ldi	r19, 0x00	; 0
    1ec6:	f9 01       	movw	r30, r18
    1ec8:	20 81       	ld	r18, Z
    1eca:	62 2f       	mov	r22, r18
    1ecc:	29 81       	ldd	r18, Y+1	; 0x01
    1ece:	42 2f       	mov	r20, r18
    1ed0:	50 e0       	ldi	r21, 0x00	; 0
    1ed2:	21 e0       	ldi	r18, 0x01	; 1
    1ed4:	30 e0       	ldi	r19, 0x00	; 0
    1ed6:	02 c0       	rjmp	.+4      	; 0x1edc <M_Dio_PinMode+0x1c4>
    1ed8:	22 0f       	add	r18, r18
    1eda:	33 1f       	adc	r19, r19
    1edc:	4a 95       	dec	r20
    1ede:	e2 f7       	brpl	.-8      	; 0x1ed8 <M_Dio_PinMode+0x1c0>
    1ee0:	20 95       	com	r18
    1ee2:	26 23       	and	r18, r22
    1ee4:	fc 01       	movw	r30, r24
    1ee6:	20 83       	st	Z, r18
    1ee8:	16 c0       	rjmp	.+44     	; 0x1f16 <M_Dio_PinMode+0x1fe>
    1eea:	81 e3       	ldi	r24, 0x31	; 49
    1eec:	90 e0       	ldi	r25, 0x00	; 0
    1eee:	21 e3       	ldi	r18, 0x31	; 49
    1ef0:	30 e0       	ldi	r19, 0x00	; 0
    1ef2:	f9 01       	movw	r30, r18
    1ef4:	20 81       	ld	r18, Z
    1ef6:	62 2f       	mov	r22, r18
    1ef8:	29 81       	ldd	r18, Y+1	; 0x01
    1efa:	42 2f       	mov	r20, r18
    1efc:	50 e0       	ldi	r21, 0x00	; 0
    1efe:	21 e0       	ldi	r18, 0x01	; 1
    1f00:	30 e0       	ldi	r19, 0x00	; 0
    1f02:	02 c0       	rjmp	.+4      	; 0x1f08 <M_Dio_PinMode+0x1f0>
    1f04:	22 0f       	add	r18, r18
    1f06:	33 1f       	adc	r19, r19
    1f08:	4a 95       	dec	r20
    1f0a:	e2 f7       	brpl	.-8      	; 0x1f04 <M_Dio_PinMode+0x1ec>
    1f0c:	20 95       	com	r18
    1f0e:	26 23       	and	r18, r22
    1f10:	fc 01       	movw	r30, r24
    1f12:	20 83       	st	Z, r18
    1f14:	00 00       	nop
    1f16:	00 00       	nop
    1f18:	00 00       	nop
    1f1a:	0f 90       	pop	r0
    1f1c:	0f 90       	pop	r0
    1f1e:	0f 90       	pop	r0
    1f20:	0f 90       	pop	r0
    1f22:	df 91       	pop	r29
    1f24:	cf 91       	pop	r28
    1f26:	08 95       	ret

00001f28 <M_Dio_PinWrite>:
    1f28:	cf 93       	push	r28
    1f2a:	df 93       	push	r29
    1f2c:	00 d0       	rcall	.+0      	; 0x1f2e <M_Dio_PinWrite+0x6>
    1f2e:	00 d0       	rcall	.+0      	; 0x1f30 <M_Dio_PinWrite+0x8>
    1f30:	cd b7       	in	r28, 0x3d	; 61
    1f32:	de b7       	in	r29, 0x3e	; 62
    1f34:	8b 83       	std	Y+3, r24	; 0x03
    1f36:	6c 83       	std	Y+4, r22	; 0x04
    1f38:	9b 81       	ldd	r25, Y+3	; 0x03
    1f3a:	8d ec       	ldi	r24, 0xCD	; 205
    1f3c:	98 9f       	mul	r25, r24
    1f3e:	81 2d       	mov	r24, r1
    1f40:	11 24       	eor	r1, r1
    1f42:	86 95       	lsr	r24
    1f44:	86 95       	lsr	r24
    1f46:	86 95       	lsr	r24
    1f48:	88 0f       	add	r24, r24
    1f4a:	28 2f       	mov	r18, r24
    1f4c:	22 0f       	add	r18, r18
    1f4e:	22 0f       	add	r18, r18
    1f50:	82 0f       	add	r24, r18
    1f52:	29 2f       	mov	r18, r25
    1f54:	28 1b       	sub	r18, r24
    1f56:	82 2f       	mov	r24, r18
    1f58:	89 83       	std	Y+1, r24	; 0x01
    1f5a:	9b 81       	ldd	r25, Y+3	; 0x03
    1f5c:	8d ec       	ldi	r24, 0xCD	; 205
    1f5e:	98 9f       	mul	r25, r24
    1f60:	81 2d       	mov	r24, r1
    1f62:	11 24       	eor	r1, r1
    1f64:	86 95       	lsr	r24
    1f66:	86 95       	lsr	r24
    1f68:	86 95       	lsr	r24
    1f6a:	8a 83       	std	Y+2, r24	; 0x02
    1f6c:	8c 81       	ldd	r24, Y+4	; 0x04
    1f6e:	88 2f       	mov	r24, r24
    1f70:	90 e0       	ldi	r25, 0x00	; 0
    1f72:	81 30       	cpi	r24, 0x01	; 1
    1f74:	91 05       	cpc	r25, r1
    1f76:	21 f0       	breq	.+8      	; 0x1f80 <M_Dio_PinWrite+0x58>
    1f78:	02 97       	sbiw	r24, 0x02	; 2
    1f7a:	09 f4       	brne	.+2      	; 0x1f7e <M_Dio_PinWrite+0x56>
    1f7c:	69 c0       	rjmp	.+210    	; 0x2050 <M_Dio_PinWrite+0x128>
    1f7e:	d4 c0       	rjmp	.+424    	; 0x2128 <M_Dio_PinWrite+0x200>
    1f80:	8a 81       	ldd	r24, Y+2	; 0x02
    1f82:	88 2f       	mov	r24, r24
    1f84:	90 e0       	ldi	r25, 0x00	; 0
    1f86:	82 30       	cpi	r24, 0x02	; 2
    1f88:	91 05       	cpc	r25, r1
    1f8a:	11 f1       	breq	.+68     	; 0x1fd0 <M_Dio_PinWrite+0xa8>
    1f8c:	83 30       	cpi	r24, 0x03	; 3
    1f8e:	91 05       	cpc	r25, r1
    1f90:	1c f4       	brge	.+6      	; 0x1f98 <M_Dio_PinWrite+0x70>
    1f92:	01 97       	sbiw	r24, 0x01	; 1
    1f94:	41 f0       	breq	.+16     	; 0x1fa6 <M_Dio_PinWrite+0x7e>
    1f96:	5b c0       	rjmp	.+182    	; 0x204e <M_Dio_PinWrite+0x126>
    1f98:	83 30       	cpi	r24, 0x03	; 3
    1f9a:	91 05       	cpc	r25, r1
    1f9c:	71 f1       	breq	.+92     	; 0x1ffa <M_Dio_PinWrite+0xd2>
    1f9e:	04 97       	sbiw	r24, 0x04	; 4
    1fa0:	09 f4       	brne	.+2      	; 0x1fa4 <M_Dio_PinWrite+0x7c>
    1fa2:	40 c0       	rjmp	.+128    	; 0x2024 <M_Dio_PinWrite+0xfc>
    1fa4:	54 c0       	rjmp	.+168    	; 0x204e <M_Dio_PinWrite+0x126>
    1fa6:	8b e3       	ldi	r24, 0x3B	; 59
    1fa8:	90 e0       	ldi	r25, 0x00	; 0
    1faa:	2b e3       	ldi	r18, 0x3B	; 59
    1fac:	30 e0       	ldi	r19, 0x00	; 0
    1fae:	f9 01       	movw	r30, r18
    1fb0:	20 81       	ld	r18, Z
    1fb2:	62 2f       	mov	r22, r18
    1fb4:	29 81       	ldd	r18, Y+1	; 0x01
    1fb6:	42 2f       	mov	r20, r18
    1fb8:	50 e0       	ldi	r21, 0x00	; 0
    1fba:	21 e0       	ldi	r18, 0x01	; 1
    1fbc:	30 e0       	ldi	r19, 0x00	; 0
    1fbe:	02 c0       	rjmp	.+4      	; 0x1fc4 <M_Dio_PinWrite+0x9c>
    1fc0:	22 0f       	add	r18, r18
    1fc2:	33 1f       	adc	r19, r19
    1fc4:	4a 95       	dec	r20
    1fc6:	e2 f7       	brpl	.-8      	; 0x1fc0 <M_Dio_PinWrite+0x98>
    1fc8:	26 2b       	or	r18, r22
    1fca:	fc 01       	movw	r30, r24
    1fcc:	20 83       	st	Z, r18
    1fce:	3f c0       	rjmp	.+126    	; 0x204e <M_Dio_PinWrite+0x126>
    1fd0:	88 e3       	ldi	r24, 0x38	; 56
    1fd2:	90 e0       	ldi	r25, 0x00	; 0
    1fd4:	28 e3       	ldi	r18, 0x38	; 56
    1fd6:	30 e0       	ldi	r19, 0x00	; 0
    1fd8:	f9 01       	movw	r30, r18
    1fda:	20 81       	ld	r18, Z
    1fdc:	62 2f       	mov	r22, r18
    1fde:	29 81       	ldd	r18, Y+1	; 0x01
    1fe0:	42 2f       	mov	r20, r18
    1fe2:	50 e0       	ldi	r21, 0x00	; 0
    1fe4:	21 e0       	ldi	r18, 0x01	; 1
    1fe6:	30 e0       	ldi	r19, 0x00	; 0
    1fe8:	02 c0       	rjmp	.+4      	; 0x1fee <M_Dio_PinWrite+0xc6>
    1fea:	22 0f       	add	r18, r18
    1fec:	33 1f       	adc	r19, r19
    1fee:	4a 95       	dec	r20
    1ff0:	e2 f7       	brpl	.-8      	; 0x1fea <M_Dio_PinWrite+0xc2>
    1ff2:	26 2b       	or	r18, r22
    1ff4:	fc 01       	movw	r30, r24
    1ff6:	20 83       	st	Z, r18
    1ff8:	2a c0       	rjmp	.+84     	; 0x204e <M_Dio_PinWrite+0x126>
    1ffa:	85 e3       	ldi	r24, 0x35	; 53
    1ffc:	90 e0       	ldi	r25, 0x00	; 0
    1ffe:	25 e3       	ldi	r18, 0x35	; 53
    2000:	30 e0       	ldi	r19, 0x00	; 0
    2002:	f9 01       	movw	r30, r18
    2004:	20 81       	ld	r18, Z
    2006:	62 2f       	mov	r22, r18
    2008:	29 81       	ldd	r18, Y+1	; 0x01
    200a:	42 2f       	mov	r20, r18
    200c:	50 e0       	ldi	r21, 0x00	; 0
    200e:	21 e0       	ldi	r18, 0x01	; 1
    2010:	30 e0       	ldi	r19, 0x00	; 0
    2012:	02 c0       	rjmp	.+4      	; 0x2018 <M_Dio_PinWrite+0xf0>
    2014:	22 0f       	add	r18, r18
    2016:	33 1f       	adc	r19, r19
    2018:	4a 95       	dec	r20
    201a:	e2 f7       	brpl	.-8      	; 0x2014 <M_Dio_PinWrite+0xec>
    201c:	26 2b       	or	r18, r22
    201e:	fc 01       	movw	r30, r24
    2020:	20 83       	st	Z, r18
    2022:	15 c0       	rjmp	.+42     	; 0x204e <M_Dio_PinWrite+0x126>
    2024:	82 e3       	ldi	r24, 0x32	; 50
    2026:	90 e0       	ldi	r25, 0x00	; 0
    2028:	22 e3       	ldi	r18, 0x32	; 50
    202a:	30 e0       	ldi	r19, 0x00	; 0
    202c:	f9 01       	movw	r30, r18
    202e:	20 81       	ld	r18, Z
    2030:	62 2f       	mov	r22, r18
    2032:	29 81       	ldd	r18, Y+1	; 0x01
    2034:	42 2f       	mov	r20, r18
    2036:	50 e0       	ldi	r21, 0x00	; 0
    2038:	21 e0       	ldi	r18, 0x01	; 1
    203a:	30 e0       	ldi	r19, 0x00	; 0
    203c:	02 c0       	rjmp	.+4      	; 0x2042 <M_Dio_PinWrite+0x11a>
    203e:	22 0f       	add	r18, r18
    2040:	33 1f       	adc	r19, r19
    2042:	4a 95       	dec	r20
    2044:	e2 f7       	brpl	.-8      	; 0x203e <M_Dio_PinWrite+0x116>
    2046:	26 2b       	or	r18, r22
    2048:	fc 01       	movw	r30, r24
    204a:	20 83       	st	Z, r18
    204c:	00 00       	nop
    204e:	6c c0       	rjmp	.+216    	; 0x2128 <M_Dio_PinWrite+0x200>
    2050:	8a 81       	ldd	r24, Y+2	; 0x02
    2052:	88 2f       	mov	r24, r24
    2054:	90 e0       	ldi	r25, 0x00	; 0
    2056:	82 30       	cpi	r24, 0x02	; 2
    2058:	91 05       	cpc	r25, r1
    205a:	19 f1       	breq	.+70     	; 0x20a2 <M_Dio_PinWrite+0x17a>
    205c:	83 30       	cpi	r24, 0x03	; 3
    205e:	91 05       	cpc	r25, r1
    2060:	1c f4       	brge	.+6      	; 0x2068 <M_Dio_PinWrite+0x140>
    2062:	01 97       	sbiw	r24, 0x01	; 1
    2064:	41 f0       	breq	.+16     	; 0x2076 <M_Dio_PinWrite+0x14e>
    2066:	5f c0       	rjmp	.+190    	; 0x2126 <M_Dio_PinWrite+0x1fe>
    2068:	83 30       	cpi	r24, 0x03	; 3
    206a:	91 05       	cpc	r25, r1
    206c:	81 f1       	breq	.+96     	; 0x20ce <M_Dio_PinWrite+0x1a6>
    206e:	04 97       	sbiw	r24, 0x04	; 4
    2070:	09 f4       	brne	.+2      	; 0x2074 <M_Dio_PinWrite+0x14c>
    2072:	43 c0       	rjmp	.+134    	; 0x20fa <M_Dio_PinWrite+0x1d2>
    2074:	58 c0       	rjmp	.+176    	; 0x2126 <M_Dio_PinWrite+0x1fe>
    2076:	8b e3       	ldi	r24, 0x3B	; 59
    2078:	90 e0       	ldi	r25, 0x00	; 0
    207a:	2b e3       	ldi	r18, 0x3B	; 59
    207c:	30 e0       	ldi	r19, 0x00	; 0
    207e:	f9 01       	movw	r30, r18
    2080:	20 81       	ld	r18, Z
    2082:	62 2f       	mov	r22, r18
    2084:	29 81       	ldd	r18, Y+1	; 0x01
    2086:	42 2f       	mov	r20, r18
    2088:	50 e0       	ldi	r21, 0x00	; 0
    208a:	21 e0       	ldi	r18, 0x01	; 1
    208c:	30 e0       	ldi	r19, 0x00	; 0
    208e:	02 c0       	rjmp	.+4      	; 0x2094 <M_Dio_PinWrite+0x16c>
    2090:	22 0f       	add	r18, r18
    2092:	33 1f       	adc	r19, r19
    2094:	4a 95       	dec	r20
    2096:	e2 f7       	brpl	.-8      	; 0x2090 <M_Dio_PinWrite+0x168>
    2098:	20 95       	com	r18
    209a:	26 23       	and	r18, r22
    209c:	fc 01       	movw	r30, r24
    209e:	20 83       	st	Z, r18
    20a0:	42 c0       	rjmp	.+132    	; 0x2126 <M_Dio_PinWrite+0x1fe>
    20a2:	88 e3       	ldi	r24, 0x38	; 56
    20a4:	90 e0       	ldi	r25, 0x00	; 0
    20a6:	28 e3       	ldi	r18, 0x38	; 56
    20a8:	30 e0       	ldi	r19, 0x00	; 0
    20aa:	f9 01       	movw	r30, r18
    20ac:	20 81       	ld	r18, Z
    20ae:	62 2f       	mov	r22, r18
    20b0:	29 81       	ldd	r18, Y+1	; 0x01
    20b2:	42 2f       	mov	r20, r18
    20b4:	50 e0       	ldi	r21, 0x00	; 0
    20b6:	21 e0       	ldi	r18, 0x01	; 1
    20b8:	30 e0       	ldi	r19, 0x00	; 0
    20ba:	02 c0       	rjmp	.+4      	; 0x20c0 <M_Dio_PinWrite+0x198>
    20bc:	22 0f       	add	r18, r18
    20be:	33 1f       	adc	r19, r19
    20c0:	4a 95       	dec	r20
    20c2:	e2 f7       	brpl	.-8      	; 0x20bc <M_Dio_PinWrite+0x194>
    20c4:	20 95       	com	r18
    20c6:	26 23       	and	r18, r22
    20c8:	fc 01       	movw	r30, r24
    20ca:	20 83       	st	Z, r18
    20cc:	2c c0       	rjmp	.+88     	; 0x2126 <M_Dio_PinWrite+0x1fe>
    20ce:	85 e3       	ldi	r24, 0x35	; 53
    20d0:	90 e0       	ldi	r25, 0x00	; 0
    20d2:	25 e3       	ldi	r18, 0x35	; 53
    20d4:	30 e0       	ldi	r19, 0x00	; 0
    20d6:	f9 01       	movw	r30, r18
    20d8:	20 81       	ld	r18, Z
    20da:	62 2f       	mov	r22, r18
    20dc:	29 81       	ldd	r18, Y+1	; 0x01
    20de:	42 2f       	mov	r20, r18
    20e0:	50 e0       	ldi	r21, 0x00	; 0
    20e2:	21 e0       	ldi	r18, 0x01	; 1
    20e4:	30 e0       	ldi	r19, 0x00	; 0
    20e6:	02 c0       	rjmp	.+4      	; 0x20ec <M_Dio_PinWrite+0x1c4>
    20e8:	22 0f       	add	r18, r18
    20ea:	33 1f       	adc	r19, r19
    20ec:	4a 95       	dec	r20
    20ee:	e2 f7       	brpl	.-8      	; 0x20e8 <M_Dio_PinWrite+0x1c0>
    20f0:	20 95       	com	r18
    20f2:	26 23       	and	r18, r22
    20f4:	fc 01       	movw	r30, r24
    20f6:	20 83       	st	Z, r18
    20f8:	16 c0       	rjmp	.+44     	; 0x2126 <M_Dio_PinWrite+0x1fe>
    20fa:	82 e3       	ldi	r24, 0x32	; 50
    20fc:	90 e0       	ldi	r25, 0x00	; 0
    20fe:	22 e3       	ldi	r18, 0x32	; 50
    2100:	30 e0       	ldi	r19, 0x00	; 0
    2102:	f9 01       	movw	r30, r18
    2104:	20 81       	ld	r18, Z
    2106:	62 2f       	mov	r22, r18
    2108:	29 81       	ldd	r18, Y+1	; 0x01
    210a:	42 2f       	mov	r20, r18
    210c:	50 e0       	ldi	r21, 0x00	; 0
    210e:	21 e0       	ldi	r18, 0x01	; 1
    2110:	30 e0       	ldi	r19, 0x00	; 0
    2112:	02 c0       	rjmp	.+4      	; 0x2118 <M_Dio_PinWrite+0x1f0>
    2114:	22 0f       	add	r18, r18
    2116:	33 1f       	adc	r19, r19
    2118:	4a 95       	dec	r20
    211a:	e2 f7       	brpl	.-8      	; 0x2114 <M_Dio_PinWrite+0x1ec>
    211c:	20 95       	com	r18
    211e:	26 23       	and	r18, r22
    2120:	fc 01       	movw	r30, r24
    2122:	20 83       	st	Z, r18
    2124:	00 00       	nop
    2126:	00 00       	nop
    2128:	00 00       	nop
    212a:	0f 90       	pop	r0
    212c:	0f 90       	pop	r0
    212e:	0f 90       	pop	r0
    2130:	0f 90       	pop	r0
    2132:	df 91       	pop	r29
    2134:	cf 91       	pop	r28
    2136:	08 95       	ret

00002138 <M_Dio_PinRead>:

u8   M_Dio_PinRead(u8 Local_u8_Num)
{
    2138:	cf 93       	push	r28
    213a:	df 93       	push	r29
    213c:	00 d0       	rcall	.+0      	; 0x213e <M_Dio_PinRead+0x6>
    213e:	00 d0       	rcall	.+0      	; 0x2140 <M_Dio_PinRead+0x8>
    2140:	cd b7       	in	r28, 0x3d	; 61
    2142:	de b7       	in	r29, 0x3e	; 62
    2144:	8c 83       	std	Y+4, r24	; 0x04
	u8 Local_u8_Pin  = Local_u8_Num % 10;
    2146:	9c 81       	ldd	r25, Y+4	; 0x04
    2148:	8d ec       	ldi	r24, 0xCD	; 205
    214a:	98 9f       	mul	r25, r24
    214c:	81 2d       	mov	r24, r1
    214e:	11 24       	eor	r1, r1
    2150:	86 95       	lsr	r24
    2152:	86 95       	lsr	r24
    2154:	86 95       	lsr	r24
    2156:	88 0f       	add	r24, r24
    2158:	28 2f       	mov	r18, r24
    215a:	22 0f       	add	r18, r18
    215c:	22 0f       	add	r18, r18
    215e:	82 0f       	add	r24, r18
    2160:	29 2f       	mov	r18, r25
    2162:	28 1b       	sub	r18, r24
    2164:	82 2f       	mov	r24, r18
    2166:	8a 83       	std	Y+2, r24	; 0x02
	u8 Local_u8_Port = Local_u8_Num / 10;
    2168:	9c 81       	ldd	r25, Y+4	; 0x04
    216a:	8d ec       	ldi	r24, 0xCD	; 205
    216c:	98 9f       	mul	r25, r24
    216e:	81 2d       	mov	r24, r1
    2170:	11 24       	eor	r1, r1
    2172:	86 95       	lsr	r24
    2174:	86 95       	lsr	r24
    2176:	86 95       	lsr	r24
    2178:	8b 83       	std	Y+3, r24	; 0x03
	u8 Local_u8_PinReading = 0;
    217a:	19 82       	std	Y+1, r1	; 0x01
	switch(Local_u8_Port)
    217c:	8b 81       	ldd	r24, Y+3	; 0x03
    217e:	88 2f       	mov	r24, r24
    2180:	90 e0       	ldi	r25, 0x00	; 0
    2182:	82 30       	cpi	r24, 0x02	; 2
    2184:	91 05       	cpc	r25, r1
    2186:	e9 f0       	breq	.+58     	; 0x21c2 <M_Dio_PinRead+0x8a>
    2188:	83 30       	cpi	r24, 0x03	; 3
    218a:	91 05       	cpc	r25, r1
    218c:	1c f4       	brge	.+6      	; 0x2194 <M_Dio_PinRead+0x5c>
    218e:	01 97       	sbiw	r24, 0x01	; 1
    2190:	39 f0       	breq	.+14     	; 0x21a0 <M_Dio_PinRead+0x68>
	{ 
		case 1: Local_u8_PinReading = GetBit(_PINA,Local_u8_Pin); break;
		case 2: Local_u8_PinReading = GetBit(_PINB,Local_u8_Pin); break;
		case 3: Local_u8_PinReading = GetBit(_PINC,Local_u8_Pin); break;
		case 4: Local_u8_PinReading = GetBit(_PIND,Local_u8_Pin); break;
		default:                                                 break;
    2192:	4a c0       	rjmp	.+148    	; 0x2228 <M_Dio_PinRead+0xf0>
u8   M_Dio_PinRead(u8 Local_u8_Num)
{
	u8 Local_u8_Pin  = Local_u8_Num % 10;
	u8 Local_u8_Port = Local_u8_Num / 10;
	u8 Local_u8_PinReading = 0;
	switch(Local_u8_Port)
    2194:	83 30       	cpi	r24, 0x03	; 3
    2196:	91 05       	cpc	r25, r1
    2198:	29 f1       	breq	.+74     	; 0x21e4 <M_Dio_PinRead+0xac>
    219a:	04 97       	sbiw	r24, 0x04	; 4
    219c:	a1 f1       	breq	.+104    	; 0x2206 <M_Dio_PinRead+0xce>
	{ 
		case 1: Local_u8_PinReading = GetBit(_PINA,Local_u8_Pin); break;
		case 2: Local_u8_PinReading = GetBit(_PINB,Local_u8_Pin); break;
		case 3: Local_u8_PinReading = GetBit(_PINC,Local_u8_Pin); break;
		case 4: Local_u8_PinReading = GetBit(_PIND,Local_u8_Pin); break;
		default:                                                 break;
    219e:	44 c0       	rjmp	.+136    	; 0x2228 <M_Dio_PinRead+0xf0>
	u8 Local_u8_Pin  = Local_u8_Num % 10;
	u8 Local_u8_Port = Local_u8_Num / 10;
	u8 Local_u8_PinReading = 0;
	switch(Local_u8_Port)
	{ 
		case 1: Local_u8_PinReading = GetBit(_PINA,Local_u8_Pin); break;
    21a0:	89 e3       	ldi	r24, 0x39	; 57
    21a2:	90 e0       	ldi	r25, 0x00	; 0
    21a4:	fc 01       	movw	r30, r24
    21a6:	80 81       	ld	r24, Z
    21a8:	88 2f       	mov	r24, r24
    21aa:	90 e0       	ldi	r25, 0x00	; 0
    21ac:	2a 81       	ldd	r18, Y+2	; 0x02
    21ae:	22 2f       	mov	r18, r18
    21b0:	30 e0       	ldi	r19, 0x00	; 0
    21b2:	02 c0       	rjmp	.+4      	; 0x21b8 <M_Dio_PinRead+0x80>
    21b4:	95 95       	asr	r25
    21b6:	87 95       	ror	r24
    21b8:	2a 95       	dec	r18
    21ba:	e2 f7       	brpl	.-8      	; 0x21b4 <M_Dio_PinRead+0x7c>
    21bc:	81 70       	andi	r24, 0x01	; 1
    21be:	89 83       	std	Y+1, r24	; 0x01
    21c0:	33 c0       	rjmp	.+102    	; 0x2228 <M_Dio_PinRead+0xf0>
		case 2: Local_u8_PinReading = GetBit(_PINB,Local_u8_Pin); break;
    21c2:	86 e3       	ldi	r24, 0x36	; 54
    21c4:	90 e0       	ldi	r25, 0x00	; 0
    21c6:	fc 01       	movw	r30, r24
    21c8:	80 81       	ld	r24, Z
    21ca:	88 2f       	mov	r24, r24
    21cc:	90 e0       	ldi	r25, 0x00	; 0
    21ce:	2a 81       	ldd	r18, Y+2	; 0x02
    21d0:	22 2f       	mov	r18, r18
    21d2:	30 e0       	ldi	r19, 0x00	; 0
    21d4:	02 c0       	rjmp	.+4      	; 0x21da <M_Dio_PinRead+0xa2>
    21d6:	95 95       	asr	r25
    21d8:	87 95       	ror	r24
    21da:	2a 95       	dec	r18
    21dc:	e2 f7       	brpl	.-8      	; 0x21d6 <M_Dio_PinRead+0x9e>
    21de:	81 70       	andi	r24, 0x01	; 1
    21e0:	89 83       	std	Y+1, r24	; 0x01
    21e2:	22 c0       	rjmp	.+68     	; 0x2228 <M_Dio_PinRead+0xf0>
		case 3: Local_u8_PinReading = GetBit(_PINC,Local_u8_Pin); break;
    21e4:	83 e3       	ldi	r24, 0x33	; 51
    21e6:	90 e0       	ldi	r25, 0x00	; 0
    21e8:	fc 01       	movw	r30, r24
    21ea:	80 81       	ld	r24, Z
    21ec:	88 2f       	mov	r24, r24
    21ee:	90 e0       	ldi	r25, 0x00	; 0
    21f0:	2a 81       	ldd	r18, Y+2	; 0x02
    21f2:	22 2f       	mov	r18, r18
    21f4:	30 e0       	ldi	r19, 0x00	; 0
    21f6:	02 c0       	rjmp	.+4      	; 0x21fc <M_Dio_PinRead+0xc4>
    21f8:	95 95       	asr	r25
    21fa:	87 95       	ror	r24
    21fc:	2a 95       	dec	r18
    21fe:	e2 f7       	brpl	.-8      	; 0x21f8 <M_Dio_PinRead+0xc0>
    2200:	81 70       	andi	r24, 0x01	; 1
    2202:	89 83       	std	Y+1, r24	; 0x01
    2204:	11 c0       	rjmp	.+34     	; 0x2228 <M_Dio_PinRead+0xf0>
		case 4: Local_u8_PinReading = GetBit(_PIND,Local_u8_Pin); break;
    2206:	80 e3       	ldi	r24, 0x30	; 48
    2208:	90 e0       	ldi	r25, 0x00	; 0
    220a:	fc 01       	movw	r30, r24
    220c:	80 81       	ld	r24, Z
    220e:	88 2f       	mov	r24, r24
    2210:	90 e0       	ldi	r25, 0x00	; 0
    2212:	2a 81       	ldd	r18, Y+2	; 0x02
    2214:	22 2f       	mov	r18, r18
    2216:	30 e0       	ldi	r19, 0x00	; 0
    2218:	02 c0       	rjmp	.+4      	; 0x221e <M_Dio_PinRead+0xe6>
    221a:	95 95       	asr	r25
    221c:	87 95       	ror	r24
    221e:	2a 95       	dec	r18
    2220:	e2 f7       	brpl	.-8      	; 0x221a <M_Dio_PinRead+0xe2>
    2222:	81 70       	andi	r24, 0x01	; 1
    2224:	89 83       	std	Y+1, r24	; 0x01
    2226:	00 00       	nop
		default:                                                 break;
		
	}
	return Local_u8_PinReading;
    2228:	89 81       	ldd	r24, Y+1	; 0x01
}
    222a:	0f 90       	pop	r0
    222c:	0f 90       	pop	r0
    222e:	0f 90       	pop	r0
    2230:	0f 90       	pop	r0
    2232:	df 91       	pop	r29
    2234:	cf 91       	pop	r28
    2236:	08 95       	ret

00002238 <M_Dio_PinPullUpRes>:

 void M_Dio_PinPullUpRes(u8 Local_u8_Num,u8 Local_u8_Mode)
{
    2238:	cf 93       	push	r28
    223a:	df 93       	push	r29
    223c:	00 d0       	rcall	.+0      	; 0x223e <M_Dio_PinPullUpRes+0x6>
    223e:	00 d0       	rcall	.+0      	; 0x2240 <M_Dio_PinPullUpRes+0x8>
    2240:	cd b7       	in	r28, 0x3d	; 61
    2242:	de b7       	in	r29, 0x3e	; 62
    2244:	8b 83       	std	Y+3, r24	; 0x03
    2246:	6c 83       	std	Y+4, r22	; 0x04
	u8 Local_u8_Pin  = Local_u8_Num % 10;
    2248:	9b 81       	ldd	r25, Y+3	; 0x03
    224a:	8d ec       	ldi	r24, 0xCD	; 205
    224c:	98 9f       	mul	r25, r24
    224e:	81 2d       	mov	r24, r1
    2250:	11 24       	eor	r1, r1
    2252:	86 95       	lsr	r24
    2254:	86 95       	lsr	r24
    2256:	86 95       	lsr	r24
    2258:	88 0f       	add	r24, r24
    225a:	28 2f       	mov	r18, r24
    225c:	22 0f       	add	r18, r18
    225e:	22 0f       	add	r18, r18
    2260:	82 0f       	add	r24, r18
    2262:	29 2f       	mov	r18, r25
    2264:	28 1b       	sub	r18, r24
    2266:	82 2f       	mov	r24, r18
    2268:	89 83       	std	Y+1, r24	; 0x01
	u8 Local_u8_Port = Local_u8_Num / 10;
    226a:	9b 81       	ldd	r25, Y+3	; 0x03
    226c:	8d ec       	ldi	r24, 0xCD	; 205
    226e:	98 9f       	mul	r25, r24
    2270:	81 2d       	mov	r24, r1
    2272:	11 24       	eor	r1, r1
    2274:	86 95       	lsr	r24
    2276:	86 95       	lsr	r24
    2278:	86 95       	lsr	r24
    227a:	8a 83       	std	Y+2, r24	; 0x02
	switch(Local_u8_Mode)
    227c:	8c 81       	ldd	r24, Y+4	; 0x04
    227e:	88 2f       	mov	r24, r24
    2280:	90 e0       	ldi	r25, 0x00	; 0
    2282:	81 30       	cpi	r24, 0x01	; 1
    2284:	91 05       	cpc	r25, r1
    2286:	21 f0       	breq	.+8      	; 0x2290 <M_Dio_PinPullUpRes+0x58>
    2288:	02 97       	sbiw	r24, 0x02	; 2
    228a:	09 f4       	brne	.+2      	; 0x228e <M_Dio_PinPullUpRes+0x56>
    228c:	69 c0       	rjmp	.+210    	; 0x2360 <M_Dio_PinPullUpRes+0x128>
			case 4: ClrBit(_PORTD,Local_u8_Pin); break;
			default:                            break;
		}
		break;
		default:
		break;
    228e:	d4 c0       	rjmp	.+424    	; 0x2438 <M_Dio_PinPullUpRes+0x200>
	u8 Local_u8_Pin  = Local_u8_Num % 10;
	u8 Local_u8_Port = Local_u8_Num / 10;
	switch(Local_u8_Mode)
	{
		case ENABLE:
		switch(Local_u8_Port)
    2290:	8a 81       	ldd	r24, Y+2	; 0x02
    2292:	88 2f       	mov	r24, r24
    2294:	90 e0       	ldi	r25, 0x00	; 0
    2296:	82 30       	cpi	r24, 0x02	; 2
    2298:	91 05       	cpc	r25, r1
    229a:	11 f1       	breq	.+68     	; 0x22e0 <M_Dio_PinPullUpRes+0xa8>
    229c:	83 30       	cpi	r24, 0x03	; 3
    229e:	91 05       	cpc	r25, r1
    22a0:	1c f4       	brge	.+6      	; 0x22a8 <M_Dio_PinPullUpRes+0x70>
    22a2:	01 97       	sbiw	r24, 0x01	; 1
    22a4:	41 f0       	breq	.+16     	; 0x22b6 <M_Dio_PinPullUpRes+0x7e>
		{
			case 1: SetBit(_PORTA,Local_u8_Pin); break;
			case 2: SetBit(_PORTB,Local_u8_Pin); break;
			case 3: SetBit(_PORTC,Local_u8_Pin); break;
			case 4: SetBit(_PORTD,Local_u8_Pin); break;
			default:                            break;
    22a6:	5b c0       	rjmp	.+182    	; 0x235e <M_Dio_PinPullUpRes+0x126>
	u8 Local_u8_Pin  = Local_u8_Num % 10;
	u8 Local_u8_Port = Local_u8_Num / 10;
	switch(Local_u8_Mode)
	{
		case ENABLE:
		switch(Local_u8_Port)
    22a8:	83 30       	cpi	r24, 0x03	; 3
    22aa:	91 05       	cpc	r25, r1
    22ac:	71 f1       	breq	.+92     	; 0x230a <M_Dio_PinPullUpRes+0xd2>
    22ae:	04 97       	sbiw	r24, 0x04	; 4
    22b0:	09 f4       	brne	.+2      	; 0x22b4 <M_Dio_PinPullUpRes+0x7c>
    22b2:	40 c0       	rjmp	.+128    	; 0x2334 <M_Dio_PinPullUpRes+0xfc>
		{
			case 1: SetBit(_PORTA,Local_u8_Pin); break;
			case 2: SetBit(_PORTB,Local_u8_Pin); break;
			case 3: SetBit(_PORTC,Local_u8_Pin); break;
			case 4: SetBit(_PORTD,Local_u8_Pin); break;
			default:                            break;
    22b4:	54 c0       	rjmp	.+168    	; 0x235e <M_Dio_PinPullUpRes+0x126>
	switch(Local_u8_Mode)
	{
		case ENABLE:
		switch(Local_u8_Port)
		{
			case 1: SetBit(_PORTA,Local_u8_Pin); break;
    22b6:	8b e3       	ldi	r24, 0x3B	; 59
    22b8:	90 e0       	ldi	r25, 0x00	; 0
    22ba:	2b e3       	ldi	r18, 0x3B	; 59
    22bc:	30 e0       	ldi	r19, 0x00	; 0
    22be:	f9 01       	movw	r30, r18
    22c0:	20 81       	ld	r18, Z
    22c2:	62 2f       	mov	r22, r18
    22c4:	29 81       	ldd	r18, Y+1	; 0x01
    22c6:	42 2f       	mov	r20, r18
    22c8:	50 e0       	ldi	r21, 0x00	; 0
    22ca:	21 e0       	ldi	r18, 0x01	; 1
    22cc:	30 e0       	ldi	r19, 0x00	; 0
    22ce:	02 c0       	rjmp	.+4      	; 0x22d4 <M_Dio_PinPullUpRes+0x9c>
    22d0:	22 0f       	add	r18, r18
    22d2:	33 1f       	adc	r19, r19
    22d4:	4a 95       	dec	r20
    22d6:	e2 f7       	brpl	.-8      	; 0x22d0 <M_Dio_PinPullUpRes+0x98>
    22d8:	26 2b       	or	r18, r22
    22da:	fc 01       	movw	r30, r24
    22dc:	20 83       	st	Z, r18
    22de:	3f c0       	rjmp	.+126    	; 0x235e <M_Dio_PinPullUpRes+0x126>
			case 2: SetBit(_PORTB,Local_u8_Pin); break;
    22e0:	88 e3       	ldi	r24, 0x38	; 56
    22e2:	90 e0       	ldi	r25, 0x00	; 0
    22e4:	28 e3       	ldi	r18, 0x38	; 56
    22e6:	30 e0       	ldi	r19, 0x00	; 0
    22e8:	f9 01       	movw	r30, r18
    22ea:	20 81       	ld	r18, Z
    22ec:	62 2f       	mov	r22, r18
    22ee:	29 81       	ldd	r18, Y+1	; 0x01
    22f0:	42 2f       	mov	r20, r18
    22f2:	50 e0       	ldi	r21, 0x00	; 0
    22f4:	21 e0       	ldi	r18, 0x01	; 1
    22f6:	30 e0       	ldi	r19, 0x00	; 0
    22f8:	02 c0       	rjmp	.+4      	; 0x22fe <M_Dio_PinPullUpRes+0xc6>
    22fa:	22 0f       	add	r18, r18
    22fc:	33 1f       	adc	r19, r19
    22fe:	4a 95       	dec	r20
    2300:	e2 f7       	brpl	.-8      	; 0x22fa <M_Dio_PinPullUpRes+0xc2>
    2302:	26 2b       	or	r18, r22
    2304:	fc 01       	movw	r30, r24
    2306:	20 83       	st	Z, r18
    2308:	2a c0       	rjmp	.+84     	; 0x235e <M_Dio_PinPullUpRes+0x126>
			case 3: SetBit(_PORTC,Local_u8_Pin); break;
    230a:	85 e3       	ldi	r24, 0x35	; 53
    230c:	90 e0       	ldi	r25, 0x00	; 0
    230e:	25 e3       	ldi	r18, 0x35	; 53
    2310:	30 e0       	ldi	r19, 0x00	; 0
    2312:	f9 01       	movw	r30, r18
    2314:	20 81       	ld	r18, Z
    2316:	62 2f       	mov	r22, r18
    2318:	29 81       	ldd	r18, Y+1	; 0x01
    231a:	42 2f       	mov	r20, r18
    231c:	50 e0       	ldi	r21, 0x00	; 0
    231e:	21 e0       	ldi	r18, 0x01	; 1
    2320:	30 e0       	ldi	r19, 0x00	; 0
    2322:	02 c0       	rjmp	.+4      	; 0x2328 <M_Dio_PinPullUpRes+0xf0>
    2324:	22 0f       	add	r18, r18
    2326:	33 1f       	adc	r19, r19
    2328:	4a 95       	dec	r20
    232a:	e2 f7       	brpl	.-8      	; 0x2324 <M_Dio_PinPullUpRes+0xec>
    232c:	26 2b       	or	r18, r22
    232e:	fc 01       	movw	r30, r24
    2330:	20 83       	st	Z, r18
    2332:	15 c0       	rjmp	.+42     	; 0x235e <M_Dio_PinPullUpRes+0x126>
			case 4: SetBit(_PORTD,Local_u8_Pin); break;
    2334:	82 e3       	ldi	r24, 0x32	; 50
    2336:	90 e0       	ldi	r25, 0x00	; 0
    2338:	22 e3       	ldi	r18, 0x32	; 50
    233a:	30 e0       	ldi	r19, 0x00	; 0
    233c:	f9 01       	movw	r30, r18
    233e:	20 81       	ld	r18, Z
    2340:	62 2f       	mov	r22, r18
    2342:	29 81       	ldd	r18, Y+1	; 0x01
    2344:	42 2f       	mov	r20, r18
    2346:	50 e0       	ldi	r21, 0x00	; 0
    2348:	21 e0       	ldi	r18, 0x01	; 1
    234a:	30 e0       	ldi	r19, 0x00	; 0
    234c:	02 c0       	rjmp	.+4      	; 0x2352 <M_Dio_PinPullUpRes+0x11a>
    234e:	22 0f       	add	r18, r18
    2350:	33 1f       	adc	r19, r19
    2352:	4a 95       	dec	r20
    2354:	e2 f7       	brpl	.-8      	; 0x234e <M_Dio_PinPullUpRes+0x116>
    2356:	26 2b       	or	r18, r22
    2358:	fc 01       	movw	r30, r24
    235a:	20 83       	st	Z, r18
    235c:	00 00       	nop
			default:                            break;
		}
		break;
    235e:	6c c0       	rjmp	.+216    	; 0x2438 <M_Dio_PinPullUpRes+0x200>
		case DISABLE:
		switch(Local_u8_Port)
    2360:	8a 81       	ldd	r24, Y+2	; 0x02
    2362:	88 2f       	mov	r24, r24
    2364:	90 e0       	ldi	r25, 0x00	; 0
    2366:	82 30       	cpi	r24, 0x02	; 2
    2368:	91 05       	cpc	r25, r1
    236a:	19 f1       	breq	.+70     	; 0x23b2 <M_Dio_PinPullUpRes+0x17a>
    236c:	83 30       	cpi	r24, 0x03	; 3
    236e:	91 05       	cpc	r25, r1
    2370:	1c f4       	brge	.+6      	; 0x2378 <M_Dio_PinPullUpRes+0x140>
    2372:	01 97       	sbiw	r24, 0x01	; 1
    2374:	41 f0       	breq	.+16     	; 0x2386 <M_Dio_PinPullUpRes+0x14e>
		{
			case 1: ClrBit(_PORTA,Local_u8_Pin); break;
			case 2: ClrBit(_PORTB,Local_u8_Pin); break;
			case 3: ClrBit(_PORTC,Local_u8_Pin); break;
			case 4: ClrBit(_PORTD,Local_u8_Pin); break;
			default:                            break;
    2376:	5f c0       	rjmp	.+190    	; 0x2436 <M_Dio_PinPullUpRes+0x1fe>
			case 4: SetBit(_PORTD,Local_u8_Pin); break;
			default:                            break;
		}
		break;
		case DISABLE:
		switch(Local_u8_Port)
    2378:	83 30       	cpi	r24, 0x03	; 3
    237a:	91 05       	cpc	r25, r1
    237c:	81 f1       	breq	.+96     	; 0x23de <M_Dio_PinPullUpRes+0x1a6>
    237e:	04 97       	sbiw	r24, 0x04	; 4
    2380:	09 f4       	brne	.+2      	; 0x2384 <M_Dio_PinPullUpRes+0x14c>
    2382:	43 c0       	rjmp	.+134    	; 0x240a <M_Dio_PinPullUpRes+0x1d2>
		{
			case 1: ClrBit(_PORTA,Local_u8_Pin); break;
			case 2: ClrBit(_PORTB,Local_u8_Pin); break;
			case 3: ClrBit(_PORTC,Local_u8_Pin); break;
			case 4: ClrBit(_PORTD,Local_u8_Pin); break;
			default:                            break;
    2384:	58 c0       	rjmp	.+176    	; 0x2436 <M_Dio_PinPullUpRes+0x1fe>
		}
		break;
		case DISABLE:
		switch(Local_u8_Port)
		{
			case 1: ClrBit(_PORTA,Local_u8_Pin); break;
    2386:	8b e3       	ldi	r24, 0x3B	; 59
    2388:	90 e0       	ldi	r25, 0x00	; 0
    238a:	2b e3       	ldi	r18, 0x3B	; 59
    238c:	30 e0       	ldi	r19, 0x00	; 0
    238e:	f9 01       	movw	r30, r18
    2390:	20 81       	ld	r18, Z
    2392:	62 2f       	mov	r22, r18
    2394:	29 81       	ldd	r18, Y+1	; 0x01
    2396:	42 2f       	mov	r20, r18
    2398:	50 e0       	ldi	r21, 0x00	; 0
    239a:	21 e0       	ldi	r18, 0x01	; 1
    239c:	30 e0       	ldi	r19, 0x00	; 0
    239e:	02 c0       	rjmp	.+4      	; 0x23a4 <M_Dio_PinPullUpRes+0x16c>
    23a0:	22 0f       	add	r18, r18
    23a2:	33 1f       	adc	r19, r19
    23a4:	4a 95       	dec	r20
    23a6:	e2 f7       	brpl	.-8      	; 0x23a0 <M_Dio_PinPullUpRes+0x168>
    23a8:	20 95       	com	r18
    23aa:	26 23       	and	r18, r22
    23ac:	fc 01       	movw	r30, r24
    23ae:	20 83       	st	Z, r18
    23b0:	42 c0       	rjmp	.+132    	; 0x2436 <M_Dio_PinPullUpRes+0x1fe>
			case 2: ClrBit(_PORTB,Local_u8_Pin); break;
    23b2:	88 e3       	ldi	r24, 0x38	; 56
    23b4:	90 e0       	ldi	r25, 0x00	; 0
    23b6:	28 e3       	ldi	r18, 0x38	; 56
    23b8:	30 e0       	ldi	r19, 0x00	; 0
    23ba:	f9 01       	movw	r30, r18
    23bc:	20 81       	ld	r18, Z
    23be:	62 2f       	mov	r22, r18
    23c0:	29 81       	ldd	r18, Y+1	; 0x01
    23c2:	42 2f       	mov	r20, r18
    23c4:	50 e0       	ldi	r21, 0x00	; 0
    23c6:	21 e0       	ldi	r18, 0x01	; 1
    23c8:	30 e0       	ldi	r19, 0x00	; 0
    23ca:	02 c0       	rjmp	.+4      	; 0x23d0 <M_Dio_PinPullUpRes+0x198>
    23cc:	22 0f       	add	r18, r18
    23ce:	33 1f       	adc	r19, r19
    23d0:	4a 95       	dec	r20
    23d2:	e2 f7       	brpl	.-8      	; 0x23cc <M_Dio_PinPullUpRes+0x194>
    23d4:	20 95       	com	r18
    23d6:	26 23       	and	r18, r22
    23d8:	fc 01       	movw	r30, r24
    23da:	20 83       	st	Z, r18
    23dc:	2c c0       	rjmp	.+88     	; 0x2436 <M_Dio_PinPullUpRes+0x1fe>
			case 3: ClrBit(_PORTC,Local_u8_Pin); break;
    23de:	85 e3       	ldi	r24, 0x35	; 53
    23e0:	90 e0       	ldi	r25, 0x00	; 0
    23e2:	25 e3       	ldi	r18, 0x35	; 53
    23e4:	30 e0       	ldi	r19, 0x00	; 0
    23e6:	f9 01       	movw	r30, r18
    23e8:	20 81       	ld	r18, Z
    23ea:	62 2f       	mov	r22, r18
    23ec:	29 81       	ldd	r18, Y+1	; 0x01
    23ee:	42 2f       	mov	r20, r18
    23f0:	50 e0       	ldi	r21, 0x00	; 0
    23f2:	21 e0       	ldi	r18, 0x01	; 1
    23f4:	30 e0       	ldi	r19, 0x00	; 0
    23f6:	02 c0       	rjmp	.+4      	; 0x23fc <M_Dio_PinPullUpRes+0x1c4>
    23f8:	22 0f       	add	r18, r18
    23fa:	33 1f       	adc	r19, r19
    23fc:	4a 95       	dec	r20
    23fe:	e2 f7       	brpl	.-8      	; 0x23f8 <M_Dio_PinPullUpRes+0x1c0>
    2400:	20 95       	com	r18
    2402:	26 23       	and	r18, r22
    2404:	fc 01       	movw	r30, r24
    2406:	20 83       	st	Z, r18
    2408:	16 c0       	rjmp	.+44     	; 0x2436 <M_Dio_PinPullUpRes+0x1fe>
			case 4: ClrBit(_PORTD,Local_u8_Pin); break;
    240a:	82 e3       	ldi	r24, 0x32	; 50
    240c:	90 e0       	ldi	r25, 0x00	; 0
    240e:	22 e3       	ldi	r18, 0x32	; 50
    2410:	30 e0       	ldi	r19, 0x00	; 0
    2412:	f9 01       	movw	r30, r18
    2414:	20 81       	ld	r18, Z
    2416:	62 2f       	mov	r22, r18
    2418:	29 81       	ldd	r18, Y+1	; 0x01
    241a:	42 2f       	mov	r20, r18
    241c:	50 e0       	ldi	r21, 0x00	; 0
    241e:	21 e0       	ldi	r18, 0x01	; 1
    2420:	30 e0       	ldi	r19, 0x00	; 0
    2422:	02 c0       	rjmp	.+4      	; 0x2428 <M_Dio_PinPullUpRes+0x1f0>
    2424:	22 0f       	add	r18, r18
    2426:	33 1f       	adc	r19, r19
    2428:	4a 95       	dec	r20
    242a:	e2 f7       	brpl	.-8      	; 0x2424 <M_Dio_PinPullUpRes+0x1ec>
    242c:	20 95       	com	r18
    242e:	26 23       	and	r18, r22
    2430:	fc 01       	movw	r30, r24
    2432:	20 83       	st	Z, r18
    2434:	00 00       	nop
			default:                            break;
		}
		break;
    2436:	00 00       	nop
		default:
		break;
	}
}
    2438:	00 00       	nop
    243a:	0f 90       	pop	r0
    243c:	0f 90       	pop	r0
    243e:	0f 90       	pop	r0
    2440:	0f 90       	pop	r0
    2442:	df 91       	pop	r29
    2444:	cf 91       	pop	r28
    2446:	08 95       	ret

00002448 <__cmpsf2>:
    2448:	0e 94 0e 13 	call	0x261c	; 0x261c <__fp_cmp>
    244c:	08 f4       	brcc	.+2      	; 0x2450 <__cmpsf2+0x8>
    244e:	81 e0       	ldi	r24, 0x01	; 1
    2450:	08 95       	ret

00002452 <__divsf3>:
    2452:	0e 94 3d 12 	call	0x247a	; 0x247a <__divsf3x>
    2456:	0c 94 59 13 	jmp	0x26b2	; 0x26b2 <__fp_round>
    245a:	0e 94 52 13 	call	0x26a4	; 0x26a4 <__fp_pscB>
    245e:	58 f0       	brcs	.+22     	; 0x2476 <__divsf3+0x24>
    2460:	0e 94 4b 13 	call	0x2696	; 0x2696 <__fp_pscA>
    2464:	40 f0       	brcs	.+16     	; 0x2476 <__divsf3+0x24>
    2466:	29 f4       	brne	.+10     	; 0x2472 <__divsf3+0x20>
    2468:	5f 3f       	cpi	r21, 0xFF	; 255
    246a:	29 f0       	breq	.+10     	; 0x2476 <__divsf3+0x24>
    246c:	0c 94 32 13 	jmp	0x2664	; 0x2664 <__fp_inf>
    2470:	51 11       	cpse	r21, r1
    2472:	0c 94 8d 13 	jmp	0x271a	; 0x271a <__fp_szero>
    2476:	0c 94 38 13 	jmp	0x2670	; 0x2670 <__fp_nan>

0000247a <__divsf3x>:
    247a:	0e 94 6a 13 	call	0x26d4	; 0x26d4 <__fp_split3>
    247e:	68 f3       	brcs	.-38     	; 0x245a <__divsf3+0x8>

00002480 <__divsf3_pse>:
    2480:	99 23       	and	r25, r25
    2482:	b1 f3       	breq	.-20     	; 0x2470 <__divsf3+0x1e>
    2484:	55 23       	and	r21, r21
    2486:	91 f3       	breq	.-28     	; 0x246c <__divsf3+0x1a>
    2488:	95 1b       	sub	r25, r21
    248a:	55 0b       	sbc	r21, r21
    248c:	bb 27       	eor	r27, r27
    248e:	aa 27       	eor	r26, r26
    2490:	62 17       	cp	r22, r18
    2492:	73 07       	cpc	r23, r19
    2494:	84 07       	cpc	r24, r20
    2496:	38 f0       	brcs	.+14     	; 0x24a6 <__divsf3_pse+0x26>
    2498:	9f 5f       	subi	r25, 0xFF	; 255
    249a:	5f 4f       	sbci	r21, 0xFF	; 255
    249c:	22 0f       	add	r18, r18
    249e:	33 1f       	adc	r19, r19
    24a0:	44 1f       	adc	r20, r20
    24a2:	aa 1f       	adc	r26, r26
    24a4:	a9 f3       	breq	.-22     	; 0x2490 <__divsf3_pse+0x10>
    24a6:	35 d0       	rcall	.+106    	; 0x2512 <__divsf3_pse+0x92>
    24a8:	0e 2e       	mov	r0, r30
    24aa:	3a f0       	brmi	.+14     	; 0x24ba <__divsf3_pse+0x3a>
    24ac:	e0 e8       	ldi	r30, 0x80	; 128
    24ae:	32 d0       	rcall	.+100    	; 0x2514 <__divsf3_pse+0x94>
    24b0:	91 50       	subi	r25, 0x01	; 1
    24b2:	50 40       	sbci	r21, 0x00	; 0
    24b4:	e6 95       	lsr	r30
    24b6:	00 1c       	adc	r0, r0
    24b8:	ca f7       	brpl	.-14     	; 0x24ac <__divsf3_pse+0x2c>
    24ba:	2b d0       	rcall	.+86     	; 0x2512 <__divsf3_pse+0x92>
    24bc:	fe 2f       	mov	r31, r30
    24be:	29 d0       	rcall	.+82     	; 0x2512 <__divsf3_pse+0x92>
    24c0:	66 0f       	add	r22, r22
    24c2:	77 1f       	adc	r23, r23
    24c4:	88 1f       	adc	r24, r24
    24c6:	bb 1f       	adc	r27, r27
    24c8:	26 17       	cp	r18, r22
    24ca:	37 07       	cpc	r19, r23
    24cc:	48 07       	cpc	r20, r24
    24ce:	ab 07       	cpc	r26, r27
    24d0:	b0 e8       	ldi	r27, 0x80	; 128
    24d2:	09 f0       	breq	.+2      	; 0x24d6 <__divsf3_pse+0x56>
    24d4:	bb 0b       	sbc	r27, r27
    24d6:	80 2d       	mov	r24, r0
    24d8:	bf 01       	movw	r22, r30
    24da:	ff 27       	eor	r31, r31
    24dc:	93 58       	subi	r25, 0x83	; 131
    24de:	5f 4f       	sbci	r21, 0xFF	; 255
    24e0:	3a f0       	brmi	.+14     	; 0x24f0 <__divsf3_pse+0x70>
    24e2:	9e 3f       	cpi	r25, 0xFE	; 254
    24e4:	51 05       	cpc	r21, r1
    24e6:	78 f0       	brcs	.+30     	; 0x2506 <__divsf3_pse+0x86>
    24e8:	0c 94 32 13 	jmp	0x2664	; 0x2664 <__fp_inf>
    24ec:	0c 94 8d 13 	jmp	0x271a	; 0x271a <__fp_szero>
    24f0:	5f 3f       	cpi	r21, 0xFF	; 255
    24f2:	e4 f3       	brlt	.-8      	; 0x24ec <__divsf3_pse+0x6c>
    24f4:	98 3e       	cpi	r25, 0xE8	; 232
    24f6:	d4 f3       	brlt	.-12     	; 0x24ec <__divsf3_pse+0x6c>
    24f8:	86 95       	lsr	r24
    24fa:	77 95       	ror	r23
    24fc:	67 95       	ror	r22
    24fe:	b7 95       	ror	r27
    2500:	f7 95       	ror	r31
    2502:	9f 5f       	subi	r25, 0xFF	; 255
    2504:	c9 f7       	brne	.-14     	; 0x24f8 <__divsf3_pse+0x78>
    2506:	88 0f       	add	r24, r24
    2508:	91 1d       	adc	r25, r1
    250a:	96 95       	lsr	r25
    250c:	87 95       	ror	r24
    250e:	97 f9       	bld	r25, 7
    2510:	08 95       	ret
    2512:	e1 e0       	ldi	r30, 0x01	; 1
    2514:	66 0f       	add	r22, r22
    2516:	77 1f       	adc	r23, r23
    2518:	88 1f       	adc	r24, r24
    251a:	bb 1f       	adc	r27, r27
    251c:	62 17       	cp	r22, r18
    251e:	73 07       	cpc	r23, r19
    2520:	84 07       	cpc	r24, r20
    2522:	ba 07       	cpc	r27, r26
    2524:	20 f0       	brcs	.+8      	; 0x252e <__divsf3_pse+0xae>
    2526:	62 1b       	sub	r22, r18
    2528:	73 0b       	sbc	r23, r19
    252a:	84 0b       	sbc	r24, r20
    252c:	ba 0b       	sbc	r27, r26
    252e:	ee 1f       	adc	r30, r30
    2530:	88 f7       	brcc	.-30     	; 0x2514 <__divsf3_pse+0x94>
    2532:	e0 95       	com	r30
    2534:	08 95       	ret

00002536 <__fixunssfsi>:
    2536:	0e 94 72 13 	call	0x26e4	; 0x26e4 <__fp_splitA>
    253a:	88 f0       	brcs	.+34     	; 0x255e <__fixunssfsi+0x28>
    253c:	9f 57       	subi	r25, 0x7F	; 127
    253e:	98 f0       	brcs	.+38     	; 0x2566 <__fixunssfsi+0x30>
    2540:	b9 2f       	mov	r27, r25
    2542:	99 27       	eor	r25, r25
    2544:	b7 51       	subi	r27, 0x17	; 23
    2546:	b0 f0       	brcs	.+44     	; 0x2574 <__fixunssfsi+0x3e>
    2548:	e1 f0       	breq	.+56     	; 0x2582 <__fixunssfsi+0x4c>
    254a:	66 0f       	add	r22, r22
    254c:	77 1f       	adc	r23, r23
    254e:	88 1f       	adc	r24, r24
    2550:	99 1f       	adc	r25, r25
    2552:	1a f0       	brmi	.+6      	; 0x255a <__fixunssfsi+0x24>
    2554:	ba 95       	dec	r27
    2556:	c9 f7       	brne	.-14     	; 0x254a <__fixunssfsi+0x14>
    2558:	14 c0       	rjmp	.+40     	; 0x2582 <__fixunssfsi+0x4c>
    255a:	b1 30       	cpi	r27, 0x01	; 1
    255c:	91 f0       	breq	.+36     	; 0x2582 <__fixunssfsi+0x4c>
    255e:	0e 94 8c 13 	call	0x2718	; 0x2718 <__fp_zero>
    2562:	b1 e0       	ldi	r27, 0x01	; 1
    2564:	08 95       	ret
    2566:	0c 94 8c 13 	jmp	0x2718	; 0x2718 <__fp_zero>
    256a:	67 2f       	mov	r22, r23
    256c:	78 2f       	mov	r23, r24
    256e:	88 27       	eor	r24, r24
    2570:	b8 5f       	subi	r27, 0xF8	; 248
    2572:	39 f0       	breq	.+14     	; 0x2582 <__fixunssfsi+0x4c>
    2574:	b9 3f       	cpi	r27, 0xF9	; 249
    2576:	cc f3       	brlt	.-14     	; 0x256a <__fixunssfsi+0x34>
    2578:	86 95       	lsr	r24
    257a:	77 95       	ror	r23
    257c:	67 95       	ror	r22
    257e:	b3 95       	inc	r27
    2580:	d9 f7       	brne	.-10     	; 0x2578 <__fixunssfsi+0x42>
    2582:	3e f4       	brtc	.+14     	; 0x2592 <__fixunssfsi+0x5c>
    2584:	90 95       	com	r25
    2586:	80 95       	com	r24
    2588:	70 95       	com	r23
    258a:	61 95       	neg	r22
    258c:	7f 4f       	sbci	r23, 0xFF	; 255
    258e:	8f 4f       	sbci	r24, 0xFF	; 255
    2590:	9f 4f       	sbci	r25, 0xFF	; 255
    2592:	08 95       	ret

00002594 <__floatdisf>:
    2594:	97 fb       	bst	r25, 7
    2596:	16 f4       	brtc	.+4      	; 0x259c <__floatdisf+0x8>
    2598:	0e 94 3b 13 	call	0x2676	; 0x2676 <__fp_negdi>
    259c:	0c 94 d1 12 	jmp	0x25a2	; 0x25a2 <__fp_di2sf>

000025a0 <__floatundisf>:
    25a0:	e8 94       	clt

000025a2 <__fp_di2sf>:
    25a2:	f9 2f       	mov	r31, r25
    25a4:	96 eb       	ldi	r25, 0xB6	; 182
    25a6:	ff 23       	and	r31, r31
    25a8:	81 f0       	breq	.+32     	; 0x25ca <__fp_di2sf+0x28>
    25aa:	12 16       	cp	r1, r18
    25ac:	13 06       	cpc	r1, r19
    25ae:	14 06       	cpc	r1, r20
    25b0:	44 0b       	sbc	r20, r20
    25b2:	93 95       	inc	r25
    25b4:	f6 95       	lsr	r31
    25b6:	87 95       	ror	r24
    25b8:	77 95       	ror	r23
    25ba:	67 95       	ror	r22
    25bc:	57 95       	ror	r21
    25be:	40 40       	sbci	r20, 0x00	; 0
    25c0:	ff 23       	and	r31, r31
    25c2:	b9 f7       	brne	.-18     	; 0x25b2 <__fp_di2sf+0x10>
    25c4:	1b c0       	rjmp	.+54     	; 0x25fc <__fp_di2sf+0x5a>
    25c6:	99 27       	eor	r25, r25
    25c8:	08 95       	ret
    25ca:	88 23       	and	r24, r24
    25cc:	51 f4       	brne	.+20     	; 0x25e2 <__fp_di2sf+0x40>
    25ce:	98 50       	subi	r25, 0x08	; 8
    25d0:	d2 f7       	brpl	.-12     	; 0x25c6 <__fp_di2sf+0x24>
    25d2:	87 2b       	or	r24, r23
    25d4:	76 2f       	mov	r23, r22
    25d6:	65 2f       	mov	r22, r21
    25d8:	54 2f       	mov	r21, r20
    25da:	43 2f       	mov	r20, r19
    25dc:	32 2f       	mov	r19, r18
    25de:	20 e0       	ldi	r18, 0x00	; 0
    25e0:	b1 f3       	breq	.-20     	; 0x25ce <__fp_di2sf+0x2c>
    25e2:	12 16       	cp	r1, r18
    25e4:	13 06       	cpc	r1, r19
    25e6:	14 06       	cpc	r1, r20
    25e8:	44 0b       	sbc	r20, r20
    25ea:	88 23       	and	r24, r24
    25ec:	3a f0       	brmi	.+14     	; 0x25fc <__fp_di2sf+0x5a>
    25ee:	9a 95       	dec	r25
    25f0:	44 0f       	add	r20, r20
    25f2:	55 1f       	adc	r21, r21
    25f4:	66 1f       	adc	r22, r22
    25f6:	77 1f       	adc	r23, r23
    25f8:	88 1f       	adc	r24, r24
    25fa:	ca f7       	brpl	.-14     	; 0x25ee <__fp_di2sf+0x4c>
    25fc:	55 23       	and	r21, r21
    25fe:	4a f4       	brpl	.+18     	; 0x2612 <__fp_di2sf+0x70>
    2600:	44 0f       	add	r20, r20
    2602:	55 1f       	adc	r21, r21
    2604:	11 f4       	brne	.+4      	; 0x260a <__fp_di2sf+0x68>
    2606:	60 ff       	sbrs	r22, 0
    2608:	04 c0       	rjmp	.+8      	; 0x2612 <__fp_di2sf+0x70>
    260a:	6f 5f       	subi	r22, 0xFF	; 255
    260c:	7f 4f       	sbci	r23, 0xFF	; 255
    260e:	8f 4f       	sbci	r24, 0xFF	; 255
    2610:	9f 4f       	sbci	r25, 0xFF	; 255
    2612:	88 0f       	add	r24, r24
    2614:	96 95       	lsr	r25
    2616:	87 95       	ror	r24
    2618:	97 f9       	bld	r25, 7
    261a:	08 95       	ret

0000261c <__fp_cmp>:
    261c:	99 0f       	add	r25, r25
    261e:	00 08       	sbc	r0, r0
    2620:	55 0f       	add	r21, r21
    2622:	aa 0b       	sbc	r26, r26
    2624:	e0 e8       	ldi	r30, 0x80	; 128
    2626:	fe ef       	ldi	r31, 0xFE	; 254
    2628:	16 16       	cp	r1, r22
    262a:	17 06       	cpc	r1, r23
    262c:	e8 07       	cpc	r30, r24
    262e:	f9 07       	cpc	r31, r25
    2630:	c0 f0       	brcs	.+48     	; 0x2662 <__fp_cmp+0x46>
    2632:	12 16       	cp	r1, r18
    2634:	13 06       	cpc	r1, r19
    2636:	e4 07       	cpc	r30, r20
    2638:	f5 07       	cpc	r31, r21
    263a:	98 f0       	brcs	.+38     	; 0x2662 <__fp_cmp+0x46>
    263c:	62 1b       	sub	r22, r18
    263e:	73 0b       	sbc	r23, r19
    2640:	84 0b       	sbc	r24, r20
    2642:	95 0b       	sbc	r25, r21
    2644:	39 f4       	brne	.+14     	; 0x2654 <__fp_cmp+0x38>
    2646:	0a 26       	eor	r0, r26
    2648:	61 f0       	breq	.+24     	; 0x2662 <__fp_cmp+0x46>
    264a:	23 2b       	or	r18, r19
    264c:	24 2b       	or	r18, r20
    264e:	25 2b       	or	r18, r21
    2650:	21 f4       	brne	.+8      	; 0x265a <__fp_cmp+0x3e>
    2652:	08 95       	ret
    2654:	0a 26       	eor	r0, r26
    2656:	09 f4       	brne	.+2      	; 0x265a <__fp_cmp+0x3e>
    2658:	a1 40       	sbci	r26, 0x01	; 1
    265a:	a6 95       	lsr	r26
    265c:	8f ef       	ldi	r24, 0xFF	; 255
    265e:	81 1d       	adc	r24, r1
    2660:	81 1d       	adc	r24, r1
    2662:	08 95       	ret

00002664 <__fp_inf>:
    2664:	97 f9       	bld	r25, 7
    2666:	9f 67       	ori	r25, 0x7F	; 127
    2668:	80 e8       	ldi	r24, 0x80	; 128
    266a:	70 e0       	ldi	r23, 0x00	; 0
    266c:	60 e0       	ldi	r22, 0x00	; 0
    266e:	08 95       	ret

00002670 <__fp_nan>:
    2670:	9f ef       	ldi	r25, 0xFF	; 255
    2672:	80 ec       	ldi	r24, 0xC0	; 192
    2674:	08 95       	ret

00002676 <__fp_negdi>:
    2676:	90 95       	com	r25
    2678:	80 95       	com	r24
    267a:	70 95       	com	r23
    267c:	60 95       	com	r22
    267e:	50 95       	com	r21
    2680:	40 95       	com	r20
    2682:	30 95       	com	r19
    2684:	21 95       	neg	r18
    2686:	3f 4f       	sbci	r19, 0xFF	; 255
    2688:	4f 4f       	sbci	r20, 0xFF	; 255
    268a:	5f 4f       	sbci	r21, 0xFF	; 255
    268c:	6f 4f       	sbci	r22, 0xFF	; 255
    268e:	7f 4f       	sbci	r23, 0xFF	; 255
    2690:	8f 4f       	sbci	r24, 0xFF	; 255
    2692:	9f 4f       	sbci	r25, 0xFF	; 255
    2694:	08 95       	ret

00002696 <__fp_pscA>:
    2696:	00 24       	eor	r0, r0
    2698:	0a 94       	dec	r0
    269a:	16 16       	cp	r1, r22
    269c:	17 06       	cpc	r1, r23
    269e:	18 06       	cpc	r1, r24
    26a0:	09 06       	cpc	r0, r25
    26a2:	08 95       	ret

000026a4 <__fp_pscB>:
    26a4:	00 24       	eor	r0, r0
    26a6:	0a 94       	dec	r0
    26a8:	12 16       	cp	r1, r18
    26aa:	13 06       	cpc	r1, r19
    26ac:	14 06       	cpc	r1, r20
    26ae:	05 06       	cpc	r0, r21
    26b0:	08 95       	ret

000026b2 <__fp_round>:
    26b2:	09 2e       	mov	r0, r25
    26b4:	03 94       	inc	r0
    26b6:	00 0c       	add	r0, r0
    26b8:	11 f4       	brne	.+4      	; 0x26be <__fp_round+0xc>
    26ba:	88 23       	and	r24, r24
    26bc:	52 f0       	brmi	.+20     	; 0x26d2 <__fp_round+0x20>
    26be:	bb 0f       	add	r27, r27
    26c0:	40 f4       	brcc	.+16     	; 0x26d2 <__fp_round+0x20>
    26c2:	bf 2b       	or	r27, r31
    26c4:	11 f4       	brne	.+4      	; 0x26ca <__fp_round+0x18>
    26c6:	60 ff       	sbrs	r22, 0
    26c8:	04 c0       	rjmp	.+8      	; 0x26d2 <__fp_round+0x20>
    26ca:	6f 5f       	subi	r22, 0xFF	; 255
    26cc:	7f 4f       	sbci	r23, 0xFF	; 255
    26ce:	8f 4f       	sbci	r24, 0xFF	; 255
    26d0:	9f 4f       	sbci	r25, 0xFF	; 255
    26d2:	08 95       	ret

000026d4 <__fp_split3>:
    26d4:	57 fd       	sbrc	r21, 7
    26d6:	90 58       	subi	r25, 0x80	; 128
    26d8:	44 0f       	add	r20, r20
    26da:	55 1f       	adc	r21, r21
    26dc:	59 f0       	breq	.+22     	; 0x26f4 <__fp_splitA+0x10>
    26de:	5f 3f       	cpi	r21, 0xFF	; 255
    26e0:	71 f0       	breq	.+28     	; 0x26fe <__fp_splitA+0x1a>
    26e2:	47 95       	ror	r20

000026e4 <__fp_splitA>:
    26e4:	88 0f       	add	r24, r24
    26e6:	97 fb       	bst	r25, 7
    26e8:	99 1f       	adc	r25, r25
    26ea:	61 f0       	breq	.+24     	; 0x2704 <__fp_splitA+0x20>
    26ec:	9f 3f       	cpi	r25, 0xFF	; 255
    26ee:	79 f0       	breq	.+30     	; 0x270e <__fp_splitA+0x2a>
    26f0:	87 95       	ror	r24
    26f2:	08 95       	ret
    26f4:	12 16       	cp	r1, r18
    26f6:	13 06       	cpc	r1, r19
    26f8:	14 06       	cpc	r1, r20
    26fa:	55 1f       	adc	r21, r21
    26fc:	f2 cf       	rjmp	.-28     	; 0x26e2 <__fp_split3+0xe>
    26fe:	46 95       	lsr	r20
    2700:	f1 df       	rcall	.-30     	; 0x26e4 <__fp_splitA>
    2702:	08 c0       	rjmp	.+16     	; 0x2714 <__fp_splitA+0x30>
    2704:	16 16       	cp	r1, r22
    2706:	17 06       	cpc	r1, r23
    2708:	18 06       	cpc	r1, r24
    270a:	99 1f       	adc	r25, r25
    270c:	f1 cf       	rjmp	.-30     	; 0x26f0 <__fp_splitA+0xc>
    270e:	86 95       	lsr	r24
    2710:	71 05       	cpc	r23, r1
    2712:	61 05       	cpc	r22, r1
    2714:	08 94       	sec
    2716:	08 95       	ret

00002718 <__fp_zero>:
    2718:	e8 94       	clt

0000271a <__fp_szero>:
    271a:	bb 27       	eor	r27, r27
    271c:	66 27       	eor	r22, r22
    271e:	77 27       	eor	r23, r23
    2720:	cb 01       	movw	r24, r22
    2722:	97 f9       	bld	r25, 7
    2724:	08 95       	ret

00002726 <__gesf2>:
    2726:	0e 94 0e 13 	call	0x261c	; 0x261c <__fp_cmp>
    272a:	08 f4       	brcc	.+2      	; 0x272e <__gesf2+0x8>
    272c:	8f ef       	ldi	r24, 0xFF	; 255
    272e:	08 95       	ret

00002730 <__mulsf3>:
    2730:	0e 94 ab 13 	call	0x2756	; 0x2756 <__mulsf3x>
    2734:	0c 94 59 13 	jmp	0x26b2	; 0x26b2 <__fp_round>
    2738:	0e 94 4b 13 	call	0x2696	; 0x2696 <__fp_pscA>
    273c:	38 f0       	brcs	.+14     	; 0x274c <__mulsf3+0x1c>
    273e:	0e 94 52 13 	call	0x26a4	; 0x26a4 <__fp_pscB>
    2742:	20 f0       	brcs	.+8      	; 0x274c <__mulsf3+0x1c>
    2744:	95 23       	and	r25, r21
    2746:	11 f0       	breq	.+4      	; 0x274c <__mulsf3+0x1c>
    2748:	0c 94 32 13 	jmp	0x2664	; 0x2664 <__fp_inf>
    274c:	0c 94 38 13 	jmp	0x2670	; 0x2670 <__fp_nan>
    2750:	11 24       	eor	r1, r1
    2752:	0c 94 8d 13 	jmp	0x271a	; 0x271a <__fp_szero>

00002756 <__mulsf3x>:
    2756:	0e 94 6a 13 	call	0x26d4	; 0x26d4 <__fp_split3>
    275a:	70 f3       	brcs	.-36     	; 0x2738 <__mulsf3+0x8>

0000275c <__mulsf3_pse>:
    275c:	95 9f       	mul	r25, r21
    275e:	c1 f3       	breq	.-16     	; 0x2750 <__mulsf3+0x20>
    2760:	95 0f       	add	r25, r21
    2762:	50 e0       	ldi	r21, 0x00	; 0
    2764:	55 1f       	adc	r21, r21
    2766:	62 9f       	mul	r22, r18
    2768:	f0 01       	movw	r30, r0
    276a:	72 9f       	mul	r23, r18
    276c:	bb 27       	eor	r27, r27
    276e:	f0 0d       	add	r31, r0
    2770:	b1 1d       	adc	r27, r1
    2772:	63 9f       	mul	r22, r19
    2774:	aa 27       	eor	r26, r26
    2776:	f0 0d       	add	r31, r0
    2778:	b1 1d       	adc	r27, r1
    277a:	aa 1f       	adc	r26, r26
    277c:	64 9f       	mul	r22, r20
    277e:	66 27       	eor	r22, r22
    2780:	b0 0d       	add	r27, r0
    2782:	a1 1d       	adc	r26, r1
    2784:	66 1f       	adc	r22, r22
    2786:	82 9f       	mul	r24, r18
    2788:	22 27       	eor	r18, r18
    278a:	b0 0d       	add	r27, r0
    278c:	a1 1d       	adc	r26, r1
    278e:	62 1f       	adc	r22, r18
    2790:	73 9f       	mul	r23, r19
    2792:	b0 0d       	add	r27, r0
    2794:	a1 1d       	adc	r26, r1
    2796:	62 1f       	adc	r22, r18
    2798:	83 9f       	mul	r24, r19
    279a:	a0 0d       	add	r26, r0
    279c:	61 1d       	adc	r22, r1
    279e:	22 1f       	adc	r18, r18
    27a0:	74 9f       	mul	r23, r20
    27a2:	33 27       	eor	r19, r19
    27a4:	a0 0d       	add	r26, r0
    27a6:	61 1d       	adc	r22, r1
    27a8:	23 1f       	adc	r18, r19
    27aa:	84 9f       	mul	r24, r20
    27ac:	60 0d       	add	r22, r0
    27ae:	21 1d       	adc	r18, r1
    27b0:	82 2f       	mov	r24, r18
    27b2:	76 2f       	mov	r23, r22
    27b4:	6a 2f       	mov	r22, r26
    27b6:	11 24       	eor	r1, r1
    27b8:	9f 57       	subi	r25, 0x7F	; 127
    27ba:	50 40       	sbci	r21, 0x00	; 0
    27bc:	9a f0       	brmi	.+38     	; 0x27e4 <__mulsf3_pse+0x88>
    27be:	f1 f0       	breq	.+60     	; 0x27fc <__mulsf3_pse+0xa0>
    27c0:	88 23       	and	r24, r24
    27c2:	4a f0       	brmi	.+18     	; 0x27d6 <__mulsf3_pse+0x7a>
    27c4:	ee 0f       	add	r30, r30
    27c6:	ff 1f       	adc	r31, r31
    27c8:	bb 1f       	adc	r27, r27
    27ca:	66 1f       	adc	r22, r22
    27cc:	77 1f       	adc	r23, r23
    27ce:	88 1f       	adc	r24, r24
    27d0:	91 50       	subi	r25, 0x01	; 1
    27d2:	50 40       	sbci	r21, 0x00	; 0
    27d4:	a9 f7       	brne	.-22     	; 0x27c0 <__mulsf3_pse+0x64>
    27d6:	9e 3f       	cpi	r25, 0xFE	; 254
    27d8:	51 05       	cpc	r21, r1
    27da:	80 f0       	brcs	.+32     	; 0x27fc <__mulsf3_pse+0xa0>
    27dc:	0c 94 32 13 	jmp	0x2664	; 0x2664 <__fp_inf>
    27e0:	0c 94 8d 13 	jmp	0x271a	; 0x271a <__fp_szero>
    27e4:	5f 3f       	cpi	r21, 0xFF	; 255
    27e6:	e4 f3       	brlt	.-8      	; 0x27e0 <__mulsf3_pse+0x84>
    27e8:	98 3e       	cpi	r25, 0xE8	; 232
    27ea:	d4 f3       	brlt	.-12     	; 0x27e0 <__mulsf3_pse+0x84>
    27ec:	86 95       	lsr	r24
    27ee:	77 95       	ror	r23
    27f0:	67 95       	ror	r22
    27f2:	b7 95       	ror	r27
    27f4:	f7 95       	ror	r31
    27f6:	e7 95       	ror	r30
    27f8:	9f 5f       	subi	r25, 0xFF	; 255
    27fa:	c1 f7       	brne	.-16     	; 0x27ec <__mulsf3_pse+0x90>
    27fc:	fe 2b       	or	r31, r30
    27fe:	88 0f       	add	r24, r24
    2800:	91 1d       	adc	r25, r1
    2802:	96 95       	lsr	r25
    2804:	87 95       	ror	r24
    2806:	97 f9       	bld	r25, 7
    2808:	08 95       	ret

0000280a <vfprintf>:
    280a:	a0 e1       	ldi	r26, 0x10	; 16
    280c:	b0 e0       	ldi	r27, 0x00	; 0
    280e:	eb e0       	ldi	r30, 0x0B	; 11
    2810:	f4 e1       	ldi	r31, 0x14	; 20
    2812:	0c 94 7b 18 	jmp	0x30f6	; 0x30f6 <__prologue_saves__>
    2816:	7c 01       	movw	r14, r24
    2818:	1b 01       	movw	r2, r22
    281a:	6a 01       	movw	r12, r20
    281c:	fc 01       	movw	r30, r24
    281e:	17 82       	std	Z+7, r1	; 0x07
    2820:	16 82       	std	Z+6, r1	; 0x06
    2822:	83 81       	ldd	r24, Z+3	; 0x03
    2824:	81 ff       	sbrs	r24, 1
    2826:	44 c3       	rjmp	.+1672   	; 0x2eb0 <vfprintf+0x6a6>
    2828:	9e 01       	movw	r18, r28
    282a:	2f 5f       	subi	r18, 0xFF	; 255
    282c:	3f 4f       	sbci	r19, 0xFF	; 255
    282e:	39 01       	movw	r6, r18
    2830:	f7 01       	movw	r30, r14
    2832:	93 81       	ldd	r25, Z+3	; 0x03
    2834:	f1 01       	movw	r30, r2
    2836:	93 fd       	sbrc	r25, 3
    2838:	85 91       	lpm	r24, Z+
    283a:	93 ff       	sbrs	r25, 3
    283c:	81 91       	ld	r24, Z+
    283e:	1f 01       	movw	r2, r30
    2840:	88 23       	and	r24, r24
    2842:	09 f4       	brne	.+2      	; 0x2846 <vfprintf+0x3c>
    2844:	31 c3       	rjmp	.+1634   	; 0x2ea8 <vfprintf+0x69e>
    2846:	85 32       	cpi	r24, 0x25	; 37
    2848:	39 f4       	brne	.+14     	; 0x2858 <vfprintf+0x4e>
    284a:	93 fd       	sbrc	r25, 3
    284c:	85 91       	lpm	r24, Z+
    284e:	93 ff       	sbrs	r25, 3
    2850:	81 91       	ld	r24, Z+
    2852:	1f 01       	movw	r2, r30
    2854:	85 32       	cpi	r24, 0x25	; 37
    2856:	39 f4       	brne	.+14     	; 0x2866 <vfprintf+0x5c>
    2858:	b7 01       	movw	r22, r14
    285a:	90 e0       	ldi	r25, 0x00	; 0
    285c:	0e 94 01 1a 	call	0x3402	; 0x3402 <fputc>
    2860:	56 01       	movw	r10, r12
    2862:	65 01       	movw	r12, r10
    2864:	e5 cf       	rjmp	.-54     	; 0x2830 <vfprintf+0x26>
    2866:	10 e0       	ldi	r17, 0x00	; 0
    2868:	51 2c       	mov	r5, r1
    286a:	91 2c       	mov	r9, r1
    286c:	ff e1       	ldi	r31, 0x1F	; 31
    286e:	f9 15       	cp	r31, r9
    2870:	d8 f0       	brcs	.+54     	; 0x28a8 <vfprintf+0x9e>
    2872:	8b 32       	cpi	r24, 0x2B	; 43
    2874:	79 f0       	breq	.+30     	; 0x2894 <vfprintf+0x8a>
    2876:	38 f4       	brcc	.+14     	; 0x2886 <vfprintf+0x7c>
    2878:	80 32       	cpi	r24, 0x20	; 32
    287a:	79 f0       	breq	.+30     	; 0x289a <vfprintf+0x90>
    287c:	83 32       	cpi	r24, 0x23	; 35
    287e:	a1 f4       	brne	.+40     	; 0x28a8 <vfprintf+0x9e>
    2880:	f9 2d       	mov	r31, r9
    2882:	f0 61       	ori	r31, 0x10	; 16
    2884:	2e c0       	rjmp	.+92     	; 0x28e2 <vfprintf+0xd8>
    2886:	8d 32       	cpi	r24, 0x2D	; 45
    2888:	61 f0       	breq	.+24     	; 0x28a2 <vfprintf+0x98>
    288a:	80 33       	cpi	r24, 0x30	; 48
    288c:	69 f4       	brne	.+26     	; 0x28a8 <vfprintf+0x9e>
    288e:	29 2d       	mov	r18, r9
    2890:	21 60       	ori	r18, 0x01	; 1
    2892:	2d c0       	rjmp	.+90     	; 0x28ee <vfprintf+0xe4>
    2894:	39 2d       	mov	r19, r9
    2896:	32 60       	ori	r19, 0x02	; 2
    2898:	93 2e       	mov	r9, r19
    289a:	89 2d       	mov	r24, r9
    289c:	84 60       	ori	r24, 0x04	; 4
    289e:	98 2e       	mov	r9, r24
    28a0:	2a c0       	rjmp	.+84     	; 0x28f6 <vfprintf+0xec>
    28a2:	e9 2d       	mov	r30, r9
    28a4:	e8 60       	ori	r30, 0x08	; 8
    28a6:	15 c0       	rjmp	.+42     	; 0x28d2 <vfprintf+0xc8>
    28a8:	97 fc       	sbrc	r9, 7
    28aa:	2d c0       	rjmp	.+90     	; 0x2906 <vfprintf+0xfc>
    28ac:	20 ed       	ldi	r18, 0xD0	; 208
    28ae:	28 0f       	add	r18, r24
    28b0:	2a 30       	cpi	r18, 0x0A	; 10
    28b2:	88 f4       	brcc	.+34     	; 0x28d6 <vfprintf+0xcc>
    28b4:	96 fe       	sbrs	r9, 6
    28b6:	06 c0       	rjmp	.+12     	; 0x28c4 <vfprintf+0xba>
    28b8:	3a e0       	ldi	r19, 0x0A	; 10
    28ba:	13 9f       	mul	r17, r19
    28bc:	20 0d       	add	r18, r0
    28be:	11 24       	eor	r1, r1
    28c0:	12 2f       	mov	r17, r18
    28c2:	19 c0       	rjmp	.+50     	; 0x28f6 <vfprintf+0xec>
    28c4:	8a e0       	ldi	r24, 0x0A	; 10
    28c6:	58 9e       	mul	r5, r24
    28c8:	20 0d       	add	r18, r0
    28ca:	11 24       	eor	r1, r1
    28cc:	52 2e       	mov	r5, r18
    28ce:	e9 2d       	mov	r30, r9
    28d0:	e0 62       	ori	r30, 0x20	; 32
    28d2:	9e 2e       	mov	r9, r30
    28d4:	10 c0       	rjmp	.+32     	; 0x28f6 <vfprintf+0xec>
    28d6:	8e 32       	cpi	r24, 0x2E	; 46
    28d8:	31 f4       	brne	.+12     	; 0x28e6 <vfprintf+0xdc>
    28da:	96 fc       	sbrc	r9, 6
    28dc:	e5 c2       	rjmp	.+1482   	; 0x2ea8 <vfprintf+0x69e>
    28de:	f9 2d       	mov	r31, r9
    28e0:	f0 64       	ori	r31, 0x40	; 64
    28e2:	9f 2e       	mov	r9, r31
    28e4:	08 c0       	rjmp	.+16     	; 0x28f6 <vfprintf+0xec>
    28e6:	8c 36       	cpi	r24, 0x6C	; 108
    28e8:	21 f4       	brne	.+8      	; 0x28f2 <vfprintf+0xe8>
    28ea:	29 2d       	mov	r18, r9
    28ec:	20 68       	ori	r18, 0x80	; 128
    28ee:	92 2e       	mov	r9, r18
    28f0:	02 c0       	rjmp	.+4      	; 0x28f6 <vfprintf+0xec>
    28f2:	88 36       	cpi	r24, 0x68	; 104
    28f4:	41 f4       	brne	.+16     	; 0x2906 <vfprintf+0xfc>
    28f6:	f1 01       	movw	r30, r2
    28f8:	93 fd       	sbrc	r25, 3
    28fa:	85 91       	lpm	r24, Z+
    28fc:	93 ff       	sbrs	r25, 3
    28fe:	81 91       	ld	r24, Z+
    2900:	1f 01       	movw	r2, r30
    2902:	81 11       	cpse	r24, r1
    2904:	b3 cf       	rjmp	.-154    	; 0x286c <vfprintf+0x62>
    2906:	9b eb       	ldi	r25, 0xBB	; 187
    2908:	98 0f       	add	r25, r24
    290a:	93 30       	cpi	r25, 0x03	; 3
    290c:	20 f4       	brcc	.+8      	; 0x2916 <vfprintf+0x10c>
    290e:	99 2d       	mov	r25, r9
    2910:	90 61       	ori	r25, 0x10	; 16
    2912:	80 5e       	subi	r24, 0xE0	; 224
    2914:	07 c0       	rjmp	.+14     	; 0x2924 <vfprintf+0x11a>
    2916:	9b e9       	ldi	r25, 0x9B	; 155
    2918:	98 0f       	add	r25, r24
    291a:	93 30       	cpi	r25, 0x03	; 3
    291c:	08 f0       	brcs	.+2      	; 0x2920 <vfprintf+0x116>
    291e:	66 c1       	rjmp	.+716    	; 0x2bec <vfprintf+0x3e2>
    2920:	99 2d       	mov	r25, r9
    2922:	9f 7e       	andi	r25, 0xEF	; 239
    2924:	96 ff       	sbrs	r25, 6
    2926:	16 e0       	ldi	r17, 0x06	; 6
    2928:	9f 73       	andi	r25, 0x3F	; 63
    292a:	99 2e       	mov	r9, r25
    292c:	85 36       	cpi	r24, 0x65	; 101
    292e:	19 f4       	brne	.+6      	; 0x2936 <vfprintf+0x12c>
    2930:	90 64       	ori	r25, 0x40	; 64
    2932:	99 2e       	mov	r9, r25
    2934:	08 c0       	rjmp	.+16     	; 0x2946 <vfprintf+0x13c>
    2936:	86 36       	cpi	r24, 0x66	; 102
    2938:	21 f4       	brne	.+8      	; 0x2942 <vfprintf+0x138>
    293a:	39 2f       	mov	r19, r25
    293c:	30 68       	ori	r19, 0x80	; 128
    293e:	93 2e       	mov	r9, r19
    2940:	02 c0       	rjmp	.+4      	; 0x2946 <vfprintf+0x13c>
    2942:	11 11       	cpse	r17, r1
    2944:	11 50       	subi	r17, 0x01	; 1
    2946:	97 fe       	sbrs	r9, 7
    2948:	07 c0       	rjmp	.+14     	; 0x2958 <vfprintf+0x14e>
    294a:	1c 33       	cpi	r17, 0x3C	; 60
    294c:	50 f4       	brcc	.+20     	; 0x2962 <vfprintf+0x158>
    294e:	44 24       	eor	r4, r4
    2950:	43 94       	inc	r4
    2952:	41 0e       	add	r4, r17
    2954:	27 e0       	ldi	r18, 0x07	; 7
    2956:	0b c0       	rjmp	.+22     	; 0x296e <vfprintf+0x164>
    2958:	18 30       	cpi	r17, 0x08	; 8
    295a:	38 f0       	brcs	.+14     	; 0x296a <vfprintf+0x160>
    295c:	27 e0       	ldi	r18, 0x07	; 7
    295e:	17 e0       	ldi	r17, 0x07	; 7
    2960:	05 c0       	rjmp	.+10     	; 0x296c <vfprintf+0x162>
    2962:	27 e0       	ldi	r18, 0x07	; 7
    2964:	9c e3       	ldi	r25, 0x3C	; 60
    2966:	49 2e       	mov	r4, r25
    2968:	02 c0       	rjmp	.+4      	; 0x296e <vfprintf+0x164>
    296a:	21 2f       	mov	r18, r17
    296c:	41 2c       	mov	r4, r1
    296e:	56 01       	movw	r10, r12
    2970:	84 e0       	ldi	r24, 0x04	; 4
    2972:	a8 0e       	add	r10, r24
    2974:	b1 1c       	adc	r11, r1
    2976:	f6 01       	movw	r30, r12
    2978:	60 81       	ld	r22, Z
    297a:	71 81       	ldd	r23, Z+1	; 0x01
    297c:	82 81       	ldd	r24, Z+2	; 0x02
    297e:	93 81       	ldd	r25, Z+3	; 0x03
    2980:	04 2d       	mov	r16, r4
    2982:	a3 01       	movw	r20, r6
    2984:	0e 94 e8 18 	call	0x31d0	; 0x31d0 <__ftoa_engine>
    2988:	6c 01       	movw	r12, r24
    298a:	f9 81       	ldd	r31, Y+1	; 0x01
    298c:	fc 87       	std	Y+12, r31	; 0x0c
    298e:	f0 ff       	sbrs	r31, 0
    2990:	02 c0       	rjmp	.+4      	; 0x2996 <vfprintf+0x18c>
    2992:	f3 ff       	sbrs	r31, 3
    2994:	06 c0       	rjmp	.+12     	; 0x29a2 <vfprintf+0x198>
    2996:	91 fc       	sbrc	r9, 1
    2998:	06 c0       	rjmp	.+12     	; 0x29a6 <vfprintf+0x19c>
    299a:	92 fe       	sbrs	r9, 2
    299c:	06 c0       	rjmp	.+12     	; 0x29aa <vfprintf+0x1a0>
    299e:	00 e2       	ldi	r16, 0x20	; 32
    29a0:	05 c0       	rjmp	.+10     	; 0x29ac <vfprintf+0x1a2>
    29a2:	0d e2       	ldi	r16, 0x2D	; 45
    29a4:	03 c0       	rjmp	.+6      	; 0x29ac <vfprintf+0x1a2>
    29a6:	0b e2       	ldi	r16, 0x2B	; 43
    29a8:	01 c0       	rjmp	.+2      	; 0x29ac <vfprintf+0x1a2>
    29aa:	00 e0       	ldi	r16, 0x00	; 0
    29ac:	8c 85       	ldd	r24, Y+12	; 0x0c
    29ae:	8c 70       	andi	r24, 0x0C	; 12
    29b0:	19 f0       	breq	.+6      	; 0x29b8 <vfprintf+0x1ae>
    29b2:	01 11       	cpse	r16, r1
    29b4:	5a c2       	rjmp	.+1204   	; 0x2e6a <vfprintf+0x660>
    29b6:	9b c2       	rjmp	.+1334   	; 0x2eee <vfprintf+0x6e4>
    29b8:	97 fe       	sbrs	r9, 7
    29ba:	10 c0       	rjmp	.+32     	; 0x29dc <vfprintf+0x1d2>
    29bc:	4c 0c       	add	r4, r12
    29be:	fc 85       	ldd	r31, Y+12	; 0x0c
    29c0:	f4 ff       	sbrs	r31, 4
    29c2:	04 c0       	rjmp	.+8      	; 0x29cc <vfprintf+0x1c2>
    29c4:	8a 81       	ldd	r24, Y+2	; 0x02
    29c6:	81 33       	cpi	r24, 0x31	; 49
    29c8:	09 f4       	brne	.+2      	; 0x29cc <vfprintf+0x1c2>
    29ca:	4a 94       	dec	r4
    29cc:	14 14       	cp	r1, r4
    29ce:	74 f5       	brge	.+92     	; 0x2a2c <vfprintf+0x222>
    29d0:	28 e0       	ldi	r18, 0x08	; 8
    29d2:	24 15       	cp	r18, r4
    29d4:	78 f5       	brcc	.+94     	; 0x2a34 <vfprintf+0x22a>
    29d6:	88 e0       	ldi	r24, 0x08	; 8
    29d8:	48 2e       	mov	r4, r24
    29da:	2c c0       	rjmp	.+88     	; 0x2a34 <vfprintf+0x22a>
    29dc:	96 fc       	sbrc	r9, 6
    29de:	2a c0       	rjmp	.+84     	; 0x2a34 <vfprintf+0x22a>
    29e0:	81 2f       	mov	r24, r17
    29e2:	90 e0       	ldi	r25, 0x00	; 0
    29e4:	8c 15       	cp	r24, r12
    29e6:	9d 05       	cpc	r25, r13
    29e8:	9c f0       	brlt	.+38     	; 0x2a10 <vfprintf+0x206>
    29ea:	3c ef       	ldi	r19, 0xFC	; 252
    29ec:	c3 16       	cp	r12, r19
    29ee:	3f ef       	ldi	r19, 0xFF	; 255
    29f0:	d3 06       	cpc	r13, r19
    29f2:	74 f0       	brlt	.+28     	; 0x2a10 <vfprintf+0x206>
    29f4:	89 2d       	mov	r24, r9
    29f6:	80 68       	ori	r24, 0x80	; 128
    29f8:	98 2e       	mov	r9, r24
    29fa:	0a c0       	rjmp	.+20     	; 0x2a10 <vfprintf+0x206>
    29fc:	e2 e0       	ldi	r30, 0x02	; 2
    29fe:	f0 e0       	ldi	r31, 0x00	; 0
    2a00:	ec 0f       	add	r30, r28
    2a02:	fd 1f       	adc	r31, r29
    2a04:	e1 0f       	add	r30, r17
    2a06:	f1 1d       	adc	r31, r1
    2a08:	80 81       	ld	r24, Z
    2a0a:	80 33       	cpi	r24, 0x30	; 48
    2a0c:	19 f4       	brne	.+6      	; 0x2a14 <vfprintf+0x20a>
    2a0e:	11 50       	subi	r17, 0x01	; 1
    2a10:	11 11       	cpse	r17, r1
    2a12:	f4 cf       	rjmp	.-24     	; 0x29fc <vfprintf+0x1f2>
    2a14:	97 fe       	sbrs	r9, 7
    2a16:	0e c0       	rjmp	.+28     	; 0x2a34 <vfprintf+0x22a>
    2a18:	44 24       	eor	r4, r4
    2a1a:	43 94       	inc	r4
    2a1c:	41 0e       	add	r4, r17
    2a1e:	81 2f       	mov	r24, r17
    2a20:	90 e0       	ldi	r25, 0x00	; 0
    2a22:	c8 16       	cp	r12, r24
    2a24:	d9 06       	cpc	r13, r25
    2a26:	2c f4       	brge	.+10     	; 0x2a32 <vfprintf+0x228>
    2a28:	1c 19       	sub	r17, r12
    2a2a:	04 c0       	rjmp	.+8      	; 0x2a34 <vfprintf+0x22a>
    2a2c:	44 24       	eor	r4, r4
    2a2e:	43 94       	inc	r4
    2a30:	01 c0       	rjmp	.+2      	; 0x2a34 <vfprintf+0x22a>
    2a32:	10 e0       	ldi	r17, 0x00	; 0
    2a34:	97 fe       	sbrs	r9, 7
    2a36:	06 c0       	rjmp	.+12     	; 0x2a44 <vfprintf+0x23a>
    2a38:	1c 14       	cp	r1, r12
    2a3a:	1d 04       	cpc	r1, r13
    2a3c:	34 f4       	brge	.+12     	; 0x2a4a <vfprintf+0x240>
    2a3e:	c6 01       	movw	r24, r12
    2a40:	01 96       	adiw	r24, 0x01	; 1
    2a42:	05 c0       	rjmp	.+10     	; 0x2a4e <vfprintf+0x244>
    2a44:	85 e0       	ldi	r24, 0x05	; 5
    2a46:	90 e0       	ldi	r25, 0x00	; 0
    2a48:	02 c0       	rjmp	.+4      	; 0x2a4e <vfprintf+0x244>
    2a4a:	81 e0       	ldi	r24, 0x01	; 1
    2a4c:	90 e0       	ldi	r25, 0x00	; 0
    2a4e:	01 11       	cpse	r16, r1
    2a50:	01 96       	adiw	r24, 0x01	; 1
    2a52:	11 23       	and	r17, r17
    2a54:	31 f0       	breq	.+12     	; 0x2a62 <vfprintf+0x258>
    2a56:	21 2f       	mov	r18, r17
    2a58:	30 e0       	ldi	r19, 0x00	; 0
    2a5a:	2f 5f       	subi	r18, 0xFF	; 255
    2a5c:	3f 4f       	sbci	r19, 0xFF	; 255
    2a5e:	82 0f       	add	r24, r18
    2a60:	93 1f       	adc	r25, r19
    2a62:	25 2d       	mov	r18, r5
    2a64:	30 e0       	ldi	r19, 0x00	; 0
    2a66:	82 17       	cp	r24, r18
    2a68:	93 07       	cpc	r25, r19
    2a6a:	14 f4       	brge	.+4      	; 0x2a70 <vfprintf+0x266>
    2a6c:	58 1a       	sub	r5, r24
    2a6e:	01 c0       	rjmp	.+2      	; 0x2a72 <vfprintf+0x268>
    2a70:	51 2c       	mov	r5, r1
    2a72:	89 2d       	mov	r24, r9
    2a74:	89 70       	andi	r24, 0x09	; 9
    2a76:	49 f4       	brne	.+18     	; 0x2a8a <vfprintf+0x280>
    2a78:	55 20       	and	r5, r5
    2a7a:	39 f0       	breq	.+14     	; 0x2a8a <vfprintf+0x280>
    2a7c:	b7 01       	movw	r22, r14
    2a7e:	80 e2       	ldi	r24, 0x20	; 32
    2a80:	90 e0       	ldi	r25, 0x00	; 0
    2a82:	0e 94 01 1a 	call	0x3402	; 0x3402 <fputc>
    2a86:	5a 94       	dec	r5
    2a88:	f7 cf       	rjmp	.-18     	; 0x2a78 <vfprintf+0x26e>
    2a8a:	00 23       	and	r16, r16
    2a8c:	29 f0       	breq	.+10     	; 0x2a98 <vfprintf+0x28e>
    2a8e:	b7 01       	movw	r22, r14
    2a90:	80 2f       	mov	r24, r16
    2a92:	90 e0       	ldi	r25, 0x00	; 0
    2a94:	0e 94 01 1a 	call	0x3402	; 0x3402 <fputc>
    2a98:	93 fc       	sbrc	r9, 3
    2a9a:	09 c0       	rjmp	.+18     	; 0x2aae <vfprintf+0x2a4>
    2a9c:	55 20       	and	r5, r5
    2a9e:	39 f0       	breq	.+14     	; 0x2aae <vfprintf+0x2a4>
    2aa0:	b7 01       	movw	r22, r14
    2aa2:	80 e3       	ldi	r24, 0x30	; 48
    2aa4:	90 e0       	ldi	r25, 0x00	; 0
    2aa6:	0e 94 01 1a 	call	0x3402	; 0x3402 <fputc>
    2aaa:	5a 94       	dec	r5
    2aac:	f7 cf       	rjmp	.-18     	; 0x2a9c <vfprintf+0x292>
    2aae:	97 fe       	sbrs	r9, 7
    2ab0:	4c c0       	rjmp	.+152    	; 0x2b4a <vfprintf+0x340>
    2ab2:	46 01       	movw	r8, r12
    2ab4:	d7 fe       	sbrs	r13, 7
    2ab6:	02 c0       	rjmp	.+4      	; 0x2abc <vfprintf+0x2b2>
    2ab8:	81 2c       	mov	r8, r1
    2aba:	91 2c       	mov	r9, r1
    2abc:	c6 01       	movw	r24, r12
    2abe:	88 19       	sub	r24, r8
    2ac0:	99 09       	sbc	r25, r9
    2ac2:	f3 01       	movw	r30, r6
    2ac4:	e8 0f       	add	r30, r24
    2ac6:	f9 1f       	adc	r31, r25
    2ac8:	fe 87       	std	Y+14, r31	; 0x0e
    2aca:	ed 87       	std	Y+13, r30	; 0x0d
    2acc:	96 01       	movw	r18, r12
    2ace:	24 19       	sub	r18, r4
    2ad0:	31 09       	sbc	r19, r1
    2ad2:	38 8b       	std	Y+16, r19	; 0x10
    2ad4:	2f 87       	std	Y+15, r18	; 0x0f
    2ad6:	01 2f       	mov	r16, r17
    2ad8:	10 e0       	ldi	r17, 0x00	; 0
    2ada:	11 95       	neg	r17
    2adc:	01 95       	neg	r16
    2ade:	11 09       	sbc	r17, r1
    2ae0:	3f ef       	ldi	r19, 0xFF	; 255
    2ae2:	83 16       	cp	r8, r19
    2ae4:	93 06       	cpc	r9, r19
    2ae6:	29 f4       	brne	.+10     	; 0x2af2 <vfprintf+0x2e8>
    2ae8:	b7 01       	movw	r22, r14
    2aea:	8e e2       	ldi	r24, 0x2E	; 46
    2aec:	90 e0       	ldi	r25, 0x00	; 0
    2aee:	0e 94 01 1a 	call	0x3402	; 0x3402 <fputc>
    2af2:	c8 14       	cp	r12, r8
    2af4:	d9 04       	cpc	r13, r9
    2af6:	4c f0       	brlt	.+18     	; 0x2b0a <vfprintf+0x300>
    2af8:	8f 85       	ldd	r24, Y+15	; 0x0f
    2afa:	98 89       	ldd	r25, Y+16	; 0x10
    2afc:	88 15       	cp	r24, r8
    2afe:	99 05       	cpc	r25, r9
    2b00:	24 f4       	brge	.+8      	; 0x2b0a <vfprintf+0x300>
    2b02:	ed 85       	ldd	r30, Y+13	; 0x0d
    2b04:	fe 85       	ldd	r31, Y+14	; 0x0e
    2b06:	81 81       	ldd	r24, Z+1	; 0x01
    2b08:	01 c0       	rjmp	.+2      	; 0x2b0c <vfprintf+0x302>
    2b0a:	80 e3       	ldi	r24, 0x30	; 48
    2b0c:	f1 e0       	ldi	r31, 0x01	; 1
    2b0e:	8f 1a       	sub	r8, r31
    2b10:	91 08       	sbc	r9, r1
    2b12:	2d 85       	ldd	r18, Y+13	; 0x0d
    2b14:	3e 85       	ldd	r19, Y+14	; 0x0e
    2b16:	2f 5f       	subi	r18, 0xFF	; 255
    2b18:	3f 4f       	sbci	r19, 0xFF	; 255
    2b1a:	3e 87       	std	Y+14, r19	; 0x0e
    2b1c:	2d 87       	std	Y+13, r18	; 0x0d
    2b1e:	80 16       	cp	r8, r16
    2b20:	91 06       	cpc	r9, r17
    2b22:	2c f0       	brlt	.+10     	; 0x2b2e <vfprintf+0x324>
    2b24:	b7 01       	movw	r22, r14
    2b26:	90 e0       	ldi	r25, 0x00	; 0
    2b28:	0e 94 01 1a 	call	0x3402	; 0x3402 <fputc>
    2b2c:	d9 cf       	rjmp	.-78     	; 0x2ae0 <vfprintf+0x2d6>
    2b2e:	c8 14       	cp	r12, r8
    2b30:	d9 04       	cpc	r13, r9
    2b32:	41 f4       	brne	.+16     	; 0x2b44 <vfprintf+0x33a>
    2b34:	9a 81       	ldd	r25, Y+2	; 0x02
    2b36:	96 33       	cpi	r25, 0x36	; 54
    2b38:	20 f4       	brcc	.+8      	; 0x2b42 <vfprintf+0x338>
    2b3a:	95 33       	cpi	r25, 0x35	; 53
    2b3c:	19 f4       	brne	.+6      	; 0x2b44 <vfprintf+0x33a>
    2b3e:	3c 85       	ldd	r19, Y+12	; 0x0c
    2b40:	34 ff       	sbrs	r19, 4
    2b42:	81 e3       	ldi	r24, 0x31	; 49
    2b44:	b7 01       	movw	r22, r14
    2b46:	90 e0       	ldi	r25, 0x00	; 0
    2b48:	4e c0       	rjmp	.+156    	; 0x2be6 <vfprintf+0x3dc>
    2b4a:	8a 81       	ldd	r24, Y+2	; 0x02
    2b4c:	81 33       	cpi	r24, 0x31	; 49
    2b4e:	19 f0       	breq	.+6      	; 0x2b56 <vfprintf+0x34c>
    2b50:	9c 85       	ldd	r25, Y+12	; 0x0c
    2b52:	9f 7e       	andi	r25, 0xEF	; 239
    2b54:	9c 87       	std	Y+12, r25	; 0x0c
    2b56:	b7 01       	movw	r22, r14
    2b58:	90 e0       	ldi	r25, 0x00	; 0
    2b5a:	0e 94 01 1a 	call	0x3402	; 0x3402 <fputc>
    2b5e:	11 11       	cpse	r17, r1
    2b60:	05 c0       	rjmp	.+10     	; 0x2b6c <vfprintf+0x362>
    2b62:	94 fc       	sbrc	r9, 4
    2b64:	18 c0       	rjmp	.+48     	; 0x2b96 <vfprintf+0x38c>
    2b66:	85 e6       	ldi	r24, 0x65	; 101
    2b68:	90 e0       	ldi	r25, 0x00	; 0
    2b6a:	17 c0       	rjmp	.+46     	; 0x2b9a <vfprintf+0x390>
    2b6c:	b7 01       	movw	r22, r14
    2b6e:	8e e2       	ldi	r24, 0x2E	; 46
    2b70:	90 e0       	ldi	r25, 0x00	; 0
    2b72:	0e 94 01 1a 	call	0x3402	; 0x3402 <fputc>
    2b76:	1e 5f       	subi	r17, 0xFE	; 254
    2b78:	82 e0       	ldi	r24, 0x02	; 2
    2b7a:	01 e0       	ldi	r16, 0x01	; 1
    2b7c:	08 0f       	add	r16, r24
    2b7e:	f3 01       	movw	r30, r6
    2b80:	e8 0f       	add	r30, r24
    2b82:	f1 1d       	adc	r31, r1
    2b84:	80 81       	ld	r24, Z
    2b86:	b7 01       	movw	r22, r14
    2b88:	90 e0       	ldi	r25, 0x00	; 0
    2b8a:	0e 94 01 1a 	call	0x3402	; 0x3402 <fputc>
    2b8e:	80 2f       	mov	r24, r16
    2b90:	01 13       	cpse	r16, r17
    2b92:	f3 cf       	rjmp	.-26     	; 0x2b7a <vfprintf+0x370>
    2b94:	e6 cf       	rjmp	.-52     	; 0x2b62 <vfprintf+0x358>
    2b96:	85 e4       	ldi	r24, 0x45	; 69
    2b98:	90 e0       	ldi	r25, 0x00	; 0
    2b9a:	b7 01       	movw	r22, r14
    2b9c:	0e 94 01 1a 	call	0x3402	; 0x3402 <fputc>
    2ba0:	d7 fc       	sbrc	r13, 7
    2ba2:	06 c0       	rjmp	.+12     	; 0x2bb0 <vfprintf+0x3a6>
    2ba4:	c1 14       	cp	r12, r1
    2ba6:	d1 04       	cpc	r13, r1
    2ba8:	41 f4       	brne	.+16     	; 0x2bba <vfprintf+0x3b0>
    2baa:	ec 85       	ldd	r30, Y+12	; 0x0c
    2bac:	e4 ff       	sbrs	r30, 4
    2bae:	05 c0       	rjmp	.+10     	; 0x2bba <vfprintf+0x3b0>
    2bb0:	d1 94       	neg	r13
    2bb2:	c1 94       	neg	r12
    2bb4:	d1 08       	sbc	r13, r1
    2bb6:	8d e2       	ldi	r24, 0x2D	; 45
    2bb8:	01 c0       	rjmp	.+2      	; 0x2bbc <vfprintf+0x3b2>
    2bba:	8b e2       	ldi	r24, 0x2B	; 43
    2bbc:	b7 01       	movw	r22, r14
    2bbe:	90 e0       	ldi	r25, 0x00	; 0
    2bc0:	0e 94 01 1a 	call	0x3402	; 0x3402 <fputc>
    2bc4:	80 e3       	ldi	r24, 0x30	; 48
    2bc6:	2a e0       	ldi	r18, 0x0A	; 10
    2bc8:	c2 16       	cp	r12, r18
    2bca:	d1 04       	cpc	r13, r1
    2bcc:	2c f0       	brlt	.+10     	; 0x2bd8 <vfprintf+0x3ce>
    2bce:	8f 5f       	subi	r24, 0xFF	; 255
    2bd0:	fa e0       	ldi	r31, 0x0A	; 10
    2bd2:	cf 1a       	sub	r12, r31
    2bd4:	d1 08       	sbc	r13, r1
    2bd6:	f7 cf       	rjmp	.-18     	; 0x2bc6 <vfprintf+0x3bc>
    2bd8:	b7 01       	movw	r22, r14
    2bda:	90 e0       	ldi	r25, 0x00	; 0
    2bdc:	0e 94 01 1a 	call	0x3402	; 0x3402 <fputc>
    2be0:	b7 01       	movw	r22, r14
    2be2:	c6 01       	movw	r24, r12
    2be4:	c0 96       	adiw	r24, 0x30	; 48
    2be6:	0e 94 01 1a 	call	0x3402	; 0x3402 <fputc>
    2bea:	54 c1       	rjmp	.+680    	; 0x2e94 <vfprintf+0x68a>
    2bec:	83 36       	cpi	r24, 0x63	; 99
    2bee:	31 f0       	breq	.+12     	; 0x2bfc <vfprintf+0x3f2>
    2bf0:	83 37       	cpi	r24, 0x73	; 115
    2bf2:	79 f0       	breq	.+30     	; 0x2c12 <vfprintf+0x408>
    2bf4:	83 35       	cpi	r24, 0x53	; 83
    2bf6:	09 f0       	breq	.+2      	; 0x2bfa <vfprintf+0x3f0>
    2bf8:	56 c0       	rjmp	.+172    	; 0x2ca6 <vfprintf+0x49c>
    2bfa:	20 c0       	rjmp	.+64     	; 0x2c3c <vfprintf+0x432>
    2bfc:	56 01       	movw	r10, r12
    2bfe:	32 e0       	ldi	r19, 0x02	; 2
    2c00:	a3 0e       	add	r10, r19
    2c02:	b1 1c       	adc	r11, r1
    2c04:	f6 01       	movw	r30, r12
    2c06:	80 81       	ld	r24, Z
    2c08:	89 83       	std	Y+1, r24	; 0x01
    2c0a:	01 e0       	ldi	r16, 0x01	; 1
    2c0c:	10 e0       	ldi	r17, 0x00	; 0
    2c0e:	63 01       	movw	r12, r6
    2c10:	12 c0       	rjmp	.+36     	; 0x2c36 <vfprintf+0x42c>
    2c12:	56 01       	movw	r10, r12
    2c14:	f2 e0       	ldi	r31, 0x02	; 2
    2c16:	af 0e       	add	r10, r31
    2c18:	b1 1c       	adc	r11, r1
    2c1a:	f6 01       	movw	r30, r12
    2c1c:	c0 80       	ld	r12, Z
    2c1e:	d1 80       	ldd	r13, Z+1	; 0x01
    2c20:	96 fe       	sbrs	r9, 6
    2c22:	03 c0       	rjmp	.+6      	; 0x2c2a <vfprintf+0x420>
    2c24:	61 2f       	mov	r22, r17
    2c26:	70 e0       	ldi	r23, 0x00	; 0
    2c28:	02 c0       	rjmp	.+4      	; 0x2c2e <vfprintf+0x424>
    2c2a:	6f ef       	ldi	r22, 0xFF	; 255
    2c2c:	7f ef       	ldi	r23, 0xFF	; 255
    2c2e:	c6 01       	movw	r24, r12
    2c30:	0e 94 e6 19 	call	0x33cc	; 0x33cc <strnlen>
    2c34:	8c 01       	movw	r16, r24
    2c36:	f9 2d       	mov	r31, r9
    2c38:	ff 77       	andi	r31, 0x7F	; 127
    2c3a:	14 c0       	rjmp	.+40     	; 0x2c64 <vfprintf+0x45a>
    2c3c:	56 01       	movw	r10, r12
    2c3e:	22 e0       	ldi	r18, 0x02	; 2
    2c40:	a2 0e       	add	r10, r18
    2c42:	b1 1c       	adc	r11, r1
    2c44:	f6 01       	movw	r30, r12
    2c46:	c0 80       	ld	r12, Z
    2c48:	d1 80       	ldd	r13, Z+1	; 0x01
    2c4a:	96 fe       	sbrs	r9, 6
    2c4c:	03 c0       	rjmp	.+6      	; 0x2c54 <vfprintf+0x44a>
    2c4e:	61 2f       	mov	r22, r17
    2c50:	70 e0       	ldi	r23, 0x00	; 0
    2c52:	02 c0       	rjmp	.+4      	; 0x2c58 <vfprintf+0x44e>
    2c54:	6f ef       	ldi	r22, 0xFF	; 255
    2c56:	7f ef       	ldi	r23, 0xFF	; 255
    2c58:	c6 01       	movw	r24, r12
    2c5a:	0e 94 c0 19 	call	0x3380	; 0x3380 <strnlen_P>
    2c5e:	8c 01       	movw	r16, r24
    2c60:	f9 2d       	mov	r31, r9
    2c62:	f0 68       	ori	r31, 0x80	; 128
    2c64:	9f 2e       	mov	r9, r31
    2c66:	f3 fd       	sbrc	r31, 3
    2c68:	1a c0       	rjmp	.+52     	; 0x2c9e <vfprintf+0x494>
    2c6a:	85 2d       	mov	r24, r5
    2c6c:	90 e0       	ldi	r25, 0x00	; 0
    2c6e:	08 17       	cp	r16, r24
    2c70:	19 07       	cpc	r17, r25
    2c72:	a8 f4       	brcc	.+42     	; 0x2c9e <vfprintf+0x494>
    2c74:	b7 01       	movw	r22, r14
    2c76:	80 e2       	ldi	r24, 0x20	; 32
    2c78:	90 e0       	ldi	r25, 0x00	; 0
    2c7a:	0e 94 01 1a 	call	0x3402	; 0x3402 <fputc>
    2c7e:	5a 94       	dec	r5
    2c80:	f4 cf       	rjmp	.-24     	; 0x2c6a <vfprintf+0x460>
    2c82:	f6 01       	movw	r30, r12
    2c84:	97 fc       	sbrc	r9, 7
    2c86:	85 91       	lpm	r24, Z+
    2c88:	97 fe       	sbrs	r9, 7
    2c8a:	81 91       	ld	r24, Z+
    2c8c:	6f 01       	movw	r12, r30
    2c8e:	b7 01       	movw	r22, r14
    2c90:	90 e0       	ldi	r25, 0x00	; 0
    2c92:	0e 94 01 1a 	call	0x3402	; 0x3402 <fputc>
    2c96:	51 10       	cpse	r5, r1
    2c98:	5a 94       	dec	r5
    2c9a:	01 50       	subi	r16, 0x01	; 1
    2c9c:	11 09       	sbc	r17, r1
    2c9e:	01 15       	cp	r16, r1
    2ca0:	11 05       	cpc	r17, r1
    2ca2:	79 f7       	brne	.-34     	; 0x2c82 <vfprintf+0x478>
    2ca4:	f7 c0       	rjmp	.+494    	; 0x2e94 <vfprintf+0x68a>
    2ca6:	84 36       	cpi	r24, 0x64	; 100
    2ca8:	11 f0       	breq	.+4      	; 0x2cae <vfprintf+0x4a4>
    2caa:	89 36       	cpi	r24, 0x69	; 105
    2cac:	61 f5       	brne	.+88     	; 0x2d06 <vfprintf+0x4fc>
    2cae:	56 01       	movw	r10, r12
    2cb0:	97 fe       	sbrs	r9, 7
    2cb2:	09 c0       	rjmp	.+18     	; 0x2cc6 <vfprintf+0x4bc>
    2cb4:	24 e0       	ldi	r18, 0x04	; 4
    2cb6:	a2 0e       	add	r10, r18
    2cb8:	b1 1c       	adc	r11, r1
    2cba:	f6 01       	movw	r30, r12
    2cbc:	60 81       	ld	r22, Z
    2cbe:	71 81       	ldd	r23, Z+1	; 0x01
    2cc0:	82 81       	ldd	r24, Z+2	; 0x02
    2cc2:	93 81       	ldd	r25, Z+3	; 0x03
    2cc4:	0a c0       	rjmp	.+20     	; 0x2cda <vfprintf+0x4d0>
    2cc6:	f2 e0       	ldi	r31, 0x02	; 2
    2cc8:	af 0e       	add	r10, r31
    2cca:	b1 1c       	adc	r11, r1
    2ccc:	f6 01       	movw	r30, r12
    2cce:	60 81       	ld	r22, Z
    2cd0:	71 81       	ldd	r23, Z+1	; 0x01
    2cd2:	07 2e       	mov	r0, r23
    2cd4:	00 0c       	add	r0, r0
    2cd6:	88 0b       	sbc	r24, r24
    2cd8:	99 0b       	sbc	r25, r25
    2cda:	f9 2d       	mov	r31, r9
    2cdc:	ff 76       	andi	r31, 0x6F	; 111
    2cde:	9f 2e       	mov	r9, r31
    2ce0:	97 ff       	sbrs	r25, 7
    2ce2:	09 c0       	rjmp	.+18     	; 0x2cf6 <vfprintf+0x4ec>
    2ce4:	90 95       	com	r25
    2ce6:	80 95       	com	r24
    2ce8:	70 95       	com	r23
    2cea:	61 95       	neg	r22
    2cec:	7f 4f       	sbci	r23, 0xFF	; 255
    2cee:	8f 4f       	sbci	r24, 0xFF	; 255
    2cf0:	9f 4f       	sbci	r25, 0xFF	; 255
    2cf2:	f0 68       	ori	r31, 0x80	; 128
    2cf4:	9f 2e       	mov	r9, r31
    2cf6:	2a e0       	ldi	r18, 0x0A	; 10
    2cf8:	30 e0       	ldi	r19, 0x00	; 0
    2cfa:	a3 01       	movw	r20, r6
    2cfc:	0e 94 5f 1a 	call	0x34be	; 0x34be <__ultoa_invert>
    2d00:	c8 2e       	mov	r12, r24
    2d02:	c6 18       	sub	r12, r6
    2d04:	3f c0       	rjmp	.+126    	; 0x2d84 <vfprintf+0x57a>
    2d06:	09 2d       	mov	r16, r9
    2d08:	85 37       	cpi	r24, 0x75	; 117
    2d0a:	21 f4       	brne	.+8      	; 0x2d14 <vfprintf+0x50a>
    2d0c:	0f 7e       	andi	r16, 0xEF	; 239
    2d0e:	2a e0       	ldi	r18, 0x0A	; 10
    2d10:	30 e0       	ldi	r19, 0x00	; 0
    2d12:	1d c0       	rjmp	.+58     	; 0x2d4e <vfprintf+0x544>
    2d14:	09 7f       	andi	r16, 0xF9	; 249
    2d16:	8f 36       	cpi	r24, 0x6F	; 111
    2d18:	91 f0       	breq	.+36     	; 0x2d3e <vfprintf+0x534>
    2d1a:	18 f4       	brcc	.+6      	; 0x2d22 <vfprintf+0x518>
    2d1c:	88 35       	cpi	r24, 0x58	; 88
    2d1e:	59 f0       	breq	.+22     	; 0x2d36 <vfprintf+0x52c>
    2d20:	c3 c0       	rjmp	.+390    	; 0x2ea8 <vfprintf+0x69e>
    2d22:	80 37       	cpi	r24, 0x70	; 112
    2d24:	19 f0       	breq	.+6      	; 0x2d2c <vfprintf+0x522>
    2d26:	88 37       	cpi	r24, 0x78	; 120
    2d28:	11 f0       	breq	.+4      	; 0x2d2e <vfprintf+0x524>
    2d2a:	be c0       	rjmp	.+380    	; 0x2ea8 <vfprintf+0x69e>
    2d2c:	00 61       	ori	r16, 0x10	; 16
    2d2e:	04 ff       	sbrs	r16, 4
    2d30:	09 c0       	rjmp	.+18     	; 0x2d44 <vfprintf+0x53a>
    2d32:	04 60       	ori	r16, 0x04	; 4
    2d34:	07 c0       	rjmp	.+14     	; 0x2d44 <vfprintf+0x53a>
    2d36:	94 fe       	sbrs	r9, 4
    2d38:	08 c0       	rjmp	.+16     	; 0x2d4a <vfprintf+0x540>
    2d3a:	06 60       	ori	r16, 0x06	; 6
    2d3c:	06 c0       	rjmp	.+12     	; 0x2d4a <vfprintf+0x540>
    2d3e:	28 e0       	ldi	r18, 0x08	; 8
    2d40:	30 e0       	ldi	r19, 0x00	; 0
    2d42:	05 c0       	rjmp	.+10     	; 0x2d4e <vfprintf+0x544>
    2d44:	20 e1       	ldi	r18, 0x10	; 16
    2d46:	30 e0       	ldi	r19, 0x00	; 0
    2d48:	02 c0       	rjmp	.+4      	; 0x2d4e <vfprintf+0x544>
    2d4a:	20 e1       	ldi	r18, 0x10	; 16
    2d4c:	32 e0       	ldi	r19, 0x02	; 2
    2d4e:	56 01       	movw	r10, r12
    2d50:	07 ff       	sbrs	r16, 7
    2d52:	09 c0       	rjmp	.+18     	; 0x2d66 <vfprintf+0x55c>
    2d54:	84 e0       	ldi	r24, 0x04	; 4
    2d56:	a8 0e       	add	r10, r24
    2d58:	b1 1c       	adc	r11, r1
    2d5a:	f6 01       	movw	r30, r12
    2d5c:	60 81       	ld	r22, Z
    2d5e:	71 81       	ldd	r23, Z+1	; 0x01
    2d60:	82 81       	ldd	r24, Z+2	; 0x02
    2d62:	93 81       	ldd	r25, Z+3	; 0x03
    2d64:	08 c0       	rjmp	.+16     	; 0x2d76 <vfprintf+0x56c>
    2d66:	f2 e0       	ldi	r31, 0x02	; 2
    2d68:	af 0e       	add	r10, r31
    2d6a:	b1 1c       	adc	r11, r1
    2d6c:	f6 01       	movw	r30, r12
    2d6e:	60 81       	ld	r22, Z
    2d70:	71 81       	ldd	r23, Z+1	; 0x01
    2d72:	80 e0       	ldi	r24, 0x00	; 0
    2d74:	90 e0       	ldi	r25, 0x00	; 0
    2d76:	a3 01       	movw	r20, r6
    2d78:	0e 94 5f 1a 	call	0x34be	; 0x34be <__ultoa_invert>
    2d7c:	c8 2e       	mov	r12, r24
    2d7e:	c6 18       	sub	r12, r6
    2d80:	0f 77       	andi	r16, 0x7F	; 127
    2d82:	90 2e       	mov	r9, r16
    2d84:	96 fe       	sbrs	r9, 6
    2d86:	0b c0       	rjmp	.+22     	; 0x2d9e <vfprintf+0x594>
    2d88:	09 2d       	mov	r16, r9
    2d8a:	0e 7f       	andi	r16, 0xFE	; 254
    2d8c:	c1 16       	cp	r12, r17
    2d8e:	50 f4       	brcc	.+20     	; 0x2da4 <vfprintf+0x59a>
    2d90:	94 fe       	sbrs	r9, 4
    2d92:	0a c0       	rjmp	.+20     	; 0x2da8 <vfprintf+0x59e>
    2d94:	92 fc       	sbrc	r9, 2
    2d96:	08 c0       	rjmp	.+16     	; 0x2da8 <vfprintf+0x59e>
    2d98:	09 2d       	mov	r16, r9
    2d9a:	0e 7e       	andi	r16, 0xEE	; 238
    2d9c:	05 c0       	rjmp	.+10     	; 0x2da8 <vfprintf+0x59e>
    2d9e:	dc 2c       	mov	r13, r12
    2da0:	09 2d       	mov	r16, r9
    2da2:	03 c0       	rjmp	.+6      	; 0x2daa <vfprintf+0x5a0>
    2da4:	dc 2c       	mov	r13, r12
    2da6:	01 c0       	rjmp	.+2      	; 0x2daa <vfprintf+0x5a0>
    2da8:	d1 2e       	mov	r13, r17
    2daa:	04 ff       	sbrs	r16, 4
    2dac:	0d c0       	rjmp	.+26     	; 0x2dc8 <vfprintf+0x5be>
    2dae:	fe 01       	movw	r30, r28
    2db0:	ec 0d       	add	r30, r12
    2db2:	f1 1d       	adc	r31, r1
    2db4:	80 81       	ld	r24, Z
    2db6:	80 33       	cpi	r24, 0x30	; 48
    2db8:	11 f4       	brne	.+4      	; 0x2dbe <vfprintf+0x5b4>
    2dba:	09 7e       	andi	r16, 0xE9	; 233
    2dbc:	09 c0       	rjmp	.+18     	; 0x2dd0 <vfprintf+0x5c6>
    2dbe:	02 ff       	sbrs	r16, 2
    2dc0:	06 c0       	rjmp	.+12     	; 0x2dce <vfprintf+0x5c4>
    2dc2:	d3 94       	inc	r13
    2dc4:	d3 94       	inc	r13
    2dc6:	04 c0       	rjmp	.+8      	; 0x2dd0 <vfprintf+0x5c6>
    2dc8:	80 2f       	mov	r24, r16
    2dca:	86 78       	andi	r24, 0x86	; 134
    2dcc:	09 f0       	breq	.+2      	; 0x2dd0 <vfprintf+0x5c6>
    2dce:	d3 94       	inc	r13
    2dd0:	03 fd       	sbrc	r16, 3
    2dd2:	11 c0       	rjmp	.+34     	; 0x2df6 <vfprintf+0x5ec>
    2dd4:	00 ff       	sbrs	r16, 0
    2dd6:	06 c0       	rjmp	.+12     	; 0x2de4 <vfprintf+0x5da>
    2dd8:	1c 2d       	mov	r17, r12
    2dda:	d5 14       	cp	r13, r5
    2ddc:	80 f4       	brcc	.+32     	; 0x2dfe <vfprintf+0x5f4>
    2dde:	15 0d       	add	r17, r5
    2de0:	1d 19       	sub	r17, r13
    2de2:	0d c0       	rjmp	.+26     	; 0x2dfe <vfprintf+0x5f4>
    2de4:	d5 14       	cp	r13, r5
    2de6:	58 f4       	brcc	.+22     	; 0x2dfe <vfprintf+0x5f4>
    2de8:	b7 01       	movw	r22, r14
    2dea:	80 e2       	ldi	r24, 0x20	; 32
    2dec:	90 e0       	ldi	r25, 0x00	; 0
    2dee:	0e 94 01 1a 	call	0x3402	; 0x3402 <fputc>
    2df2:	d3 94       	inc	r13
    2df4:	f7 cf       	rjmp	.-18     	; 0x2de4 <vfprintf+0x5da>
    2df6:	d5 14       	cp	r13, r5
    2df8:	10 f4       	brcc	.+4      	; 0x2dfe <vfprintf+0x5f4>
    2dfa:	5d 18       	sub	r5, r13
    2dfc:	01 c0       	rjmp	.+2      	; 0x2e00 <vfprintf+0x5f6>
    2dfe:	51 2c       	mov	r5, r1
    2e00:	04 ff       	sbrs	r16, 4
    2e02:	10 c0       	rjmp	.+32     	; 0x2e24 <vfprintf+0x61a>
    2e04:	b7 01       	movw	r22, r14
    2e06:	80 e3       	ldi	r24, 0x30	; 48
    2e08:	90 e0       	ldi	r25, 0x00	; 0
    2e0a:	0e 94 01 1a 	call	0x3402	; 0x3402 <fputc>
    2e0e:	02 ff       	sbrs	r16, 2
    2e10:	17 c0       	rjmp	.+46     	; 0x2e40 <vfprintf+0x636>
    2e12:	01 fd       	sbrc	r16, 1
    2e14:	03 c0       	rjmp	.+6      	; 0x2e1c <vfprintf+0x612>
    2e16:	88 e7       	ldi	r24, 0x78	; 120
    2e18:	90 e0       	ldi	r25, 0x00	; 0
    2e1a:	02 c0       	rjmp	.+4      	; 0x2e20 <vfprintf+0x616>
    2e1c:	88 e5       	ldi	r24, 0x58	; 88
    2e1e:	90 e0       	ldi	r25, 0x00	; 0
    2e20:	b7 01       	movw	r22, r14
    2e22:	0c c0       	rjmp	.+24     	; 0x2e3c <vfprintf+0x632>
    2e24:	80 2f       	mov	r24, r16
    2e26:	86 78       	andi	r24, 0x86	; 134
    2e28:	59 f0       	breq	.+22     	; 0x2e40 <vfprintf+0x636>
    2e2a:	01 ff       	sbrs	r16, 1
    2e2c:	02 c0       	rjmp	.+4      	; 0x2e32 <vfprintf+0x628>
    2e2e:	8b e2       	ldi	r24, 0x2B	; 43
    2e30:	01 c0       	rjmp	.+2      	; 0x2e34 <vfprintf+0x62a>
    2e32:	80 e2       	ldi	r24, 0x20	; 32
    2e34:	07 fd       	sbrc	r16, 7
    2e36:	8d e2       	ldi	r24, 0x2D	; 45
    2e38:	b7 01       	movw	r22, r14
    2e3a:	90 e0       	ldi	r25, 0x00	; 0
    2e3c:	0e 94 01 1a 	call	0x3402	; 0x3402 <fputc>
    2e40:	c1 16       	cp	r12, r17
    2e42:	38 f4       	brcc	.+14     	; 0x2e52 <vfprintf+0x648>
    2e44:	b7 01       	movw	r22, r14
    2e46:	80 e3       	ldi	r24, 0x30	; 48
    2e48:	90 e0       	ldi	r25, 0x00	; 0
    2e4a:	0e 94 01 1a 	call	0x3402	; 0x3402 <fputc>
    2e4e:	11 50       	subi	r17, 0x01	; 1
    2e50:	f7 cf       	rjmp	.-18     	; 0x2e40 <vfprintf+0x636>
    2e52:	ca 94       	dec	r12
    2e54:	f3 01       	movw	r30, r6
    2e56:	ec 0d       	add	r30, r12
    2e58:	f1 1d       	adc	r31, r1
    2e5a:	80 81       	ld	r24, Z
    2e5c:	b7 01       	movw	r22, r14
    2e5e:	90 e0       	ldi	r25, 0x00	; 0
    2e60:	0e 94 01 1a 	call	0x3402	; 0x3402 <fputc>
    2e64:	c1 10       	cpse	r12, r1
    2e66:	f5 cf       	rjmp	.-22     	; 0x2e52 <vfprintf+0x648>
    2e68:	15 c0       	rjmp	.+42     	; 0x2e94 <vfprintf+0x68a>
    2e6a:	f4 e0       	ldi	r31, 0x04	; 4
    2e6c:	f5 15       	cp	r31, r5
    2e6e:	60 f5       	brcc	.+88     	; 0x2ec8 <vfprintf+0x6be>
    2e70:	84 e0       	ldi	r24, 0x04	; 4
    2e72:	58 1a       	sub	r5, r24
    2e74:	93 fe       	sbrs	r9, 3
    2e76:	1f c0       	rjmp	.+62     	; 0x2eb6 <vfprintf+0x6ac>
    2e78:	01 11       	cpse	r16, r1
    2e7a:	27 c0       	rjmp	.+78     	; 0x2eca <vfprintf+0x6c0>
    2e7c:	2c 85       	ldd	r18, Y+12	; 0x0c
    2e7e:	23 ff       	sbrs	r18, 3
    2e80:	2a c0       	rjmp	.+84     	; 0x2ed6 <vfprintf+0x6cc>
    2e82:	04 e5       	ldi	r16, 0x54	; 84
    2e84:	10 e0       	ldi	r17, 0x00	; 0
    2e86:	39 2d       	mov	r19, r9
    2e88:	30 71       	andi	r19, 0x10	; 16
    2e8a:	93 2e       	mov	r9, r19
    2e8c:	f8 01       	movw	r30, r16
    2e8e:	84 91       	lpm	r24, Z
    2e90:	81 11       	cpse	r24, r1
    2e92:	24 c0       	rjmp	.+72     	; 0x2edc <vfprintf+0x6d2>
    2e94:	55 20       	and	r5, r5
    2e96:	09 f4       	brne	.+2      	; 0x2e9a <vfprintf+0x690>
    2e98:	e4 cc       	rjmp	.-1592   	; 0x2862 <vfprintf+0x58>
    2e9a:	b7 01       	movw	r22, r14
    2e9c:	80 e2       	ldi	r24, 0x20	; 32
    2e9e:	90 e0       	ldi	r25, 0x00	; 0
    2ea0:	0e 94 01 1a 	call	0x3402	; 0x3402 <fputc>
    2ea4:	5a 94       	dec	r5
    2ea6:	f6 cf       	rjmp	.-20     	; 0x2e94 <vfprintf+0x68a>
    2ea8:	f7 01       	movw	r30, r14
    2eaa:	86 81       	ldd	r24, Z+6	; 0x06
    2eac:	97 81       	ldd	r25, Z+7	; 0x07
    2eae:	26 c0       	rjmp	.+76     	; 0x2efc <vfprintf+0x6f2>
    2eb0:	8f ef       	ldi	r24, 0xFF	; 255
    2eb2:	9f ef       	ldi	r25, 0xFF	; 255
    2eb4:	23 c0       	rjmp	.+70     	; 0x2efc <vfprintf+0x6f2>
    2eb6:	b7 01       	movw	r22, r14
    2eb8:	80 e2       	ldi	r24, 0x20	; 32
    2eba:	90 e0       	ldi	r25, 0x00	; 0
    2ebc:	0e 94 01 1a 	call	0x3402	; 0x3402 <fputc>
    2ec0:	5a 94       	dec	r5
    2ec2:	51 10       	cpse	r5, r1
    2ec4:	f8 cf       	rjmp	.-16     	; 0x2eb6 <vfprintf+0x6ac>
    2ec6:	d8 cf       	rjmp	.-80     	; 0x2e78 <vfprintf+0x66e>
    2ec8:	51 2c       	mov	r5, r1
    2eca:	b7 01       	movw	r22, r14
    2ecc:	80 2f       	mov	r24, r16
    2ece:	90 e0       	ldi	r25, 0x00	; 0
    2ed0:	0e 94 01 1a 	call	0x3402	; 0x3402 <fputc>
    2ed4:	d3 cf       	rjmp	.-90     	; 0x2e7c <vfprintf+0x672>
    2ed6:	08 e5       	ldi	r16, 0x58	; 88
    2ed8:	10 e0       	ldi	r17, 0x00	; 0
    2eda:	d5 cf       	rjmp	.-86     	; 0x2e86 <vfprintf+0x67c>
    2edc:	91 10       	cpse	r9, r1
    2ede:	80 52       	subi	r24, 0x20	; 32
    2ee0:	b7 01       	movw	r22, r14
    2ee2:	90 e0       	ldi	r25, 0x00	; 0
    2ee4:	0e 94 01 1a 	call	0x3402	; 0x3402 <fputc>
    2ee8:	0f 5f       	subi	r16, 0xFF	; 255
    2eea:	1f 4f       	sbci	r17, 0xFF	; 255
    2eec:	cf cf       	rjmp	.-98     	; 0x2e8c <vfprintf+0x682>
    2eee:	23 e0       	ldi	r18, 0x03	; 3
    2ef0:	25 15       	cp	r18, r5
    2ef2:	10 f4       	brcc	.+4      	; 0x2ef8 <vfprintf+0x6ee>
    2ef4:	83 e0       	ldi	r24, 0x03	; 3
    2ef6:	bd cf       	rjmp	.-134    	; 0x2e72 <vfprintf+0x668>
    2ef8:	51 2c       	mov	r5, r1
    2efa:	c0 cf       	rjmp	.-128    	; 0x2e7c <vfprintf+0x672>
    2efc:	60 96       	adiw	r28, 0x10	; 16
    2efe:	e2 e1       	ldi	r30, 0x12	; 18
    2f00:	0c 94 97 18 	jmp	0x312e	; 0x312e <__epilogue_restores__>

00002f04 <__muldi3>:
    2f04:	df 93       	push	r29
    2f06:	cf 93       	push	r28
    2f08:	1f 93       	push	r17
    2f0a:	0f 93       	push	r16
    2f0c:	9a 9d       	mul	r25, r10
    2f0e:	f0 2d       	mov	r31, r0
    2f10:	21 9f       	mul	r18, r17
    2f12:	f0 0d       	add	r31, r0
    2f14:	8b 9d       	mul	r24, r11
    2f16:	f0 0d       	add	r31, r0
    2f18:	8a 9d       	mul	r24, r10
    2f1a:	e0 2d       	mov	r30, r0
    2f1c:	f1 0d       	add	r31, r1
    2f1e:	03 9f       	mul	r16, r19
    2f20:	f0 0d       	add	r31, r0
    2f22:	02 9f       	mul	r16, r18
    2f24:	e0 0d       	add	r30, r0
    2f26:	f1 1d       	adc	r31, r1
    2f28:	4e 9d       	mul	r20, r14
    2f2a:	e0 0d       	add	r30, r0
    2f2c:	f1 1d       	adc	r31, r1
    2f2e:	5e 9d       	mul	r21, r14
    2f30:	f0 0d       	add	r31, r0
    2f32:	4f 9d       	mul	r20, r15
    2f34:	f0 0d       	add	r31, r0
    2f36:	7f 93       	push	r23
    2f38:	6f 93       	push	r22
    2f3a:	bf 92       	push	r11
    2f3c:	af 92       	push	r10
    2f3e:	5f 93       	push	r21
    2f40:	4f 93       	push	r20
    2f42:	d5 01       	movw	r26, r10
    2f44:	0e 94 d9 18 	call	0x31b2	; 0x31b2 <__umulhisi3>
    2f48:	8b 01       	movw	r16, r22
    2f4a:	ac 01       	movw	r20, r24
    2f4c:	d7 01       	movw	r26, r14
    2f4e:	0e 94 d9 18 	call	0x31b2	; 0x31b2 <__umulhisi3>
    2f52:	eb 01       	movw	r28, r22
    2f54:	e8 0f       	add	r30, r24
    2f56:	f9 1f       	adc	r31, r25
    2f58:	d6 01       	movw	r26, r12
    2f5a:	0e 94 d2 17 	call	0x2fa4	; 0x2fa4 <__muldi3_6>
    2f5e:	2f 91       	pop	r18
    2f60:	3f 91       	pop	r19
    2f62:	d6 01       	movw	r26, r12
    2f64:	0e 94 d9 18 	call	0x31b2	; 0x31b2 <__umulhisi3>
    2f68:	c6 0f       	add	r28, r22
    2f6a:	d7 1f       	adc	r29, r23
    2f6c:	e8 1f       	adc	r30, r24
    2f6e:	f9 1f       	adc	r31, r25
    2f70:	af 91       	pop	r26
    2f72:	bf 91       	pop	r27
    2f74:	0e 94 d2 17 	call	0x2fa4	; 0x2fa4 <__muldi3_6>
    2f78:	2f 91       	pop	r18
    2f7a:	3f 91       	pop	r19
    2f7c:	0e 94 d9 18 	call	0x31b2	; 0x31b2 <__umulhisi3>
    2f80:	c6 0f       	add	r28, r22
    2f82:	d7 1f       	adc	r29, r23
    2f84:	e8 1f       	adc	r30, r24
    2f86:	f9 1f       	adc	r31, r25
    2f88:	d6 01       	movw	r26, r12
    2f8a:	0e 94 d9 18 	call	0x31b2	; 0x31b2 <__umulhisi3>
    2f8e:	e6 0f       	add	r30, r22
    2f90:	f7 1f       	adc	r31, r23
    2f92:	98 01       	movw	r18, r16
    2f94:	be 01       	movw	r22, r28
    2f96:	cf 01       	movw	r24, r30
    2f98:	11 24       	eor	r1, r1
    2f9a:	0f 91       	pop	r16
    2f9c:	1f 91       	pop	r17
    2f9e:	cf 91       	pop	r28
    2fa0:	df 91       	pop	r29
    2fa2:	08 95       	ret

00002fa4 <__muldi3_6>:
    2fa4:	0e 94 d9 18 	call	0x31b2	; 0x31b2 <__umulhisi3>
    2fa8:	46 0f       	add	r20, r22
    2faa:	57 1f       	adc	r21, r23
    2fac:	c8 1f       	adc	r28, r24
    2fae:	d9 1f       	adc	r29, r25
    2fb0:	08 f4       	brcc	.+2      	; 0x2fb4 <__muldi3_6+0x10>
    2fb2:	31 96       	adiw	r30, 0x01	; 1
    2fb4:	08 95       	ret

00002fb6 <__moddi3>:
    2fb6:	68 94       	set
    2fb8:	01 c0       	rjmp	.+2      	; 0x2fbc <__divdi3_moddi3>

00002fba <__divdi3>:
    2fba:	e8 94       	clt

00002fbc <__divdi3_moddi3>:
    2fbc:	f9 2f       	mov	r31, r25
    2fbe:	f1 2b       	or	r31, r17
    2fc0:	12 f0       	brmi	.+4      	; 0x2fc6 <__divdi3_moddi3+0xa>
    2fc2:	0c 94 0f 18 	jmp	0x301e	; 0x301e <__udivdi3_umoddi3>
    2fc6:	a0 e0       	ldi	r26, 0x00	; 0
    2fc8:	b0 e0       	ldi	r27, 0x00	; 0
    2fca:	e9 ee       	ldi	r30, 0xE9	; 233
    2fcc:	f7 e1       	ldi	r31, 0x17	; 23
    2fce:	0c 94 81 18 	jmp	0x3102	; 0x3102 <__prologue_saves__+0xc>
    2fd2:	09 2e       	mov	r0, r25
    2fd4:	05 94       	asr	r0
    2fd6:	22 f4       	brpl	.+8      	; 0x2fe0 <__divdi3_moddi3+0x24>
    2fd8:	0e 94 6b 18 	call	0x30d6	; 0x30d6 <__negdi2>
    2fdc:	11 23       	and	r17, r17
    2fde:	92 f4       	brpl	.+36     	; 0x3004 <__divdi3_moddi3+0x48>
    2fe0:	f0 e8       	ldi	r31, 0x80	; 128
    2fe2:	0f 26       	eor	r0, r31
    2fe4:	ff ef       	ldi	r31, 0xFF	; 255
    2fe6:	e0 94       	com	r14
    2fe8:	f0 94       	com	r15
    2fea:	00 95       	com	r16
    2fec:	10 95       	com	r17
    2fee:	b0 94       	com	r11
    2ff0:	c0 94       	com	r12
    2ff2:	d0 94       	com	r13
    2ff4:	a1 94       	neg	r10
    2ff6:	bf 0a       	sbc	r11, r31
    2ff8:	cf 0a       	sbc	r12, r31
    2ffa:	df 0a       	sbc	r13, r31
    2ffc:	ef 0a       	sbc	r14, r31
    2ffe:	ff 0a       	sbc	r15, r31
    3000:	0f 0b       	sbc	r16, r31
    3002:	1f 0b       	sbc	r17, r31
    3004:	0e 94 1a 18 	call	0x3034	; 0x3034 <__udivmod64>
    3008:	07 fc       	sbrc	r0, 7
    300a:	0e 94 6b 18 	call	0x30d6	; 0x30d6 <__negdi2>
    300e:	cd b7       	in	r28, 0x3d	; 61
    3010:	de b7       	in	r29, 0x3e	; 62
    3012:	ec e0       	ldi	r30, 0x0C	; 12
    3014:	0c 94 9d 18 	jmp	0x313a	; 0x313a <__epilogue_restores__+0xc>

00003018 <__umoddi3>:
    3018:	68 94       	set
    301a:	01 c0       	rjmp	.+2      	; 0x301e <__udivdi3_umoddi3>

0000301c <__udivdi3>:
    301c:	e8 94       	clt

0000301e <__udivdi3_umoddi3>:
    301e:	8f 92       	push	r8
    3020:	9f 92       	push	r9
    3022:	cf 93       	push	r28
    3024:	df 93       	push	r29
    3026:	0e 94 1a 18 	call	0x3034	; 0x3034 <__udivmod64>
    302a:	df 91       	pop	r29
    302c:	cf 91       	pop	r28
    302e:	9f 90       	pop	r9
    3030:	8f 90       	pop	r8
    3032:	08 95       	ret

00003034 <__udivmod64>:
    3034:	88 24       	eor	r8, r8
    3036:	99 24       	eor	r9, r9
    3038:	f4 01       	movw	r30, r8
    303a:	e4 01       	movw	r28, r8
    303c:	b0 e4       	ldi	r27, 0x40	; 64
    303e:	9f 93       	push	r25
    3040:	aa 27       	eor	r26, r26
    3042:	9a 15       	cp	r25, r10
    3044:	8b 04       	cpc	r8, r11
    3046:	9c 04       	cpc	r9, r12
    3048:	ed 05       	cpc	r30, r13
    304a:	fe 05       	cpc	r31, r14
    304c:	cf 05       	cpc	r28, r15
    304e:	d0 07       	cpc	r29, r16
    3050:	a1 07       	cpc	r26, r17
    3052:	98 f4       	brcc	.+38     	; 0x307a <__udivmod64+0x46>
    3054:	ad 2f       	mov	r26, r29
    3056:	dc 2f       	mov	r29, r28
    3058:	cf 2f       	mov	r28, r31
    305a:	fe 2f       	mov	r31, r30
    305c:	e9 2d       	mov	r30, r9
    305e:	98 2c       	mov	r9, r8
    3060:	89 2e       	mov	r8, r25
    3062:	98 2f       	mov	r25, r24
    3064:	87 2f       	mov	r24, r23
    3066:	76 2f       	mov	r23, r22
    3068:	65 2f       	mov	r22, r21
    306a:	54 2f       	mov	r21, r20
    306c:	43 2f       	mov	r20, r19
    306e:	32 2f       	mov	r19, r18
    3070:	22 27       	eor	r18, r18
    3072:	b8 50       	subi	r27, 0x08	; 8
    3074:	31 f7       	brne	.-52     	; 0x3042 <__udivmod64+0xe>
    3076:	bf 91       	pop	r27
    3078:	27 c0       	rjmp	.+78     	; 0x30c8 <__udivmod64+0x94>
    307a:	1b 2e       	mov	r1, r27
    307c:	bf 91       	pop	r27
    307e:	bb 27       	eor	r27, r27
    3080:	22 0f       	add	r18, r18
    3082:	33 1f       	adc	r19, r19
    3084:	44 1f       	adc	r20, r20
    3086:	55 1f       	adc	r21, r21
    3088:	66 1f       	adc	r22, r22
    308a:	77 1f       	adc	r23, r23
    308c:	88 1f       	adc	r24, r24
    308e:	99 1f       	adc	r25, r25
    3090:	88 1c       	adc	r8, r8
    3092:	99 1c       	adc	r9, r9
    3094:	ee 1f       	adc	r30, r30
    3096:	ff 1f       	adc	r31, r31
    3098:	cc 1f       	adc	r28, r28
    309a:	dd 1f       	adc	r29, r29
    309c:	aa 1f       	adc	r26, r26
    309e:	bb 1f       	adc	r27, r27
    30a0:	8a 14       	cp	r8, r10
    30a2:	9b 04       	cpc	r9, r11
    30a4:	ec 05       	cpc	r30, r12
    30a6:	fd 05       	cpc	r31, r13
    30a8:	ce 05       	cpc	r28, r14
    30aa:	df 05       	cpc	r29, r15
    30ac:	a0 07       	cpc	r26, r16
    30ae:	b1 07       	cpc	r27, r17
    30b0:	48 f0       	brcs	.+18     	; 0x30c4 <__udivmod64+0x90>
    30b2:	8a 18       	sub	r8, r10
    30b4:	9b 08       	sbc	r9, r11
    30b6:	ec 09       	sbc	r30, r12
    30b8:	fd 09       	sbc	r31, r13
    30ba:	ce 09       	sbc	r28, r14
    30bc:	df 09       	sbc	r29, r15
    30be:	a0 0b       	sbc	r26, r16
    30c0:	b1 0b       	sbc	r27, r17
    30c2:	21 60       	ori	r18, 0x01	; 1
    30c4:	1a 94       	dec	r1
    30c6:	e1 f6       	brne	.-72     	; 0x3080 <__udivmod64+0x4c>
    30c8:	2e f4       	brtc	.+10     	; 0x30d4 <__udivmod64+0xa0>
    30ca:	94 01       	movw	r18, r8
    30cc:	af 01       	movw	r20, r30
    30ce:	be 01       	movw	r22, r28
    30d0:	cd 01       	movw	r24, r26
    30d2:	00 0c       	add	r0, r0
    30d4:	08 95       	ret

000030d6 <__negdi2>:
    30d6:	60 95       	com	r22
    30d8:	70 95       	com	r23
    30da:	80 95       	com	r24
    30dc:	90 95       	com	r25
    30de:	30 95       	com	r19
    30e0:	40 95       	com	r20
    30e2:	50 95       	com	r21
    30e4:	21 95       	neg	r18
    30e6:	3f 4f       	sbci	r19, 0xFF	; 255
    30e8:	4f 4f       	sbci	r20, 0xFF	; 255
    30ea:	5f 4f       	sbci	r21, 0xFF	; 255
    30ec:	6f 4f       	sbci	r22, 0xFF	; 255
    30ee:	7f 4f       	sbci	r23, 0xFF	; 255
    30f0:	8f 4f       	sbci	r24, 0xFF	; 255
    30f2:	9f 4f       	sbci	r25, 0xFF	; 255
    30f4:	08 95       	ret

000030f6 <__prologue_saves__>:
    30f6:	2f 92       	push	r2
    30f8:	3f 92       	push	r3
    30fa:	4f 92       	push	r4
    30fc:	5f 92       	push	r5
    30fe:	6f 92       	push	r6
    3100:	7f 92       	push	r7
    3102:	8f 92       	push	r8
    3104:	9f 92       	push	r9
    3106:	af 92       	push	r10
    3108:	bf 92       	push	r11
    310a:	cf 92       	push	r12
    310c:	df 92       	push	r13
    310e:	ef 92       	push	r14
    3110:	ff 92       	push	r15
    3112:	0f 93       	push	r16
    3114:	1f 93       	push	r17
    3116:	cf 93       	push	r28
    3118:	df 93       	push	r29
    311a:	cd b7       	in	r28, 0x3d	; 61
    311c:	de b7       	in	r29, 0x3e	; 62
    311e:	ca 1b       	sub	r28, r26
    3120:	db 0b       	sbc	r29, r27
    3122:	0f b6       	in	r0, 0x3f	; 63
    3124:	f8 94       	cli
    3126:	de bf       	out	0x3e, r29	; 62
    3128:	0f be       	out	0x3f, r0	; 63
    312a:	cd bf       	out	0x3d, r28	; 61
    312c:	09 94       	ijmp

0000312e <__epilogue_restores__>:
    312e:	2a 88       	ldd	r2, Y+18	; 0x12
    3130:	39 88       	ldd	r3, Y+17	; 0x11
    3132:	48 88       	ldd	r4, Y+16	; 0x10
    3134:	5f 84       	ldd	r5, Y+15	; 0x0f
    3136:	6e 84       	ldd	r6, Y+14	; 0x0e
    3138:	7d 84       	ldd	r7, Y+13	; 0x0d
    313a:	8c 84       	ldd	r8, Y+12	; 0x0c
    313c:	9b 84       	ldd	r9, Y+11	; 0x0b
    313e:	aa 84       	ldd	r10, Y+10	; 0x0a
    3140:	b9 84       	ldd	r11, Y+9	; 0x09
    3142:	c8 84       	ldd	r12, Y+8	; 0x08
    3144:	df 80       	ldd	r13, Y+7	; 0x07
    3146:	ee 80       	ldd	r14, Y+6	; 0x06
    3148:	fd 80       	ldd	r15, Y+5	; 0x05
    314a:	0c 81       	ldd	r16, Y+4	; 0x04
    314c:	1b 81       	ldd	r17, Y+3	; 0x03
    314e:	aa 81       	ldd	r26, Y+2	; 0x02
    3150:	b9 81       	ldd	r27, Y+1	; 0x01
    3152:	ce 0f       	add	r28, r30
    3154:	d1 1d       	adc	r29, r1
    3156:	0f b6       	in	r0, 0x3f	; 63
    3158:	f8 94       	cli
    315a:	de bf       	out	0x3e, r29	; 62
    315c:	0f be       	out	0x3f, r0	; 63
    315e:	cd bf       	out	0x3d, r28	; 61
    3160:	ed 01       	movw	r28, r26
    3162:	08 95       	ret

00003164 <__adddi3>:
    3164:	2a 0d       	add	r18, r10
    3166:	3b 1d       	adc	r19, r11
    3168:	4c 1d       	adc	r20, r12
    316a:	5d 1d       	adc	r21, r13
    316c:	6e 1d       	adc	r22, r14
    316e:	7f 1d       	adc	r23, r15
    3170:	80 1f       	adc	r24, r16
    3172:	91 1f       	adc	r25, r17
    3174:	08 95       	ret

00003176 <__subdi3>:
    3176:	2a 19       	sub	r18, r10
    3178:	3b 09       	sbc	r19, r11
    317a:	4c 09       	sbc	r20, r12
    317c:	5d 09       	sbc	r21, r13
    317e:	6e 09       	sbc	r22, r14
    3180:	7f 09       	sbc	r23, r15
    3182:	80 0b       	sbc	r24, r16
    3184:	91 0b       	sbc	r25, r17
    3186:	08 95       	ret

00003188 <__cmpdi2>:
    3188:	2a 15       	cp	r18, r10
    318a:	3b 05       	cpc	r19, r11
    318c:	4c 05       	cpc	r20, r12
    318e:	5d 05       	cpc	r21, r13
    3190:	6e 05       	cpc	r22, r14
    3192:	7f 05       	cpc	r23, r15
    3194:	80 07       	cpc	r24, r16
    3196:	91 07       	cpc	r25, r17
    3198:	08 95       	ret

0000319a <__cmpdi2_s8>:
    319a:	00 24       	eor	r0, r0
    319c:	a7 fd       	sbrc	r26, 7
    319e:	00 94       	com	r0
    31a0:	2a 17       	cp	r18, r26
    31a2:	30 05       	cpc	r19, r0
    31a4:	40 05       	cpc	r20, r0
    31a6:	50 05       	cpc	r21, r0
    31a8:	60 05       	cpc	r22, r0
    31aa:	70 05       	cpc	r23, r0
    31ac:	80 05       	cpc	r24, r0
    31ae:	90 05       	cpc	r25, r0
    31b0:	08 95       	ret

000031b2 <__umulhisi3>:
    31b2:	a2 9f       	mul	r26, r18
    31b4:	b0 01       	movw	r22, r0
    31b6:	b3 9f       	mul	r27, r19
    31b8:	c0 01       	movw	r24, r0
    31ba:	a3 9f       	mul	r26, r19
    31bc:	70 0d       	add	r23, r0
    31be:	81 1d       	adc	r24, r1
    31c0:	11 24       	eor	r1, r1
    31c2:	91 1d       	adc	r25, r1
    31c4:	b2 9f       	mul	r27, r18
    31c6:	70 0d       	add	r23, r0
    31c8:	81 1d       	adc	r24, r1
    31ca:	11 24       	eor	r1, r1
    31cc:	91 1d       	adc	r25, r1
    31ce:	08 95       	ret

000031d0 <__ftoa_engine>:
    31d0:	28 30       	cpi	r18, 0x08	; 8
    31d2:	08 f0       	brcs	.+2      	; 0x31d6 <__ftoa_engine+0x6>
    31d4:	27 e0       	ldi	r18, 0x07	; 7
    31d6:	33 27       	eor	r19, r19
    31d8:	da 01       	movw	r26, r20
    31da:	99 0f       	add	r25, r25
    31dc:	31 1d       	adc	r19, r1
    31de:	87 fd       	sbrc	r24, 7
    31e0:	91 60       	ori	r25, 0x01	; 1
    31e2:	00 96       	adiw	r24, 0x00	; 0
    31e4:	61 05       	cpc	r22, r1
    31e6:	71 05       	cpc	r23, r1
    31e8:	39 f4       	brne	.+14     	; 0x31f8 <__ftoa_engine+0x28>
    31ea:	32 60       	ori	r19, 0x02	; 2
    31ec:	2e 5f       	subi	r18, 0xFE	; 254
    31ee:	3d 93       	st	X+, r19
    31f0:	30 e3       	ldi	r19, 0x30	; 48
    31f2:	2a 95       	dec	r18
    31f4:	e1 f7       	brne	.-8      	; 0x31ee <__ftoa_engine+0x1e>
    31f6:	08 95       	ret
    31f8:	9f 3f       	cpi	r25, 0xFF	; 255
    31fa:	30 f0       	brcs	.+12     	; 0x3208 <__ftoa_engine+0x38>
    31fc:	80 38       	cpi	r24, 0x80	; 128
    31fe:	71 05       	cpc	r23, r1
    3200:	61 05       	cpc	r22, r1
    3202:	09 f0       	breq	.+2      	; 0x3206 <__ftoa_engine+0x36>
    3204:	3c 5f       	subi	r19, 0xFC	; 252
    3206:	3c 5f       	subi	r19, 0xFC	; 252
    3208:	3d 93       	st	X+, r19
    320a:	91 30       	cpi	r25, 0x01	; 1
    320c:	08 f0       	brcs	.+2      	; 0x3210 <__ftoa_engine+0x40>
    320e:	80 68       	ori	r24, 0x80	; 128
    3210:	91 1d       	adc	r25, r1
    3212:	df 93       	push	r29
    3214:	cf 93       	push	r28
    3216:	1f 93       	push	r17
    3218:	0f 93       	push	r16
    321a:	ff 92       	push	r15
    321c:	ef 92       	push	r14
    321e:	19 2f       	mov	r17, r25
    3220:	98 7f       	andi	r25, 0xF8	; 248
    3222:	96 95       	lsr	r25
    3224:	e9 2f       	mov	r30, r25
    3226:	96 95       	lsr	r25
    3228:	96 95       	lsr	r25
    322a:	e9 0f       	add	r30, r25
    322c:	ff 27       	eor	r31, r31
    322e:	ea 54       	subi	r30, 0x4A	; 74
    3230:	ff 4f       	sbci	r31, 0xFF	; 255
    3232:	99 27       	eor	r25, r25
    3234:	33 27       	eor	r19, r19
    3236:	ee 24       	eor	r14, r14
    3238:	ff 24       	eor	r15, r15
    323a:	a7 01       	movw	r20, r14
    323c:	e7 01       	movw	r28, r14
    323e:	05 90       	lpm	r0, Z+
    3240:	08 94       	sec
    3242:	07 94       	ror	r0
    3244:	28 f4       	brcc	.+10     	; 0x3250 <__ftoa_engine+0x80>
    3246:	36 0f       	add	r19, r22
    3248:	e7 1e       	adc	r14, r23
    324a:	f8 1e       	adc	r15, r24
    324c:	49 1f       	adc	r20, r25
    324e:	51 1d       	adc	r21, r1
    3250:	66 0f       	add	r22, r22
    3252:	77 1f       	adc	r23, r23
    3254:	88 1f       	adc	r24, r24
    3256:	99 1f       	adc	r25, r25
    3258:	06 94       	lsr	r0
    325a:	a1 f7       	brne	.-24     	; 0x3244 <__ftoa_engine+0x74>
    325c:	05 90       	lpm	r0, Z+
    325e:	07 94       	ror	r0
    3260:	28 f4       	brcc	.+10     	; 0x326c <__ftoa_engine+0x9c>
    3262:	e7 0e       	add	r14, r23
    3264:	f8 1e       	adc	r15, r24
    3266:	49 1f       	adc	r20, r25
    3268:	56 1f       	adc	r21, r22
    326a:	c1 1d       	adc	r28, r1
    326c:	77 0f       	add	r23, r23
    326e:	88 1f       	adc	r24, r24
    3270:	99 1f       	adc	r25, r25
    3272:	66 1f       	adc	r22, r22
    3274:	06 94       	lsr	r0
    3276:	a1 f7       	brne	.-24     	; 0x3260 <__ftoa_engine+0x90>
    3278:	05 90       	lpm	r0, Z+
    327a:	07 94       	ror	r0
    327c:	28 f4       	brcc	.+10     	; 0x3288 <__ftoa_engine+0xb8>
    327e:	f8 0e       	add	r15, r24
    3280:	49 1f       	adc	r20, r25
    3282:	56 1f       	adc	r21, r22
    3284:	c7 1f       	adc	r28, r23
    3286:	d1 1d       	adc	r29, r1
    3288:	88 0f       	add	r24, r24
    328a:	99 1f       	adc	r25, r25
    328c:	66 1f       	adc	r22, r22
    328e:	77 1f       	adc	r23, r23
    3290:	06 94       	lsr	r0
    3292:	a1 f7       	brne	.-24     	; 0x327c <__ftoa_engine+0xac>
    3294:	05 90       	lpm	r0, Z+
    3296:	07 94       	ror	r0
    3298:	20 f4       	brcc	.+8      	; 0x32a2 <__ftoa_engine+0xd2>
    329a:	49 0f       	add	r20, r25
    329c:	56 1f       	adc	r21, r22
    329e:	c7 1f       	adc	r28, r23
    32a0:	d8 1f       	adc	r29, r24
    32a2:	99 0f       	add	r25, r25
    32a4:	66 1f       	adc	r22, r22
    32a6:	77 1f       	adc	r23, r23
    32a8:	88 1f       	adc	r24, r24
    32aa:	06 94       	lsr	r0
    32ac:	a9 f7       	brne	.-22     	; 0x3298 <__ftoa_engine+0xc8>
    32ae:	84 91       	lpm	r24, Z
    32b0:	10 95       	com	r17
    32b2:	17 70       	andi	r17, 0x07	; 7
    32b4:	41 f0       	breq	.+16     	; 0x32c6 <__ftoa_engine+0xf6>
    32b6:	d6 95       	lsr	r29
    32b8:	c7 95       	ror	r28
    32ba:	57 95       	ror	r21
    32bc:	47 95       	ror	r20
    32be:	f7 94       	ror	r15
    32c0:	e7 94       	ror	r14
    32c2:	1a 95       	dec	r17
    32c4:	c1 f7       	brne	.-16     	; 0x32b6 <__ftoa_engine+0xe6>
    32c6:	ec e5       	ldi	r30, 0x5C	; 92
    32c8:	f0 e0       	ldi	r31, 0x00	; 0
    32ca:	68 94       	set
    32cc:	15 90       	lpm	r1, Z+
    32ce:	15 91       	lpm	r17, Z+
    32d0:	35 91       	lpm	r19, Z+
    32d2:	65 91       	lpm	r22, Z+
    32d4:	95 91       	lpm	r25, Z+
    32d6:	05 90       	lpm	r0, Z+
    32d8:	7f e2       	ldi	r23, 0x2F	; 47
    32da:	73 95       	inc	r23
    32dc:	e1 18       	sub	r14, r1
    32de:	f1 0a       	sbc	r15, r17
    32e0:	43 0b       	sbc	r20, r19
    32e2:	56 0b       	sbc	r21, r22
    32e4:	c9 0b       	sbc	r28, r25
    32e6:	d0 09       	sbc	r29, r0
    32e8:	c0 f7       	brcc	.-16     	; 0x32da <__ftoa_engine+0x10a>
    32ea:	e1 0c       	add	r14, r1
    32ec:	f1 1e       	adc	r15, r17
    32ee:	43 1f       	adc	r20, r19
    32f0:	56 1f       	adc	r21, r22
    32f2:	c9 1f       	adc	r28, r25
    32f4:	d0 1d       	adc	r29, r0
    32f6:	7e f4       	brtc	.+30     	; 0x3316 <__ftoa_engine+0x146>
    32f8:	70 33       	cpi	r23, 0x30	; 48
    32fa:	11 f4       	brne	.+4      	; 0x3300 <__ftoa_engine+0x130>
    32fc:	8a 95       	dec	r24
    32fe:	e6 cf       	rjmp	.-52     	; 0x32cc <__ftoa_engine+0xfc>
    3300:	e8 94       	clt
    3302:	01 50       	subi	r16, 0x01	; 1
    3304:	30 f0       	brcs	.+12     	; 0x3312 <__ftoa_engine+0x142>
    3306:	08 0f       	add	r16, r24
    3308:	0a f4       	brpl	.+2      	; 0x330c <__ftoa_engine+0x13c>
    330a:	00 27       	eor	r16, r16
    330c:	02 17       	cp	r16, r18
    330e:	08 f4       	brcc	.+2      	; 0x3312 <__ftoa_engine+0x142>
    3310:	20 2f       	mov	r18, r16
    3312:	23 95       	inc	r18
    3314:	02 2f       	mov	r16, r18
    3316:	7a 33       	cpi	r23, 0x3A	; 58
    3318:	28 f0       	brcs	.+10     	; 0x3324 <__ftoa_engine+0x154>
    331a:	79 e3       	ldi	r23, 0x39	; 57
    331c:	7d 93       	st	X+, r23
    331e:	2a 95       	dec	r18
    3320:	e9 f7       	brne	.-6      	; 0x331c <__ftoa_engine+0x14c>
    3322:	10 c0       	rjmp	.+32     	; 0x3344 <__ftoa_engine+0x174>
    3324:	7d 93       	st	X+, r23
    3326:	2a 95       	dec	r18
    3328:	89 f6       	brne	.-94     	; 0x32cc <__ftoa_engine+0xfc>
    332a:	06 94       	lsr	r0
    332c:	97 95       	ror	r25
    332e:	67 95       	ror	r22
    3330:	37 95       	ror	r19
    3332:	17 95       	ror	r17
    3334:	17 94       	ror	r1
    3336:	e1 18       	sub	r14, r1
    3338:	f1 0a       	sbc	r15, r17
    333a:	43 0b       	sbc	r20, r19
    333c:	56 0b       	sbc	r21, r22
    333e:	c9 0b       	sbc	r28, r25
    3340:	d0 09       	sbc	r29, r0
    3342:	98 f0       	brcs	.+38     	; 0x336a <__ftoa_engine+0x19a>
    3344:	23 95       	inc	r18
    3346:	7e 91       	ld	r23, -X
    3348:	73 95       	inc	r23
    334a:	7a 33       	cpi	r23, 0x3A	; 58
    334c:	08 f0       	brcs	.+2      	; 0x3350 <__ftoa_engine+0x180>
    334e:	70 e3       	ldi	r23, 0x30	; 48
    3350:	7c 93       	st	X, r23
    3352:	20 13       	cpse	r18, r16
    3354:	b8 f7       	brcc	.-18     	; 0x3344 <__ftoa_engine+0x174>
    3356:	7e 91       	ld	r23, -X
    3358:	70 61       	ori	r23, 0x10	; 16
    335a:	7d 93       	st	X+, r23
    335c:	30 f0       	brcs	.+12     	; 0x336a <__ftoa_engine+0x19a>
    335e:	83 95       	inc	r24
    3360:	71 e3       	ldi	r23, 0x31	; 49
    3362:	7d 93       	st	X+, r23
    3364:	70 e3       	ldi	r23, 0x30	; 48
    3366:	2a 95       	dec	r18
    3368:	e1 f7       	brne	.-8      	; 0x3362 <__ftoa_engine+0x192>
    336a:	11 24       	eor	r1, r1
    336c:	ef 90       	pop	r14
    336e:	ff 90       	pop	r15
    3370:	0f 91       	pop	r16
    3372:	1f 91       	pop	r17
    3374:	cf 91       	pop	r28
    3376:	df 91       	pop	r29
    3378:	99 27       	eor	r25, r25
    337a:	87 fd       	sbrc	r24, 7
    337c:	90 95       	com	r25
    337e:	08 95       	ret

00003380 <strnlen_P>:
    3380:	fc 01       	movw	r30, r24
    3382:	05 90       	lpm	r0, Z+
    3384:	61 50       	subi	r22, 0x01	; 1
    3386:	70 40       	sbci	r23, 0x00	; 0
    3388:	01 10       	cpse	r0, r1
    338a:	d8 f7       	brcc	.-10     	; 0x3382 <strnlen_P+0x2>
    338c:	80 95       	com	r24
    338e:	90 95       	com	r25
    3390:	8e 0f       	add	r24, r30
    3392:	9f 1f       	adc	r25, r31
    3394:	08 95       	ret

00003396 <memset>:
    3396:	dc 01       	movw	r26, r24
    3398:	01 c0       	rjmp	.+2      	; 0x339c <memset+0x6>
    339a:	6d 93       	st	X+, r22
    339c:	41 50       	subi	r20, 0x01	; 1
    339e:	50 40       	sbci	r21, 0x00	; 0
    33a0:	e0 f7       	brcc	.-8      	; 0x339a <memset+0x4>
    33a2:	08 95       	ret

000033a4 <strcat>:
    33a4:	fb 01       	movw	r30, r22
    33a6:	dc 01       	movw	r26, r24
    33a8:	0d 90       	ld	r0, X+
    33aa:	00 20       	and	r0, r0
    33ac:	e9 f7       	brne	.-6      	; 0x33a8 <strcat+0x4>
    33ae:	11 97       	sbiw	r26, 0x01	; 1
    33b0:	01 90       	ld	r0, Z+
    33b2:	0d 92       	st	X+, r0
    33b4:	00 20       	and	r0, r0
    33b6:	e1 f7       	brne	.-8      	; 0x33b0 <strcat+0xc>
    33b8:	08 95       	ret

000033ba <strlen>:
    33ba:	fc 01       	movw	r30, r24
    33bc:	01 90       	ld	r0, Z+
    33be:	00 20       	and	r0, r0
    33c0:	e9 f7       	brne	.-6      	; 0x33bc <strlen+0x2>
    33c2:	80 95       	com	r24
    33c4:	90 95       	com	r25
    33c6:	8e 0f       	add	r24, r30
    33c8:	9f 1f       	adc	r25, r31
    33ca:	08 95       	ret

000033cc <strnlen>:
    33cc:	fc 01       	movw	r30, r24
    33ce:	61 50       	subi	r22, 0x01	; 1
    33d0:	70 40       	sbci	r23, 0x00	; 0
    33d2:	01 90       	ld	r0, Z+
    33d4:	01 10       	cpse	r0, r1
    33d6:	d8 f7       	brcc	.-10     	; 0x33ce <strnlen+0x2>
    33d8:	80 95       	com	r24
    33da:	90 95       	com	r25
    33dc:	8e 0f       	add	r24, r30
    33de:	9f 1f       	adc	r25, r31
    33e0:	08 95       	ret

000033e2 <strrev>:
    33e2:	dc 01       	movw	r26, r24
    33e4:	fc 01       	movw	r30, r24
    33e6:	67 2f       	mov	r22, r23
    33e8:	71 91       	ld	r23, Z+
    33ea:	77 23       	and	r23, r23
    33ec:	e1 f7       	brne	.-8      	; 0x33e6 <strrev+0x4>
    33ee:	32 97       	sbiw	r30, 0x02	; 2
    33f0:	04 c0       	rjmp	.+8      	; 0x33fa <strrev+0x18>
    33f2:	7c 91       	ld	r23, X
    33f4:	6d 93       	st	X+, r22
    33f6:	70 83       	st	Z, r23
    33f8:	62 91       	ld	r22, -Z
    33fa:	ae 17       	cp	r26, r30
    33fc:	bf 07       	cpc	r27, r31
    33fe:	c8 f3       	brcs	.-14     	; 0x33f2 <strrev+0x10>
    3400:	08 95       	ret

00003402 <fputc>:
    3402:	0f 93       	push	r16
    3404:	1f 93       	push	r17
    3406:	cf 93       	push	r28
    3408:	df 93       	push	r29
    340a:	fb 01       	movw	r30, r22
    340c:	23 81       	ldd	r18, Z+3	; 0x03
    340e:	21 fd       	sbrc	r18, 1
    3410:	03 c0       	rjmp	.+6      	; 0x3418 <fputc+0x16>
    3412:	8f ef       	ldi	r24, 0xFF	; 255
    3414:	9f ef       	ldi	r25, 0xFF	; 255
    3416:	2c c0       	rjmp	.+88     	; 0x3470 <fputc+0x6e>
    3418:	22 ff       	sbrs	r18, 2
    341a:	16 c0       	rjmp	.+44     	; 0x3448 <fputc+0x46>
    341c:	46 81       	ldd	r20, Z+6	; 0x06
    341e:	57 81       	ldd	r21, Z+7	; 0x07
    3420:	24 81       	ldd	r18, Z+4	; 0x04
    3422:	35 81       	ldd	r19, Z+5	; 0x05
    3424:	42 17       	cp	r20, r18
    3426:	53 07       	cpc	r21, r19
    3428:	44 f4       	brge	.+16     	; 0x343a <fputc+0x38>
    342a:	a0 81       	ld	r26, Z
    342c:	b1 81       	ldd	r27, Z+1	; 0x01
    342e:	9d 01       	movw	r18, r26
    3430:	2f 5f       	subi	r18, 0xFF	; 255
    3432:	3f 4f       	sbci	r19, 0xFF	; 255
    3434:	31 83       	std	Z+1, r19	; 0x01
    3436:	20 83       	st	Z, r18
    3438:	8c 93       	st	X, r24
    343a:	26 81       	ldd	r18, Z+6	; 0x06
    343c:	37 81       	ldd	r19, Z+7	; 0x07
    343e:	2f 5f       	subi	r18, 0xFF	; 255
    3440:	3f 4f       	sbci	r19, 0xFF	; 255
    3442:	37 83       	std	Z+7, r19	; 0x07
    3444:	26 83       	std	Z+6, r18	; 0x06
    3446:	14 c0       	rjmp	.+40     	; 0x3470 <fputc+0x6e>
    3448:	8b 01       	movw	r16, r22
    344a:	ec 01       	movw	r28, r24
    344c:	fb 01       	movw	r30, r22
    344e:	00 84       	ldd	r0, Z+8	; 0x08
    3450:	f1 85       	ldd	r31, Z+9	; 0x09
    3452:	e0 2d       	mov	r30, r0
    3454:	09 95       	icall
    3456:	89 2b       	or	r24, r25
    3458:	e1 f6       	brne	.-72     	; 0x3412 <fputc+0x10>
    345a:	d8 01       	movw	r26, r16
    345c:	16 96       	adiw	r26, 0x06	; 6
    345e:	8d 91       	ld	r24, X+
    3460:	9c 91       	ld	r25, X
    3462:	17 97       	sbiw	r26, 0x07	; 7
    3464:	01 96       	adiw	r24, 0x01	; 1
    3466:	17 96       	adiw	r26, 0x07	; 7
    3468:	9c 93       	st	X, r25
    346a:	8e 93       	st	-X, r24
    346c:	16 97       	sbiw	r26, 0x06	; 6
    346e:	ce 01       	movw	r24, r28
    3470:	df 91       	pop	r29
    3472:	cf 91       	pop	r28
    3474:	1f 91       	pop	r17
    3476:	0f 91       	pop	r16
    3478:	08 95       	ret

0000347a <sprintf>:
    347a:	ae e0       	ldi	r26, 0x0E	; 14
    347c:	b0 e0       	ldi	r27, 0x00	; 0
    347e:	e3 e4       	ldi	r30, 0x43	; 67
    3480:	fa e1       	ldi	r31, 0x1A	; 26
    3482:	0c 94 89 18 	jmp	0x3112	; 0x3112 <__prologue_saves__+0x1c>
    3486:	0d 89       	ldd	r16, Y+21	; 0x15
    3488:	1e 89       	ldd	r17, Y+22	; 0x16
    348a:	86 e0       	ldi	r24, 0x06	; 6
    348c:	8c 83       	std	Y+4, r24	; 0x04
    348e:	1a 83       	std	Y+2, r17	; 0x02
    3490:	09 83       	std	Y+1, r16	; 0x01
    3492:	8f ef       	ldi	r24, 0xFF	; 255
    3494:	9f e7       	ldi	r25, 0x7F	; 127
    3496:	9e 83       	std	Y+6, r25	; 0x06
    3498:	8d 83       	std	Y+5, r24	; 0x05
    349a:	ae 01       	movw	r20, r28
    349c:	47 5e       	subi	r20, 0xE7	; 231
    349e:	5f 4f       	sbci	r21, 0xFF	; 255
    34a0:	6f 89       	ldd	r22, Y+23	; 0x17
    34a2:	78 8d       	ldd	r23, Y+24	; 0x18
    34a4:	ce 01       	movw	r24, r28
    34a6:	01 96       	adiw	r24, 0x01	; 1
    34a8:	0e 94 05 14 	call	0x280a	; 0x280a <vfprintf>
    34ac:	ef 81       	ldd	r30, Y+7	; 0x07
    34ae:	f8 85       	ldd	r31, Y+8	; 0x08
    34b0:	e0 0f       	add	r30, r16
    34b2:	f1 1f       	adc	r31, r17
    34b4:	10 82       	st	Z, r1
    34b6:	2e 96       	adiw	r28, 0x0e	; 14
    34b8:	e4 e0       	ldi	r30, 0x04	; 4
    34ba:	0c 94 a5 18 	jmp	0x314a	; 0x314a <__epilogue_restores__+0x1c>

000034be <__ultoa_invert>:
    34be:	fa 01       	movw	r30, r20
    34c0:	aa 27       	eor	r26, r26
    34c2:	28 30       	cpi	r18, 0x08	; 8
    34c4:	51 f1       	breq	.+84     	; 0x351a <__ultoa_invert+0x5c>
    34c6:	20 31       	cpi	r18, 0x10	; 16
    34c8:	81 f1       	breq	.+96     	; 0x352a <__ultoa_invert+0x6c>
    34ca:	e8 94       	clt
    34cc:	6f 93       	push	r22
    34ce:	6e 7f       	andi	r22, 0xFE	; 254
    34d0:	6e 5f       	subi	r22, 0xFE	; 254
    34d2:	7f 4f       	sbci	r23, 0xFF	; 255
    34d4:	8f 4f       	sbci	r24, 0xFF	; 255
    34d6:	9f 4f       	sbci	r25, 0xFF	; 255
    34d8:	af 4f       	sbci	r26, 0xFF	; 255
    34da:	b1 e0       	ldi	r27, 0x01	; 1
    34dc:	3e d0       	rcall	.+124    	; 0x355a <__ultoa_invert+0x9c>
    34de:	b4 e0       	ldi	r27, 0x04	; 4
    34e0:	3c d0       	rcall	.+120    	; 0x355a <__ultoa_invert+0x9c>
    34e2:	67 0f       	add	r22, r23
    34e4:	78 1f       	adc	r23, r24
    34e6:	89 1f       	adc	r24, r25
    34e8:	9a 1f       	adc	r25, r26
    34ea:	a1 1d       	adc	r26, r1
    34ec:	68 0f       	add	r22, r24
    34ee:	79 1f       	adc	r23, r25
    34f0:	8a 1f       	adc	r24, r26
    34f2:	91 1d       	adc	r25, r1
    34f4:	a1 1d       	adc	r26, r1
    34f6:	6a 0f       	add	r22, r26
    34f8:	71 1d       	adc	r23, r1
    34fa:	81 1d       	adc	r24, r1
    34fc:	91 1d       	adc	r25, r1
    34fe:	a1 1d       	adc	r26, r1
    3500:	20 d0       	rcall	.+64     	; 0x3542 <__ultoa_invert+0x84>
    3502:	09 f4       	brne	.+2      	; 0x3506 <__ultoa_invert+0x48>
    3504:	68 94       	set
    3506:	3f 91       	pop	r19
    3508:	2a e0       	ldi	r18, 0x0A	; 10
    350a:	26 9f       	mul	r18, r22
    350c:	11 24       	eor	r1, r1
    350e:	30 19       	sub	r19, r0
    3510:	30 5d       	subi	r19, 0xD0	; 208
    3512:	31 93       	st	Z+, r19
    3514:	de f6       	brtc	.-74     	; 0x34cc <__ultoa_invert+0xe>
    3516:	cf 01       	movw	r24, r30
    3518:	08 95       	ret
    351a:	46 2f       	mov	r20, r22
    351c:	47 70       	andi	r20, 0x07	; 7
    351e:	40 5d       	subi	r20, 0xD0	; 208
    3520:	41 93       	st	Z+, r20
    3522:	b3 e0       	ldi	r27, 0x03	; 3
    3524:	0f d0       	rcall	.+30     	; 0x3544 <__ultoa_invert+0x86>
    3526:	c9 f7       	brne	.-14     	; 0x351a <__ultoa_invert+0x5c>
    3528:	f6 cf       	rjmp	.-20     	; 0x3516 <__ultoa_invert+0x58>
    352a:	46 2f       	mov	r20, r22
    352c:	4f 70       	andi	r20, 0x0F	; 15
    352e:	40 5d       	subi	r20, 0xD0	; 208
    3530:	4a 33       	cpi	r20, 0x3A	; 58
    3532:	18 f0       	brcs	.+6      	; 0x353a <__ultoa_invert+0x7c>
    3534:	49 5d       	subi	r20, 0xD9	; 217
    3536:	31 fd       	sbrc	r19, 1
    3538:	40 52       	subi	r20, 0x20	; 32
    353a:	41 93       	st	Z+, r20
    353c:	02 d0       	rcall	.+4      	; 0x3542 <__ultoa_invert+0x84>
    353e:	a9 f7       	brne	.-22     	; 0x352a <__ultoa_invert+0x6c>
    3540:	ea cf       	rjmp	.-44     	; 0x3516 <__ultoa_invert+0x58>
    3542:	b4 e0       	ldi	r27, 0x04	; 4
    3544:	a6 95       	lsr	r26
    3546:	97 95       	ror	r25
    3548:	87 95       	ror	r24
    354a:	77 95       	ror	r23
    354c:	67 95       	ror	r22
    354e:	ba 95       	dec	r27
    3550:	c9 f7       	brne	.-14     	; 0x3544 <__ultoa_invert+0x86>
    3552:	00 97       	sbiw	r24, 0x00	; 0
    3554:	61 05       	cpc	r22, r1
    3556:	71 05       	cpc	r23, r1
    3558:	08 95       	ret
    355a:	9b 01       	movw	r18, r22
    355c:	ac 01       	movw	r20, r24
    355e:	0a 2e       	mov	r0, r26
    3560:	06 94       	lsr	r0
    3562:	57 95       	ror	r21
    3564:	47 95       	ror	r20
    3566:	37 95       	ror	r19
    3568:	27 95       	ror	r18
    356a:	ba 95       	dec	r27
    356c:	c9 f7       	brne	.-14     	; 0x3560 <__ultoa_invert+0xa2>
    356e:	62 0f       	add	r22, r18
    3570:	73 1f       	adc	r23, r19
    3572:	84 1f       	adc	r24, r20
    3574:	95 1f       	adc	r25, r21
    3576:	a0 1d       	adc	r26, r0
    3578:	08 95       	ret

0000357a <_exit>:
    357a:	f8 94       	cli

0000357c <__stop_program>:
    357c:	ff cf       	rjmp	.-2      	; 0x357c <__stop_program>
